// 
// Decompiled by Procyon v0.6-prerelease
// 

package twilightforest.block;

import twilightforest.TwilightForestMod;
import net.minecraftforge.registries.ForgeRegistries;
import twilightforest.enums.PlantVariant;
import twilightforest.enums.FireJetVariant;
import twilightforest.world.feature.tree.SmallOakTree;
import twilightforest.world.feature.tree.CanopyTree;
import twilightforest.world.feature.tree.MangroveTree;
import twilightforest.world.feature.tree.DarkCanopyTree;
import twilightforest.world.feature.tree.HollowTree;
import twilightforest.world.feature.tree.TimeTree;
import twilightforest.world.feature.tree.TransformationTree;
import twilightforest.world.feature.tree.MinersTree;
import twilightforest.world.feature.tree.SortingTree;
import net.minecraft.block.trees.Tree;
import twilightforest.world.feature.tree.RainboakTree;
import twilightforest.enums.MagicWoodVariant;
import twilightforest.enums.TowerDeviceVariant;
import twilightforest.enums.BossVariant;
import net.minecraft.block.BreakableBlock;
import net.minecraft.block.HugeMushroomBlock;
import net.minecraft.util.math.BlockPos;
import net.minecraft.world.IBlockReader;
import net.minecraftforge.common.ToolType;
import net.minecraft.block.SlabBlock;
import net.minecraft.block.WoodButtonBlock;
import net.minecraft.block.FenceBlock;
import net.minecraft.block.FenceGateBlock;
import net.minecraft.block.PressurePlateBlock;
import net.minecraft.block.SoundType;
import net.minecraft.block.BlockState;
import java.util.function.Supplier;
import net.minecraft.block.Blocks;
import net.minecraft.block.FireBlock;
import twilightforest.item.TFItems;
import net.minecraft.block.ComposterBlock;
import net.minecraft.util.IItemProvider;
import net.minecraft.util.Direction;
import net.minecraft.state.Property;
import net.minecraft.block.material.Material;
import net.minecraft.block.AbstractBlock;
import net.minecraft.block.material.MaterialColor;
import net.minecraftforge.eventbus.api.SubscribeEvent;
import twilightforest.compat.TFCompat;
import net.minecraft.item.Item;
import net.minecraftforge.event.RegistryEvent;
import net.minecraft.block.WallSignBlock;
import net.minecraft.block.StandingSignBlock;
import net.minecraft.block.TrapDoorBlock;
import net.minecraft.block.DoorBlock;
import net.minecraft.block.WoodType;
import net.minecraft.block.FlowerPotBlock;
import net.minecraft.block.StairsBlock;
import net.minecraft.block.SaplingBlock;
import net.minecraft.block.RotatedPillarBlock;
import net.minecraftforge.fml.RegistryObject;
import net.minecraft.block.Block;
import net.minecraftforge.registries.DeferredRegister;
import net.minecraftforge.fml.common.Mod;
import javax.annotation.Nonnull;

@Nonnull
@Mod.EventBusSubscriber(modid = "twilightforest", bus = Mod.EventBusSubscriber.Bus.MOD)
public class TFBlocks
{
    public static final DeferredRegister<Block> BLOCKS;
    public static final RegistryObject<RotatedPillarBlock> oak_log;
    public static final RegistryObject<RotatedPillarBlock> canopy_log;
    public static final RegistryObject<RotatedPillarBlock> mangrove_log;
    public static final RegistryObject<RotatedPillarBlock> dark_log;
    public static final RegistryObject<RotatedPillarBlock> stripped_oak_log;
    public static final RegistryObject<RotatedPillarBlock> stripped_canopy_log;
    public static final RegistryObject<RotatedPillarBlock> stripped_mangrove_log;
    public static final RegistryObject<RotatedPillarBlock> stripped_dark_log;
    public static final RegistryObject<RotatedPillarBlock> oak_wood;
    public static final RegistryObject<RotatedPillarBlock> canopy_wood;
    public static final RegistryObject<RotatedPillarBlock> mangrove_wood;
    public static final RegistryObject<RotatedPillarBlock> dark_wood;
    public static final RegistryObject<RotatedPillarBlock> stripped_oak_wood;
    public static final RegistryObject<RotatedPillarBlock> stripped_canopy_wood;
    public static final RegistryObject<RotatedPillarBlock> stripped_mangrove_wood;
    public static final RegistryObject<RotatedPillarBlock> stripped_dark_wood;
    public static final RegistryObject<Block> oak_leaves;
    public static final RegistryObject<Block> canopy_leaves;
    public static final RegistryObject<Block> mangrove_leaves;
    public static final RegistryObject<Block> dark_leaves;
    public static final RegistryObject<Block> rainboak_leaves;
    public static final RegistryObject<TFPortalBlock> twilight_portal;
    public static final RegistryObject<Block> maze_stone;
    public static final RegistryObject<Block> maze_stone_brick;
    public static final RegistryObject<Block> maze_stone_chiseled;
    public static final RegistryObject<Block> maze_stone_decorative;
    public static final RegistryObject<Block> maze_stone_cracked;
    public static final RegistryObject<Block> maze_stone_mossy;
    public static final RegistryObject<Block> maze_stone_mosaic;
    public static final RegistryObject<Block> maze_stone_border;
    public static final RegistryObject<Block> hedge;
    public static final RegistryObject<Block> boss_spawner_naga;
    public static final RegistryObject<Block> boss_spawner_lich;
    public static final RegistryObject<Block> boss_spawner_hydra;
    public static final RegistryObject<Block> boss_spawner_ur_ghast;
    public static final RegistryObject<Block> boss_spawner_knight_phantom;
    public static final RegistryObject<Block> boss_spawner_snow_queen;
    public static final RegistryObject<Block> boss_spawner_minoshroom;
    public static final RegistryObject<Block> boss_spawner_alpha_yeti;
    public static final RegistryObject<Block> boss_spawner_final_boss;
    public static final RegistryObject<Block> firefly_jar;
    public static final RegistryObject<Block> cicada_jar;
    public static final RegistryObject<Block> moss_patch;
    public static final RegistryObject<Block> mayapple;
    public static final RegistryObject<Block> clover_patch;
    public static final RegistryObject<Block> fiddlehead;
    public static final RegistryObject<Block> mushgloom;
    public static final RegistryObject<Block> torchberry_plant;
    public static final RegistryObject<Block> root_strand;
    public static final RegistryObject<Block> fallen_leaves;
    public static final RegistryObject<Block> root;
    public static final RegistryObject<Block> liveroot_block;
    public static final RegistryObject<Block> uncrafting_table;
    public static final RegistryObject<Block> smoker;
    public static final RegistryObject<Block> encased_smoker;
    public static final RegistryObject<Block> fire_jet;
    public static final RegistryObject<Block> encased_fire_jet;
    public static final RegistryObject<Block> naga_stone_head;
    public static final RegistryObject<Block> naga_stone;
    public static final RegistryObject<SaplingBlock> oak_sapling;
    public static final RegistryObject<SaplingBlock> canopy_sapling;
    public static final RegistryObject<SaplingBlock> mangrove_sapling;
    public static final RegistryObject<SaplingBlock> darkwood_sapling;
    public static final RegistryObject<SaplingBlock> hollow_oak_sapling;
    public static final RegistryObject<SaplingBlock> time_sapling;
    public static final RegistryObject<SaplingBlock> transformation_sapling;
    public static final RegistryObject<SaplingBlock> mining_sapling;
    public static final RegistryObject<SaplingBlock> sorting_sapling;
    public static final RegistryObject<SaplingBlock> rainboak_sapling;
    public static final RegistryObject<RotatedPillarBlock> time_log;
    public static final RegistryObject<RotatedPillarBlock> transformation_log;
    public static final RegistryObject<RotatedPillarBlock> mining_log;
    public static final RegistryObject<RotatedPillarBlock> sorting_log;
    public static final RegistryObject<RotatedPillarBlock> stripped_time_log;
    public static final RegistryObject<RotatedPillarBlock> stripped_transformation_log;
    public static final RegistryObject<RotatedPillarBlock> stripped_mining_log;
    public static final RegistryObject<RotatedPillarBlock> stripped_sorting_log;
    public static final RegistryObject<RotatedPillarBlock> time_wood;
    public static final RegistryObject<RotatedPillarBlock> transformation_wood;
    public static final RegistryObject<RotatedPillarBlock> mining_wood;
    public static final RegistryObject<RotatedPillarBlock> sorting_wood;
    public static final RegistryObject<RotatedPillarBlock> stripped_time_wood;
    public static final RegistryObject<RotatedPillarBlock> stripped_transformation_wood;
    public static final RegistryObject<RotatedPillarBlock> stripped_mining_wood;
    public static final RegistryObject<RotatedPillarBlock> stripped_sorting_wood;
    public static final RegistryObject<Block> time_log_core;
    public static final RegistryObject<Block> transformation_log_core;
    public static final RegistryObject<Block> mining_log_core;
    public static final RegistryObject<Block> sorting_log_core;
    public static final RegistryObject<Block> time_leaves;
    public static final RegistryObject<Block> transformation_leaves;
    public static final RegistryObject<Block> mining_leaves;
    public static final RegistryObject<Block> sorting_leaves;
    public static final RegistryObject<Block> firefly;
    public static final RegistryObject<Block> cicada;
    public static final RegistryObject<Block> moonworm;
    public static final RegistryObject<Block> tower_wood;
    public static final RegistryObject<Block> tower_wood_encased;
    public static final RegistryObject<Block> tower_wood_cracked;
    public static final RegistryObject<Block> tower_wood_mossy;
    public static final RegistryObject<Block> tower_wood_infested;
    public static final RegistryObject<Block> reappearing_block;
    public static final RegistryObject<Block> vanishing_block;
    public static final RegistryObject<Block> locked_vanishing_block;
    public static final RegistryObject<Block> carminite_builder;
    public static final RegistryObject<Block> built_block;
    public static final RegistryObject<Block> antibuilder;
    public static final RegistryObject<Block> antibuilt_block;
    public static final RegistryObject<GhastTrapBlock> ghast_trap;
    public static final RegistryObject<Block> carminite_reactor;
    public static final RegistryObject<Block> reactor_debris;
    public static final RegistryObject<Block> fake_gold;
    public static final RegistryObject<Block> fake_diamond;
    public static final RegistryObject<TrophyBlock> naga_trophy;
    public static final RegistryObject<TrophyBlock> lich_trophy;
    public static final RegistryObject<TrophyBlock> hydra_trophy;
    public static final RegistryObject<TrophyBlock> ur_ghast_trophy;
    public static final RegistryObject<TrophyBlock> knight_phantom_trophy;
    public static final RegistryObject<TrophyBlock> snow_queen_trophy;
    public static final RegistryObject<TrophyBlock> minoshroom_trophy;
    public static final RegistryObject<TrophyBlock> yeti_trophy;
    public static final RegistryObject<TrophyBlock> quest_ram_trophy;
    public static final RegistryObject<TrophyWallBlock> naga_wall_trophy;
    public static final RegistryObject<TrophyWallBlock> lich_wall_trophy;
    public static final RegistryObject<TrophyWallBlock> hydra_wall_trophy;
    public static final RegistryObject<TrophyWallBlock> ur_ghast_wall_trophy;
    public static final RegistryObject<TrophyWallBlock> knight_phantom_wall_trophy;
    public static final RegistryObject<TrophyWallBlock> snow_queen_wall_trophy;
    public static final RegistryObject<TrophyWallBlock> minoshroom_wall_trophy;
    public static final RegistryObject<TrophyWallBlock> yeti_wall_trophy;
    public static final RegistryObject<TrophyWallBlock> quest_ram_wall_trophy;
    public static final RegistryObject<Block> stronghold_shield;
    public static final RegistryObject<Block> trophy_pedestal;
    public static final RegistryObject<Block> aurora_block;
    public static final RegistryObject<RotatedPillarBlock> aurora_pillar;
    public static final RegistryObject<Block> aurora_slab;
    public static final RegistryObject<Block> auroralized_glass;
    public static final RegistryObject<Block> underbrick;
    public static final RegistryObject<Block> underbrick_mossy;
    public static final RegistryObject<Block> underbrick_cracked;
    public static final RegistryObject<Block> underbrick_floor;
    public static final RegistryObject<Block> brown_thorns;
    public static final RegistryObject<Block> green_thorns;
    public static final RegistryObject<Block> burnt_thorns;
    public static final RegistryObject<Block> thorn_rose;
    public static final RegistryObject<Block> thorn_leaves;
    public static final RegistryObject<Block> beanstalk_leaves;
    public static final RegistryObject<Block> deadrock;
    public static final RegistryObject<Block> deadrock_cracked;
    public static final RegistryObject<Block> deadrock_weathered;
    public static final RegistryObject<Block> trollsteinn;
    public static final RegistryObject<Block> wispy_cloud;
    public static final RegistryObject<Block> fluffy_cloud;
    public static final RegistryObject<Block> giant_cobblestone;
    public static final RegistryObject<Block> giant_log;
    public static final RegistryObject<Block> giant_leaves;
    public static final RegistryObject<Block> giant_obsidian;
    public static final RegistryObject<Block> uberous_soil;
    public static final RegistryObject<Block> huge_stalk;
    public static final RegistryObject<Block> huge_mushgloom;
    public static final RegistryObject<Block> huge_mushgloom_stem;
    public static final RegistryObject<Block> trollvidr;
    public static final RegistryObject<Block> unripe_trollber;
    public static final RegistryObject<Block> trollber;
    public static final RegistryObject<HugeLilyPadBlock> huge_lilypad;
    public static final RegistryObject<Block> huge_waterlily;
    public static final RegistryObject<RotatedPillarBlock> slider;
    public static final RegistryObject<Block> castle_brick;
    public static final RegistryObject<Block> castle_brick_worn;
    public static final RegistryObject<Block> castle_brick_cracked;
    public static final RegistryObject<Block> castle_brick_roof;
    public static final RegistryObject<Block> castle_brick_mossy;
    public static final RegistryObject<Block> castle_brick_frame;
    public static final RegistryObject<Block> castle_pillar_encased;
    public static final RegistryObject<Block> castle_pillar_encased_tile;
    public static final RegistryObject<Block> castle_pillar_bold;
    public static final RegistryObject<Block> castle_pillar_bold_tile;
    public static final RegistryObject<StairsBlock> castle_stairs_brick;
    public static final RegistryObject<StairsBlock> castle_stairs_worn;
    public static final RegistryObject<StairsBlock> castle_stairs_cracked;
    public static final RegistryObject<StairsBlock> castle_stairs_mossy;
    public static final RegistryObject<StairsBlock> castle_stairs_encased;
    public static final RegistryObject<StairsBlock> castle_stairs_bold;
    public static final RegistryObject<Block> castle_rune_brick_pink;
    public static final RegistryObject<Block> castle_rune_brick_blue;
    public static final RegistryObject<Block> castle_rune_brick_yellow;
    public static final RegistryObject<Block> castle_rune_brick_purple;
    public static final RegistryObject<Block> force_field_purple;
    public static final RegistryObject<Block> force_field_pink;
    public static final RegistryObject<Block> force_field_orange;
    public static final RegistryObject<Block> force_field_green;
    public static final RegistryObject<Block> force_field_blue;
    public static final RegistryObject<Block> cinder_furnace;
    public static final RegistryObject<RotatedPillarBlock> cinder_log;
    public static final RegistryObject<Block> cinder_wood;
    public static final RegistryObject<Block> castle_door_yellow;
    public static final RegistryObject<Block> castle_door_purple;
    public static final RegistryObject<Block> castle_door_pink;
    public static final RegistryObject<Block> castle_door_blue;
    public static final RegistryObject<Block> experiment_115;
    public static final RegistryObject<Block> twilight_portal_miniature_structure;
    public static final RegistryObject<Block> naga_courtyard_miniature_structure;
    public static final RegistryObject<Block> lich_tower_miniature_structure;
    public static final RegistryObject<Block> knightmetal_block;
    public static final RegistryObject<Block> ironwood_block;
    public static final RegistryObject<Block> fiery_block;
    public static final RegistryObject<Block> steeleaf_block;
    public static final RegistryObject<Block> arctic_fur_block;
    public static final RegistryObject<Block> carminite_block;
    public static final RegistryObject<Block> spiral_bricks;
    public static final RegistryObject<Block> etched_nagastone;
    public static final RegistryObject<Block> nagastone_pillar;
    public static final RegistryObject<StairsBlock> nagastone_stairs_left;
    public static final RegistryObject<StairsBlock> nagastone_stairs_right;
    public static final RegistryObject<Block> etched_nagastone_mossy;
    public static final RegistryObject<Block> nagastone_pillar_mossy;
    public static final RegistryObject<StairsBlock> nagastone_stairs_mossy_left;
    public static final RegistryObject<StairsBlock> nagastone_stairs_mossy_right;
    public static final RegistryObject<Block> etched_nagastone_weathered;
    public static final RegistryObject<Block> nagastone_pillar_weathered;
    public static final RegistryObject<StairsBlock> nagastone_stairs_weathered_left;
    public static final RegistryObject<StairsBlock> nagastone_stairs_weathered_right;
    public static final RegistryObject<Block> iron_ladder;
    public static final RegistryObject<RotatedPillarBlock> stone_twist;
    public static final RegistryObject<Block> stone_twist_thin;
    public static final RegistryObject<KeepsakeCasketBlock> keepsake_casket;
    public static final RegistryObject<FlowerPotBlock> potted_twilight_oak_sapling;
    public static final RegistryObject<FlowerPotBlock> potted_canopy_sapling;
    public static final RegistryObject<FlowerPotBlock> potted_mangrove_sapling;
    public static final RegistryObject<FlowerPotBlock> potted_darkwood_sapling;
    public static final RegistryObject<FlowerPotBlock> potted_hollow_oak_sapling;
    public static final RegistryObject<FlowerPotBlock> potted_rainboak_sapling;
    public static final RegistryObject<FlowerPotBlock> potted_time_sapling;
    public static final RegistryObject<FlowerPotBlock> potted_trans_sapling;
    public static final RegistryObject<FlowerPotBlock> potted_mine_sapling;
    public static final RegistryObject<FlowerPotBlock> potted_sort_sapling;
    public static final RegistryObject<FlowerPotBlock> potted_mayapple;
    public static final RegistryObject<FlowerPotBlock> potted_fiddlehead;
    public static final RegistryObject<FlowerPotBlock> potted_mushgloom;
    public static final RegistryObject<FlowerPotBlock> potted_thorn;
    public static final RegistryObject<FlowerPotBlock> potted_green_thorn;
    public static final RegistryObject<FlowerPotBlock> potted_dead_thorn;
    public static final WoodType TWILIGHT_OAK;
    public static final WoodType CANOPY;
    public static final WoodType MANGROVE;
    public static final WoodType DARKWOOD;
    public static final WoodType TIMEWOOD;
    public static final WoodType TRANSFORMATION;
    public static final WoodType MINING;
    public static final WoodType SORTING;
    public static final RegistryObject<Block> twilight_oak_planks;
    public static final RegistryObject<StairsBlock> twilight_oak_stairs;
    public static final RegistryObject<Block> twilight_oak_slab;
    public static final RegistryObject<Block> twilight_oak_button;
    public static final RegistryObject<Block> twilight_oak_fence;
    public static final RegistryObject<Block> twilight_oak_gate;
    public static final RegistryObject<Block> twilight_oak_plate;
    public static final RegistryObject<DoorBlock> twilight_oak_door;
    public static final RegistryObject<TrapDoorBlock> twilight_oak_trapdoor;
    public static final RegistryObject<StandingSignBlock> twilight_oak_sign;
    public static final RegistryObject<WallSignBlock> twilight_wall_sign;
    public static final RegistryObject<Block> canopy_planks;
    public static final RegistryObject<StairsBlock> canopy_stairs;
    public static final RegistryObject<Block> canopy_slab;
    public static final RegistryObject<Block> canopy_button;
    public static final RegistryObject<Block> canopy_fence;
    public static final RegistryObject<Block> canopy_gate;
    public static final RegistryObject<Block> canopy_plate;
    public static final RegistryObject<DoorBlock> canopy_door;
    public static final RegistryObject<TrapDoorBlock> canopy_trapdoor;
    public static final RegistryObject<StandingSignBlock> canopy_sign;
    public static final RegistryObject<WallSignBlock> canopy_wall_sign;
    public static final RegistryObject<Block> mangrove_planks;
    public static final RegistryObject<StairsBlock> mangrove_stairs;
    public static final RegistryObject<Block> mangrove_slab;
    public static final RegistryObject<Block> mangrove_button;
    public static final RegistryObject<Block> mangrove_fence;
    public static final RegistryObject<Block> mangrove_gate;
    public static final RegistryObject<Block> mangrove_plate;
    public static final RegistryObject<DoorBlock> mangrove_door;
    public static final RegistryObject<TrapDoorBlock> mangrove_trapdoor;
    public static final RegistryObject<StandingSignBlock> mangrove_sign;
    public static final RegistryObject<WallSignBlock> mangrove_wall_sign;
    public static final RegistryObject<Block> dark_planks;
    public static final RegistryObject<StairsBlock> dark_stairs;
    public static final RegistryObject<Block> dark_slab;
    public static final RegistryObject<Block> dark_button;
    public static final RegistryObject<Block> dark_fence;
    public static final RegistryObject<Block> dark_gate;
    public static final RegistryObject<Block> dark_plate;
    public static final RegistryObject<DoorBlock> dark_door;
    public static final RegistryObject<TrapDoorBlock> dark_trapdoor;
    public static final RegistryObject<StandingSignBlock> darkwood_sign;
    public static final RegistryObject<WallSignBlock> darkwood_wall_sign;
    public static final RegistryObject<Block> time_planks;
    public static final RegistryObject<StairsBlock> time_stairs;
    public static final RegistryObject<Block> time_slab;
    public static final RegistryObject<Block> time_button;
    public static final RegistryObject<Block> time_fence;
    public static final RegistryObject<Block> time_gate;
    public static final RegistryObject<Block> time_plate;
    public static final RegistryObject<DoorBlock> time_door;
    public static final RegistryObject<TrapDoorBlock> time_trapdoor;
    public static final RegistryObject<StandingSignBlock> time_sign;
    public static final RegistryObject<WallSignBlock> time_wall_sign;
    public static final RegistryObject<Block> trans_planks;
    public static final RegistryObject<StairsBlock> trans_stairs;
    public static final RegistryObject<Block> trans_slab;
    public static final RegistryObject<Block> trans_button;
    public static final RegistryObject<Block> trans_fence;
    public static final RegistryObject<Block> trans_gate;
    public static final RegistryObject<Block> trans_plate;
    public static final RegistryObject<DoorBlock> trans_door;
    public static final RegistryObject<TrapDoorBlock> trans_trapdoor;
    public static final RegistryObject<StandingSignBlock> trans_sign;
    public static final RegistryObject<WallSignBlock> trans_wall_sign;
    public static final RegistryObject<Block> mine_planks;
    public static final RegistryObject<StairsBlock> mine_stairs;
    public static final RegistryObject<Block> mine_slab;
    public static final RegistryObject<Block> mine_button;
    public static final RegistryObject<Block> mine_fence;
    public static final RegistryObject<Block> mine_gate;
    public static final RegistryObject<Block> mine_plate;
    public static final RegistryObject<DoorBlock> mine_door;
    public static final RegistryObject<TrapDoorBlock> mine_trapdoor;
    public static final RegistryObject<StandingSignBlock> mine_sign;
    public static final RegistryObject<WallSignBlock> mine_wall_sign;
    public static final RegistryObject<Block> sort_planks;
    public static final RegistryObject<StairsBlock> sort_stairs;
    public static final RegistryObject<Block> sort_slab;
    public static final RegistryObject<Block> sort_button;
    public static final RegistryObject<Block> sort_fence;
    public static final RegistryObject<Block> sort_gate;
    public static final RegistryObject<Block> sort_plate;
    public static final RegistryObject<DoorBlock> sort_door;
    public static final RegistryObject<TrapDoorBlock> sort_trapdoor;
    public static final RegistryObject<StandingSignBlock> sort_sign;
    public static final RegistryObject<WallSignBlock> sort_wall_sign;
    
    @SubscribeEvent
    public static void registerItemblocks(final RegistryEvent.Register<Item> evt) {
        TFBlockItems.registerBlockItems(evt);
        TFCompat.initCompatItems(evt);
    }
    
    private static AbstractBlock.Properties logProperties(final MaterialColor color) {
        return logProperties(color, color);
    }
    
    private static AbstractBlock.Properties logProperties(final MaterialColor top, final MaterialColor side) {
        return AbstractBlock.Properties.func_235836_a_(Material.field_151575_d, state -> (state.func_177229_b((Property)RotatedPillarBlock.field_176298_M) == Direction.Axis.Y) ? top : side);
    }
    
    public static void tfCompostables() {
        ComposterBlock.func_220290_a(0.1f, (IItemProvider)TFBlocks.fallen_leaves.get());
        ComposterBlock.func_220290_a(0.3f, (IItemProvider)TFBlocks.canopy_leaves.get());
        ComposterBlock.func_220290_a(0.3f, (IItemProvider)TFBlocks.clover_patch.get());
        ComposterBlock.func_220290_a(0.3f, (IItemProvider)TFBlocks.dark_leaves.get());
        ComposterBlock.func_220290_a(0.3f, (IItemProvider)TFBlocks.fiddlehead.get());
        ComposterBlock.func_220290_a(0.3f, (IItemProvider)TFBlocks.hedge.get());
        ComposterBlock.func_220290_a(0.3f, (IItemProvider)TFBlocks.mangrove_leaves.get());
        ComposterBlock.func_220290_a(0.3f, (IItemProvider)TFBlocks.mayapple.get());
        ComposterBlock.func_220290_a(0.3f, (IItemProvider)TFBlocks.mining_leaves.get());
        ComposterBlock.func_220290_a(0.3f, (IItemProvider)TFBlocks.oak_leaves.get());
        ComposterBlock.func_220290_a(0.3f, (IItemProvider)TFBlocks.rainboak_leaves.get());
        ComposterBlock.func_220290_a(0.3f, (IItemProvider)TFBlocks.root_strand.get());
        ComposterBlock.func_220290_a(0.3f, (IItemProvider)TFBlocks.sorting_leaves.get());
        ComposterBlock.func_220290_a(0.3f, (IItemProvider)TFBlocks.thorn_leaves.get());
        ComposterBlock.func_220290_a(0.3f, (IItemProvider)TFBlocks.time_leaves.get());
        ComposterBlock.func_220290_a(0.3f, (IItemProvider)TFBlocks.transformation_leaves.get());
        ComposterBlock.func_220290_a(0.3f, (IItemProvider)TFBlocks.oak_sapling.get());
        ComposterBlock.func_220290_a(0.3f, (IItemProvider)TFBlocks.canopy_sapling.get());
        ComposterBlock.func_220290_a(0.3f, (IItemProvider)TFBlocks.mangrove_sapling.get());
        ComposterBlock.func_220290_a(0.3f, (IItemProvider)TFBlocks.darkwood_sapling.get());
        ComposterBlock.func_220290_a(0.3f, (IItemProvider)TFBlocks.rainboak_sapling.get());
        ComposterBlock.func_220290_a(0.5f, (IItemProvider)TFBlocks.beanstalk_leaves.get());
        ComposterBlock.func_220290_a(0.5f, (IItemProvider)TFBlocks.moss_patch.get());
        ComposterBlock.func_220290_a(0.5f, (IItemProvider)TFBlocks.root.get());
        ComposterBlock.func_220290_a(0.5f, (IItemProvider)TFBlocks.thorn_rose.get());
        ComposterBlock.func_220290_a(0.5f, (IItemProvider)TFBlocks.trollvidr.get());
        ComposterBlock.func_220290_a(0.5f, (IItemProvider)TFBlocks.hollow_oak_sapling.get());
        ComposterBlock.func_220290_a(0.5f, (IItemProvider)TFBlocks.time_sapling.get());
        ComposterBlock.func_220290_a(0.5f, (IItemProvider)TFBlocks.transformation_sapling.get());
        ComposterBlock.func_220290_a(0.5f, (IItemProvider)TFBlocks.mining_sapling.get());
        ComposterBlock.func_220290_a(0.5f, (IItemProvider)TFBlocks.sorting_sapling.get());
        ComposterBlock.func_220290_a(0.65f, (IItemProvider)TFBlocks.huge_mushgloom_stem.get());
        ComposterBlock.func_220290_a(0.65f, (IItemProvider)TFBlocks.huge_waterlily.get());
        ComposterBlock.func_220290_a(0.65f, (IItemProvider)TFBlocks.liveroot_block.get());
        ComposterBlock.func_220290_a(0.65f, (IItemProvider)TFBlocks.mushgloom.get());
        ComposterBlock.func_220290_a(0.65f, (IItemProvider)TFBlocks.uberous_soil.get());
        ComposterBlock.func_220290_a(0.65f, (IItemProvider)TFBlocks.huge_stalk.get());
        ComposterBlock.func_220290_a(0.65f, (IItemProvider)TFBlocks.unripe_trollber.get());
        ComposterBlock.func_220290_a(0.65f, (IItemProvider)TFBlocks.trollber.get());
        ComposterBlock.func_220290_a(0.85f, (IItemProvider)TFBlocks.huge_lilypad.get());
        ComposterBlock.func_220290_a(0.85f, (IItemProvider)TFBlocks.huge_mushgloom.get());
        ComposterBlock.func_220290_a(0.3f, (IItemProvider)TFItems.torchberries.get());
        ComposterBlock.func_220290_a(0.5f, (IItemProvider)TFItems.liveroot.get());
        ComposterBlock.func_220290_a(0.65f, (IItemProvider)TFItems.maze_wafer.get());
        ComposterBlock.func_220290_a(0.85f, (IItemProvider)TFItems.experiment_115.get());
        ComposterBlock.func_220290_a(0.85f, (IItemProvider)TFItems.magic_beans.get());
    }
    
    public static void TFBurnables() {
        final FireBlock fireblock = (FireBlock)Blocks.field_150480_ab;
        fireblock.func_180686_a((Block)TFBlocks.root.get(), 5, 20);
        fireblock.func_180686_a((Block)TFBlocks.liveroot_block.get(), 5, 20);
        fireblock.func_180686_a((Block)TFBlocks.oak_wood.get(), 5, 5);
        fireblock.func_180686_a((Block)TFBlocks.twilight_oak_planks.get(), 5, 20);
        fireblock.func_180686_a((Block)TFBlocks.twilight_oak_slab.get(), 5, 20);
        fireblock.func_180686_a((Block)TFBlocks.twilight_oak_stairs.get(), 5, 20);
        fireblock.func_180686_a((Block)TFBlocks.twilight_oak_fence.get(), 5, 20);
        fireblock.func_180686_a((Block)TFBlocks.twilight_oak_gate.get(), 5, 20);
        fireblock.func_180686_a((Block)TFBlocks.canopy_wood.get(), 5, 5);
        fireblock.func_180686_a((Block)TFBlocks.canopy_planks.get(), 5, 20);
        fireblock.func_180686_a((Block)TFBlocks.canopy_slab.get(), 5, 20);
        fireblock.func_180686_a((Block)TFBlocks.canopy_stairs.get(), 5, 20);
        fireblock.func_180686_a((Block)TFBlocks.canopy_fence.get(), 5, 20);
        fireblock.func_180686_a((Block)TFBlocks.canopy_gate.get(), 5, 20);
        fireblock.func_180686_a((Block)TFBlocks.mangrove_wood.get(), 5, 5);
        fireblock.func_180686_a((Block)TFBlocks.mangrove_planks.get(), 5, 20);
        fireblock.func_180686_a((Block)TFBlocks.mangrove_slab.get(), 5, 20);
        fireblock.func_180686_a((Block)TFBlocks.mangrove_stairs.get(), 5, 20);
        fireblock.func_180686_a((Block)TFBlocks.mangrove_fence.get(), 5, 20);
        fireblock.func_180686_a((Block)TFBlocks.mangrove_gate.get(), 5, 20);
        fireblock.func_180686_a((Block)TFBlocks.dark_wood.get(), 5, 5);
        fireblock.func_180686_a((Block)TFBlocks.dark_planks.get(), 5, 20);
        fireblock.func_180686_a((Block)TFBlocks.dark_slab.get(), 5, 20);
        fireblock.func_180686_a((Block)TFBlocks.dark_stairs.get(), 5, 20);
        fireblock.func_180686_a((Block)TFBlocks.dark_fence.get(), 5, 20);
        fireblock.func_180686_a((Block)TFBlocks.dark_gate.get(), 5, 20);
        fireblock.func_180686_a((Block)TFBlocks.time_wood.get(), 5, 5);
        fireblock.func_180686_a((Block)TFBlocks.time_planks.get(), 5, 20);
        fireblock.func_180686_a((Block)TFBlocks.time_slab.get(), 5, 20);
        fireblock.func_180686_a((Block)TFBlocks.time_stairs.get(), 5, 20);
        fireblock.func_180686_a((Block)TFBlocks.time_fence.get(), 5, 20);
        fireblock.func_180686_a((Block)TFBlocks.time_gate.get(), 5, 20);
        fireblock.func_180686_a((Block)TFBlocks.transformation_wood.get(), 5, 5);
        fireblock.func_180686_a((Block)TFBlocks.trans_planks.get(), 5, 20);
        fireblock.func_180686_a((Block)TFBlocks.trans_slab.get(), 5, 20);
        fireblock.func_180686_a((Block)TFBlocks.trans_stairs.get(), 5, 20);
        fireblock.func_180686_a((Block)TFBlocks.trans_fence.get(), 5, 20);
        fireblock.func_180686_a((Block)TFBlocks.trans_gate.get(), 5, 20);
        fireblock.func_180686_a((Block)TFBlocks.mining_wood.get(), 5, 5);
        fireblock.func_180686_a((Block)TFBlocks.mine_planks.get(), 5, 20);
        fireblock.func_180686_a((Block)TFBlocks.mine_slab.get(), 5, 20);
        fireblock.func_180686_a((Block)TFBlocks.mine_stairs.get(), 5, 20);
        fireblock.func_180686_a((Block)TFBlocks.mine_fence.get(), 5, 20);
        fireblock.func_180686_a((Block)TFBlocks.mine_gate.get(), 5, 20);
        fireblock.func_180686_a((Block)TFBlocks.sorting_wood.get(), 5, 5);
        fireblock.func_180686_a((Block)TFBlocks.sort_planks.get(), 5, 20);
        fireblock.func_180686_a((Block)TFBlocks.sort_slab.get(), 5, 20);
        fireblock.func_180686_a((Block)TFBlocks.sort_stairs.get(), 5, 20);
        fireblock.func_180686_a((Block)TFBlocks.sort_fence.get(), 5, 20);
        fireblock.func_180686_a((Block)TFBlocks.sort_gate.get(), 5, 20);
    }
    
    public static void TFPots() {
        final FlowerPotBlock pot = (FlowerPotBlock)Blocks.field_150457_bL;
        pot.addPlant(TFBlocks.oak_sapling.getId(), (Supplier)TFBlocks.potted_twilight_oak_sapling);
        pot.addPlant(TFBlocks.canopy_sapling.getId(), (Supplier)TFBlocks.potted_canopy_sapling);
        pot.addPlant(TFBlocks.mangrove_sapling.getId(), (Supplier)TFBlocks.potted_mangrove_sapling);
        pot.addPlant(TFBlocks.darkwood_sapling.getId(), (Supplier)TFBlocks.potted_darkwood_sapling);
        pot.addPlant(TFBlocks.hollow_oak_sapling.getId(), (Supplier)TFBlocks.potted_hollow_oak_sapling);
        pot.addPlant(TFBlocks.rainboak_sapling.getId(), (Supplier)TFBlocks.potted_rainboak_sapling);
        pot.addPlant(TFBlocks.time_sapling.getId(), (Supplier)TFBlocks.potted_time_sapling);
        pot.addPlant(TFBlocks.transformation_sapling.getId(), (Supplier)TFBlocks.potted_trans_sapling);
        pot.addPlant(TFBlocks.mining_sapling.getId(), (Supplier)TFBlocks.potted_mine_sapling);
        pot.addPlant(TFBlocks.sorting_sapling.getId(), (Supplier)TFBlocks.potted_sort_sapling);
        pot.addPlant(TFBlocks.mayapple.getId(), (Supplier)TFBlocks.potted_mayapple);
        pot.addPlant(TFBlocks.fiddlehead.getId(), (Supplier)TFBlocks.potted_fiddlehead);
        pot.addPlant(TFBlocks.mushgloom.getId(), (Supplier)TFBlocks.potted_mushgloom);
        pot.addPlant(TFBlocks.brown_thorns.getId(), (Supplier)TFBlocks.potted_thorn);
        pot.addPlant(TFBlocks.green_thorns.getId(), (Supplier)TFBlocks.potted_green_thorn);
        pot.addPlant(TFBlocks.burnt_thorns.getId(), (Supplier)TFBlocks.potted_dead_thorn);
    }
    
    static {
        BLOCKS = DeferredRegister.create(ForgeRegistries.BLOCKS, "twilightforest");
        oak_log = TFBlocks.BLOCKS.register("twilight_oak_log", () -> new TFLogBlock(logProperties(MaterialColor.field_151663_o, MaterialColor.field_151654_J).func_200943_b(2.0f).func_200947_a(SoundType.field_185848_a)));
        canopy_log = TFBlocks.BLOCKS.register("canopy_log", () -> new TFLogBlock(logProperties(MaterialColor.field_151654_J, MaterialColor.field_151650_B).func_200943_b(2.0f).func_200947_a(SoundType.field_185848_a)));
        mangrove_log = TFBlocks.BLOCKS.register("mangrove_log", () -> new TFLogBlock(logProperties(MaterialColor.field_151664_l, MaterialColor.field_151654_J).func_200943_b(2.0f).func_200947_a(SoundType.field_185848_a)));
        dark_log = TFBlocks.BLOCKS.register("dark_log", () -> new TFLogBlock(logProperties(MaterialColor.field_151650_B, MaterialColor.field_151665_m).func_200943_b(2.0f).func_200947_a(SoundType.field_185848_a)));
        stripped_oak_log = TFBlocks.BLOCKS.register("stripped_twilight_oak_log", () -> new TFLogBlock(logProperties(MaterialColor.field_151663_o).func_200943_b(2.0f).func_200947_a(SoundType.field_185848_a)));
        stripped_canopy_log = TFBlocks.BLOCKS.register("stripped_canopy_log", () -> new TFLogBlock(logProperties(MaterialColor.field_151654_J).func_200943_b(2.0f).func_200947_a(SoundType.field_185848_a)));
        stripped_mangrove_log = TFBlocks.BLOCKS.register("stripped_mangrove_log", () -> new TFLogBlock(logProperties(MaterialColor.field_151664_l).func_200943_b(2.0f).func_200947_a(SoundType.field_185848_a)));
        stripped_dark_log = TFBlocks.BLOCKS.register("stripped_dark_log", () -> new TFLogBlock(logProperties(MaterialColor.field_151650_B).func_200943_b(2.0f).func_200947_a(SoundType.field_185848_a)));
        oak_wood = TFBlocks.BLOCKS.register("twilight_oak_wood", () -> new TFLogBlock(logProperties(MaterialColor.field_151654_J).func_200943_b(2.0f).func_200947_a(SoundType.field_185848_a)));
        canopy_wood = TFBlocks.BLOCKS.register("canopy_wood", () -> new TFLogBlock(logProperties(MaterialColor.field_151650_B).func_200943_b(2.0f).func_200947_a(SoundType.field_185848_a)));
        mangrove_wood = TFBlocks.BLOCKS.register("mangrove_wood", () -> new TFLogBlock(logProperties(MaterialColor.field_151654_J).func_200943_b(2.0f).func_200947_a(SoundType.field_185848_a)));
        dark_wood = TFBlocks.BLOCKS.register("dark_wood", () -> new TFLogBlock(logProperties(MaterialColor.field_151665_m).func_200943_b(2.0f).func_200947_a(SoundType.field_185848_a)));
        stripped_oak_wood = TFBlocks.BLOCKS.register("stripped_twilight_oak_wood", () -> new TFLogBlock(logProperties(MaterialColor.field_151663_o, MaterialColor.field_151663_o).func_200943_b(2.0f).func_200947_a(SoundType.field_185848_a)));
        stripped_canopy_wood = TFBlocks.BLOCKS.register("stripped_canopy_wood", () -> new TFLogBlock(logProperties(MaterialColor.field_151654_J, MaterialColor.field_151654_J).func_200943_b(2.0f).func_200947_a(SoundType.field_185848_a)));
        stripped_mangrove_wood = TFBlocks.BLOCKS.register("stripped_mangrove_wood", () -> new TFLogBlock(logProperties(MaterialColor.field_151664_l, MaterialColor.field_151664_l).func_200943_b(2.0f).func_200947_a(SoundType.field_185848_a)));
        stripped_dark_wood = TFBlocks.BLOCKS.register("stripped_dark_wood", () -> new TFLogBlock(logProperties(MaterialColor.field_151676_q, MaterialColor.field_151676_q).func_200943_b(2.0f).func_200947_a(SoundType.field_185848_a)));
        oak_leaves = TFBlocks.BLOCKS.register("twilight_oak_leaves", () -> new TFLeavesBlock(AbstractBlock.Properties.func_200945_a(Material.field_151584_j).func_200943_b(0.2f).func_200944_c().func_226896_b_().func_200947_a(SoundType.field_185850_c).harvestTool(ToolType.HOE)));
        canopy_leaves = TFBlocks.BLOCKS.register("canopy_leaves", () -> new TFLeavesBlock(AbstractBlock.Properties.func_200945_a(Material.field_151584_j).func_200943_b(0.2f).func_200944_c().func_226896_b_().func_200947_a(SoundType.field_185850_c).harvestTool(ToolType.HOE)));
        mangrove_leaves = TFBlocks.BLOCKS.register("mangrove_leaves", () -> new TFLeavesBlock(AbstractBlock.Properties.func_200945_a(Material.field_151584_j).func_200943_b(0.2f).func_200944_c().func_226896_b_().func_200947_a(SoundType.field_185850_c).harvestTool(ToolType.HOE)));
        dark_leaves = TFBlocks.BLOCKS.register("dark_leaves", () -> new DarkLeavesBlock(AbstractBlock.Properties.func_200945_a(Material.field_151584_j).func_200948_a(2.0f, 10.0f).func_200947_a(SoundType.field_185850_c).harvestTool(ToolType.HOE)));
        rainboak_leaves = TFBlocks.BLOCKS.register("rainboak_leaves", () -> new TFLeavesBlock(AbstractBlock.Properties.func_200945_a(Material.field_151584_j).func_200943_b(0.2f).func_200944_c().func_226896_b_().func_200947_a(SoundType.field_185850_c).harvestTool(ToolType.HOE)));
        twilight_portal = TFBlocks.BLOCKS.register("twilight_portal", () -> new TFPortalBlock(AbstractBlock.Properties.func_200945_a(Material.field_151567_E).func_200943_b(-1.0f).func_200947_a(SoundType.field_185853_f).func_235838_a_(state -> 11).func_200942_a().func_226896_b_().func_222380_e()));
        maze_stone = TFBlocks.BLOCKS.register("maze_stone", () -> new MazestoneBlock(AbstractBlock.Properties.func_200945_a(Material.field_151576_e).func_235861_h_().func_200948_a(100.0f, 5.0f).func_200947_a(SoundType.field_185851_d)));
        maze_stone_brick = TFBlocks.BLOCKS.register("maze_stone_brick", () -> new MazestoneBlock(AbstractBlock.Properties.func_200945_a(Material.field_151576_e).func_235861_h_().func_200948_a(100.0f, 5.0f).func_200947_a(SoundType.field_185851_d)));
        maze_stone_chiseled = TFBlocks.BLOCKS.register("maze_stone_chiseled", () -> new MazestoneBlock(AbstractBlock.Properties.func_200945_a(Material.field_151576_e).func_235861_h_().func_200948_a(100.0f, 5.0f).func_200947_a(SoundType.field_185851_d)));
        maze_stone_decorative = TFBlocks.BLOCKS.register("maze_stone_decorative", () -> new MazestoneBlock(AbstractBlock.Properties.func_200945_a(Material.field_151576_e).func_235861_h_().func_200948_a(100.0f, 5.0f).func_200947_a(SoundType.field_185851_d)));
        maze_stone_cracked = TFBlocks.BLOCKS.register("maze_stone_cracked", () -> new MazestoneBlock(AbstractBlock.Properties.func_200945_a(Material.field_151576_e).func_235861_h_().func_200948_a(100.0f, 5.0f).func_200947_a(SoundType.field_185851_d)));
        maze_stone_mossy = TFBlocks.BLOCKS.register("maze_stone_mossy", () -> new MazestoneBlock(AbstractBlock.Properties.func_200945_a(Material.field_151576_e).func_235861_h_().func_200948_a(100.0f, 5.0f).func_200947_a(SoundType.field_185851_d)));
        maze_stone_mosaic = TFBlocks.BLOCKS.register("maze_stone_mosaic", () -> new MazestoneBlock(AbstractBlock.Properties.func_200945_a(Material.field_151576_e).func_235861_h_().func_200948_a(100.0f, 5.0f).func_200947_a(SoundType.field_185851_d)));
        maze_stone_border = TFBlocks.BLOCKS.register("maze_stone_border", () -> new MazestoneBlock(AbstractBlock.Properties.func_200945_a(Material.field_151576_e).func_235861_h_().func_200948_a(100.0f, 5.0f).func_200947_a(SoundType.field_185851_d)));
        hedge = TFBlocks.BLOCKS.register("hedge", () -> new HedgeBlock(AbstractBlock.Properties.func_200945_a(Material.field_151570_A).harvestTool(ToolType.AXE).func_200948_a(2.0f, 10.0f).func_200947_a(SoundType.field_185850_c)));
        boss_spawner_naga = TFBlocks.BLOCKS.register("boss_spawner_naga", () -> new BossSpawnerBlock(AbstractBlock.Properties.func_200945_a(Material.field_151576_e).func_200943_b(-1.0f).func_226896_b_().func_222380_e(), BossVariant.NAGA));
        boss_spawner_lich = TFBlocks.BLOCKS.register("boss_spawner_lich", () -> new BossSpawnerBlock(AbstractBlock.Properties.func_200945_a(Material.field_151576_e).func_200943_b(-1.0f).func_226896_b_().func_222380_e(), BossVariant.LICH));
        boss_spawner_hydra = TFBlocks.BLOCKS.register("boss_spawner_hydra", () -> new BossSpawnerBlock(AbstractBlock.Properties.func_200945_a(Material.field_151576_e).func_200943_b(-1.0f).func_226896_b_().func_222380_e(), BossVariant.HYDRA));
        boss_spawner_ur_ghast = TFBlocks.BLOCKS.register("boss_spawner_ur_ghast", () -> new BossSpawnerBlock(AbstractBlock.Properties.func_200945_a(Material.field_151576_e).func_200943_b(-1.0f).func_226896_b_().func_222380_e(), BossVariant.UR_GHAST));
        boss_spawner_knight_phantom = TFBlocks.BLOCKS.register("boss_spawner_knight_phantom", () -> new BossSpawnerBlock(AbstractBlock.Properties.func_200945_a(Material.field_151576_e).func_200943_b(-1.0f).func_226896_b_().func_222380_e(), BossVariant.KNIGHT_PHANTOM));
        boss_spawner_snow_queen = TFBlocks.BLOCKS.register("boss_spawner_snow_queen", () -> new BossSpawnerBlock(AbstractBlock.Properties.func_200945_a(Material.field_151576_e).func_200943_b(-1.0f).func_226896_b_().func_222380_e(), BossVariant.SNOW_QUEEN));
        boss_spawner_minoshroom = TFBlocks.BLOCKS.register("boss_spawner_minoshroom", () -> new BossSpawnerBlock(AbstractBlock.Properties.func_200945_a(Material.field_151576_e).func_200943_b(-1.0f).func_226896_b_().func_222380_e(), BossVariant.MINOSHROOM));
        boss_spawner_alpha_yeti = TFBlocks.BLOCKS.register("boss_spawner_alpha_yeti", () -> new BossSpawnerBlock(AbstractBlock.Properties.func_200945_a(Material.field_151576_e).func_200943_b(-1.0f).func_226896_b_().func_222380_e(), BossVariant.ALPHA_YETI));
        boss_spawner_final_boss = TFBlocks.BLOCKS.register("boss_spawner_final_boss", () -> new BossSpawnerBlock(AbstractBlock.Properties.func_200945_a(Material.field_151576_e).func_200943_b(-1.0f).func_226896_b_().func_222380_e(), BossVariant.FINAL_BOSS));
        firefly_jar = TFBlocks.BLOCKS.register("firefly_jar", () -> new JarBlock(AbstractBlock.Properties.func_200945_a(Material.field_151592_s).func_200948_a(0.3f, 0.0f).func_200947_a(SoundType.field_185848_a).func_235838_a_(state -> 15).func_226896_b_()));
        cicada_jar = TFBlocks.BLOCKS.register("cicada_jar", () -> new JarBlock(AbstractBlock.Properties.func_200945_a(Material.field_151592_s).func_200948_a(0.3f, 0.0f).func_200947_a(SoundType.field_185848_a).func_226896_b_().func_200944_c()));
        moss_patch = TFBlocks.BLOCKS.register("moss_patch", () -> new TFPlantBlock(PlantVariant.MOSSPATCH, AbstractBlock.Properties.func_200945_a(Material.field_151585_k).func_200943_b(0.0f).func_200947_a(SoundType.field_185850_c).func_200942_a().func_226896_b_()));
        mayapple = TFBlocks.BLOCKS.register("mayapple", () -> new TFPlantBlock(PlantVariant.MAYAPPLE, AbstractBlock.Properties.func_200945_a(Material.field_151585_k).func_200943_b(0.0f).func_200947_a(SoundType.field_185850_c).func_200942_a().func_226896_b_()));
        clover_patch = TFBlocks.BLOCKS.register("clover_patch", () -> new TFPlantBlock(PlantVariant.CLOVERPATCH, AbstractBlock.Properties.func_200945_a(Material.field_151585_k).func_200943_b(0.0f).func_200947_a(SoundType.field_185850_c).func_200942_a().func_226896_b_()));
        fiddlehead = TFBlocks.BLOCKS.register("fiddlehead", () -> new TFPlantBlock(PlantVariant.FIDDLEHEAD, AbstractBlock.Properties.func_200945_a(Material.field_151585_k).func_200943_b(0.0f).func_200947_a(SoundType.field_185850_c).func_200942_a().func_226896_b_()));
        mushgloom = TFBlocks.BLOCKS.register("mushgloom", () -> new TFPlantBlock(PlantVariant.MUSHGLOOM, AbstractBlock.Properties.func_200945_a(Material.field_151585_k).func_200943_b(0.0f).func_200947_a(SoundType.field_185850_c).func_200942_a().func_226896_b_().func_235838_a_(state -> 3)));
        torchberry_plant = TFBlocks.BLOCKS.register("torchberry_plant", () -> new TFPlantBlock(PlantVariant.TORCHBERRY, AbstractBlock.Properties.func_200945_a(Material.field_151585_k).func_200943_b(0.0f).func_200947_a(SoundType.field_185850_c).func_200942_a().func_226896_b_().func_235838_a_(state -> 8)));
        root_strand = TFBlocks.BLOCKS.register("root_strand", () -> new TFPlantBlock(PlantVariant.ROOT_STRAND, AbstractBlock.Properties.func_200945_a(Material.field_151585_k).func_200943_b(0.0f).func_200947_a(SoundType.field_185850_c).func_200942_a().func_226896_b_()));
        fallen_leaves = TFBlocks.BLOCKS.register("fallen_leaves", () -> new TFPlantBlock(PlantVariant.FALLEN_LEAVES, AbstractBlock.Properties.func_200945_a(Material.field_151582_l).func_200943_b(0.0f).func_200947_a(SoundType.field_185850_c).func_200942_a().func_226896_b_()));
        root = TFBlocks.BLOCKS.register("root", () -> new Block(AbstractBlock.Properties.func_200945_a(Material.field_151575_d).func_200943_b(2.0f).func_200947_a(SoundType.field_185848_a)));
        liveroot_block = TFBlocks.BLOCKS.register("liveroot_block", () -> new Block(AbstractBlock.Properties.func_200945_a(Material.field_151575_d).func_200943_b(2.0f).func_200947_a(SoundType.field_185848_a)));
        uncrafting_table = TFBlocks.BLOCKS.register("uncrafting_table", (Supplier)UncraftingTableBlock::new);
        smoker = TFBlocks.BLOCKS.register("smoker", () -> new TFSmokerBlock(AbstractBlock.Properties.func_200949_a(Material.field_151576_e, MaterialColor.field_151661_c).func_200948_a(1.5f, 0.0f).func_200947_a(SoundType.field_185848_a)));
        encased_smoker = TFBlocks.BLOCKS.register("encased_smoker", () -> new EncasedSmokerBlock(AbstractBlock.Properties.func_200949_a(Material.field_151575_d, MaterialColor.field_151658_d).func_235861_h_().harvestTool(ToolType.AXE).func_200948_a(1.5f, 0.0f).func_200947_a(SoundType.field_185848_a)));
        fire_jet = TFBlocks.BLOCKS.register("fire_jet", () -> new FireJetBlock(AbstractBlock.Properties.func_200949_a(Material.field_151576_e, MaterialColor.field_151661_c).func_200948_a(1.5f, 0.0f).func_200947_a(SoundType.field_185848_a).func_200944_c().func_235838_a_(state -> (state.func_177229_b((Property)FireJetBlock.STATE) != FireJetVariant.FLAME) ? 0 : 15)));
        encased_fire_jet = TFBlocks.BLOCKS.register("encased_fire_jet", () -> new EncasedFireJetBlock(AbstractBlock.Properties.func_200949_a(Material.field_151575_d, MaterialColor.field_151658_d).func_235861_h_().harvestTool(ToolType.AXE).func_200948_a(1.5f, 0.0f).func_200947_a(SoundType.field_185848_a).func_235838_a_(state -> 15)));
        naga_stone_head = TFBlocks.BLOCKS.register("naga_stone_head", () -> new TFHorizontalBlock(AbstractBlock.Properties.func_200945_a(Material.field_151576_e).func_235861_h_().func_200948_a(1.5f, 10.0f).func_200947_a(SoundType.field_185851_d)));
        naga_stone = TFBlocks.BLOCKS.register("naga_stone", () -> new NagastoneBlock(AbstractBlock.Properties.func_200945_a(Material.field_151576_e).func_235861_h_().func_200948_a(1.5f, 10.0f).func_200947_a(SoundType.field_185851_d)));
        oak_sapling = TFBlocks.BLOCKS.register("twilight_oak_sapling", () -> {
            new SaplingBlock((Tree)new SmallOakTree(), AbstractBlock.Properties.func_200945_a(Material.field_151585_k).func_200943_b(0.0f).func_200947_a(SoundType.field_185850_c).func_200942_a().func_200944_c());
            return;
        });
        canopy_sapling = TFBlocks.BLOCKS.register("canopy_sapling", () -> {
            new SaplingBlock((Tree)new CanopyTree(), AbstractBlock.Properties.func_200945_a(Material.field_151585_k).func_200943_b(0.0f).func_200947_a(SoundType.field_185850_c).func_200942_a().func_200944_c());
            return;
        });
        mangrove_sapling = TFBlocks.BLOCKS.register("mangrove_sapling", () -> {
            new MangroveSaplingBlock(new MangroveTree(), AbstractBlock.Properties.func_200945_a(Material.field_151585_k).func_200943_b(0.0f).func_200947_a(SoundType.field_185850_c).func_200942_a().func_200944_c());
            return;
        });
        darkwood_sapling = TFBlocks.BLOCKS.register("darkwood_sapling", () -> {
            new SaplingBlock((Tree)new DarkCanopyTree(), AbstractBlock.Properties.func_200945_a(Material.field_151585_k).func_200943_b(0.0f).func_200947_a(SoundType.field_185850_c).func_200942_a().func_200944_c());
            return;
        });
        hollow_oak_sapling = TFBlocks.BLOCKS.register("hollow_oak_sapling", () -> {
            new SaplingBlock((Tree)new HollowTree(), AbstractBlock.Properties.func_200945_a(Material.field_151585_k).func_200943_b(0.0f).func_200947_a(SoundType.field_185850_c).func_200942_a().func_200944_c());
            return;
        });
        time_sapling = TFBlocks.BLOCKS.register("time_sapling", () -> {
            new SaplingBlock((Tree)new TimeTree(), AbstractBlock.Properties.func_200945_a(Material.field_151585_k).func_200943_b(0.0f).func_200947_a(SoundType.field_185850_c).func_200942_a().func_200944_c());
            return;
        });
        transformation_sapling = TFBlocks.BLOCKS.register("transformation_sapling", () -> {
            new SaplingBlock((Tree)new TransformationTree(), AbstractBlock.Properties.func_200945_a(Material.field_151585_k).func_200943_b(0.0f).func_200947_a(SoundType.field_185850_c).func_200942_a().func_200944_c());
            return;
        });
        mining_sapling = TFBlocks.BLOCKS.register("mining_sapling", () -> {
            new SaplingBlock((Tree)new MinersTree(), AbstractBlock.Properties.func_200945_a(Material.field_151585_k).func_200943_b(0.0f).func_200947_a(SoundType.field_185850_c).func_200942_a().func_200944_c());
            return;
        });
        sorting_sapling = TFBlocks.BLOCKS.register("sorting_sapling", () -> {
            new SaplingBlock((Tree)new SortingTree(), AbstractBlock.Properties.func_200945_a(Material.field_151585_k).func_200943_b(0.0f).func_200947_a(SoundType.field_185850_c).func_200942_a().func_200944_c());
            return;
        });
        rainboak_sapling = TFBlocks.BLOCKS.register("rainboak_sapling", () -> {
            new SaplingBlock((Tree)new RainboakTree(), AbstractBlock.Properties.func_200945_a(Material.field_151585_k).func_200943_b(0.0f).func_200947_a(SoundType.field_185850_c).func_200942_a().func_200944_c());
            return;
        });
        time_log = TFBlocks.BLOCKS.register("time_log", () -> new TFLogBlock(logProperties(MaterialColor.field_151664_l, MaterialColor.field_151654_J).func_200943_b(2.0f).func_200947_a(SoundType.field_185848_a)));
        transformation_log = TFBlocks.BLOCKS.register("transformation_log", () -> new TFLogBlock(logProperties(MaterialColor.field_151663_o, MaterialColor.field_151654_J).func_200943_b(2.0f).func_200947_a(SoundType.field_185848_a)));
        mining_log = TFBlocks.BLOCKS.register("mining_log", () -> new TFLogBlock(logProperties(MaterialColor.field_151658_d, MaterialColor.field_151677_p).func_200943_b(2.0f).func_200947_a(SoundType.field_185848_a)));
        sorting_log = TFBlocks.BLOCKS.register("sorting_log", () -> new TFLogBlock(logProperties(MaterialColor.field_151654_J, MaterialColor.field_151650_B).func_200943_b(2.0f).func_200947_a(SoundType.field_185848_a)));
        stripped_time_log = TFBlocks.BLOCKS.register("stripped_time_log", () -> new TFLogBlock(logProperties(MaterialColor.field_151664_l).func_200943_b(2.0f).func_200947_a(SoundType.field_185848_a)));
        stripped_transformation_log = TFBlocks.BLOCKS.register("stripped_transformation_log", () -> new TFLogBlock(logProperties(MaterialColor.field_151663_o).func_200943_b(2.0f).func_200947_a(SoundType.field_185848_a)));
        stripped_mining_log = TFBlocks.BLOCKS.register("stripped_mining_log", () -> new TFLogBlock(logProperties(MaterialColor.field_151658_d).func_200943_b(2.0f).func_200947_a(SoundType.field_185848_a)));
        stripped_sorting_log = TFBlocks.BLOCKS.register("stripped_sorting_log", () -> new TFLogBlock(logProperties(MaterialColor.field_151654_J).func_200943_b(2.0f).func_200947_a(SoundType.field_185848_a)));
        time_wood = TFBlocks.BLOCKS.register("time_wood", () -> new TFLogBlock(logProperties(MaterialColor.field_151664_l).func_200943_b(2.0f).func_200947_a(SoundType.field_185848_a)));
        transformation_wood = TFBlocks.BLOCKS.register("transformation_wood", () -> new TFLogBlock(logProperties(MaterialColor.field_151663_o).func_200943_b(2.0f).func_200947_a(SoundType.field_185848_a)));
        mining_wood = TFBlocks.BLOCKS.register("mining_wood", () -> new TFLogBlock(logProperties(MaterialColor.field_151658_d).func_200943_b(2.0f).func_200947_a(SoundType.field_185848_a)));
        sorting_wood = TFBlocks.BLOCKS.register("sorting_wood", () -> new TFLogBlock(logProperties(MaterialColor.field_151654_J).func_200943_b(2.0f).func_200947_a(SoundType.field_185848_a)));
        stripped_time_wood = TFBlocks.BLOCKS.register("stripped_time_wood", () -> new TFLogBlock(logProperties(MaterialColor.field_151664_l).func_200943_b(2.0f).func_200947_a(SoundType.field_185848_a)));
        stripped_transformation_wood = TFBlocks.BLOCKS.register("stripped_transformation_wood", () -> new TFLogBlock(logProperties(MaterialColor.field_151663_o).func_200943_b(2.0f).func_200947_a(SoundType.field_185848_a)));
        stripped_mining_wood = TFBlocks.BLOCKS.register("stripped_mining_wood", () -> new TFLogBlock(logProperties(MaterialColor.field_151658_d).func_200943_b(2.0f).func_200947_a(SoundType.field_185848_a)));
        stripped_sorting_wood = TFBlocks.BLOCKS.register("stripped_sorting_wood", () -> new TFLogBlock(logProperties(MaterialColor.field_151654_J).func_200943_b(2.0f).func_200947_a(SoundType.field_185848_a)));
        time_log_core = TFBlocks.BLOCKS.register("time_log_core", () -> new SpecialMagicLogBlock(logProperties(MaterialColor.field_151664_l, MaterialColor.field_151654_J), MagicWoodVariant.TIME));
        transformation_log_core = TFBlocks.BLOCKS.register("transformation_log_core", () -> new SpecialMagicLogBlock(logProperties(MaterialColor.field_151663_o, MaterialColor.field_151654_J), MagicWoodVariant.TRANS));
        mining_log_core = TFBlocks.BLOCKS.register("mining_log_core", () -> new SpecialMagicLogBlock(logProperties(MaterialColor.field_151658_d, MaterialColor.field_151677_p), MagicWoodVariant.MINE));
        sorting_log_core = TFBlocks.BLOCKS.register("sorting_log_core", () -> new SpecialMagicLogBlock(logProperties(MaterialColor.field_151654_J, MaterialColor.field_151650_B), MagicWoodVariant.SORT));
        time_leaves = TFBlocks.BLOCKS.register("time_leaves", () -> new MagicLeavesBlock(AbstractBlock.Properties.func_200945_a(Material.field_151584_j).func_200943_b(0.2f).func_200947_a(SoundType.field_185850_c).func_200944_c().func_226896_b_().harvestTool(ToolType.HOE)));
        transformation_leaves = TFBlocks.BLOCKS.register("transformation_leaves", () -> new MagicLeavesBlock(AbstractBlock.Properties.func_200945_a(Material.field_151584_j).func_200943_b(0.2f).func_200947_a(SoundType.field_185850_c).func_200944_c().func_226896_b_().harvestTool(ToolType.HOE)));
        mining_leaves = TFBlocks.BLOCKS.register("mining_leaves", () -> new MagicLeavesBlock(AbstractBlock.Properties.func_200945_a(Material.field_151584_j).func_200943_b(0.2f).func_200947_a(SoundType.field_185850_c).func_200944_c().func_226896_b_().harvestTool(ToolType.HOE)));
        sorting_leaves = TFBlocks.BLOCKS.register("sorting_leaves", () -> new MagicLeavesBlock(AbstractBlock.Properties.func_200945_a(Material.field_151584_j).func_200943_b(0.2f).func_200947_a(SoundType.field_185850_c).func_200944_c().func_226896_b_().harvestTool(ToolType.HOE)));
        firefly = TFBlocks.BLOCKS.register("firefly", () -> {
            new FireflyBlock(AbstractBlock.Properties.func_200945_a(new Material.Builder(MaterialColor.field_151660_b).func_200508_c().func_200502_b().func_200509_f().func_200506_i()).func_235838_a_(state -> 15).func_200947_a(SoundType.field_185859_l).func_200943_b(0.0f).func_200942_a());
            return;
        });
        cicada = TFBlocks.BLOCKS.register("cicada", () -> {
            new CicadaBlock(AbstractBlock.Properties.func_200945_a(new Material.Builder(MaterialColor.field_151660_b).func_200508_c().func_200502_b().func_200509_f().func_200506_i()).func_200947_a(SoundType.field_185859_l).func_200943_b(0.0f).func_200942_a());
            return;
        });
        moonworm = TFBlocks.BLOCKS.register("moonworm", () -> {
            new MoonwormBlock(AbstractBlock.Properties.func_200945_a(new Material.Builder(MaterialColor.field_151660_b).func_200508_c().func_200502_b().func_200509_f().func_200506_i()).func_235838_a_(state -> 14).func_200947_a(SoundType.field_185859_l).func_200943_b(0.0f).func_200942_a());
            return;
        });
        tower_wood = TFBlocks.BLOCKS.register("tower_wood", () -> new FlammableBlock(1, 0, AbstractBlock.Properties.func_200949_a(Material.field_151575_d, MaterialColor.field_151676_q).harvestTool(ToolType.AXE).func_200948_a(40.0f, 10.0f).func_200947_a(SoundType.field_185848_a)));
        tower_wood_encased = TFBlocks.BLOCKS.register("tower_wood_encased", () -> new FlammableBlock(1, 0, AbstractBlock.Properties.func_200949_a(Material.field_151575_d, MaterialColor.field_151658_d).harvestTool(ToolType.AXE).func_200948_a(40.0f, 10.0f).func_200947_a(SoundType.field_185848_a)));
        tower_wood_cracked = TFBlocks.BLOCKS.register("tower_wood_cracked", () -> new FlammableBlock(1, 0, AbstractBlock.Properties.func_200949_a(Material.field_151575_d, MaterialColor.field_151676_q).harvestTool(ToolType.AXE).func_200948_a(40.0f, 10.0f).func_200947_a(SoundType.field_185848_a)));
        tower_wood_mossy = TFBlocks.BLOCKS.register("tower_wood_mossy", () -> new FlammableBlock(1, 0, AbstractBlock.Properties.func_200949_a(Material.field_151575_d, MaterialColor.field_151676_q).harvestTool(ToolType.AXE).func_200948_a(40.0f, 10.0f).func_200947_a(SoundType.field_185848_a)));
        tower_wood_infested = TFBlocks.BLOCKS.register("tower_wood_infested", () -> new InfestedTowerwoodBlock(1, 0, AbstractBlock.Properties.func_200949_a(Material.field_151575_d, MaterialColor.field_151676_q).harvestTool(ToolType.AXE).func_200948_a(0.75f, 10.0f).func_200947_a(SoundType.field_185848_a)));
        reappearing_block = TFBlocks.BLOCKS.register("reappearing_block", () -> new ReappearingBlock(AbstractBlock.Properties.func_200949_a(Material.field_151575_d, MaterialColor.field_151658_d).func_235861_h_().harvestTool(ToolType.AXE).func_200948_a(10.0f, 35.0f).func_200947_a(SoundType.field_185848_a).func_235838_a_(state -> 4)));
        vanishing_block = TFBlocks.BLOCKS.register("vanishing_block", () -> new VanishingBlock(AbstractBlock.Properties.func_200949_a(Material.field_151575_d, MaterialColor.field_151658_d).func_200948_a(-1.0f, 35.0f).func_200947_a(SoundType.field_185848_a).func_235838_a_(state -> state.func_177229_b((Property)VanishingBlock.ACTIVE) ? 4 : 0)));
        locked_vanishing_block = TFBlocks.BLOCKS.register("locked_vanishing_block", () -> new LockedVanishingBlock(AbstractBlock.Properties.func_200949_a(Material.field_151575_d, MaterialColor.field_151658_d).func_200948_a(-1.0f, 35.0f).func_200947_a(SoundType.field_185848_a)));
        carminite_builder = TFBlocks.BLOCKS.register("carminite_builder", () -> new BuilderBlock(AbstractBlock.Properties.func_200949_a(Material.field_151575_d, MaterialColor.field_151658_d).func_235861_h_().harvestTool(ToolType.AXE).func_200948_a(10.0f, 35.0f).func_200947_a(SoundType.field_185848_a).func_235838_a_(state -> (state.func_177229_b((Property)BuilderBlock.STATE) == TowerDeviceVariant.BUILDER_ACTIVE) ? 4 : 0)));
        built_block = TFBlocks.BLOCKS.register("built_block", () -> new TranslucentBuiltBlock(AbstractBlock.Properties.func_200945_a(Material.field_151592_s).func_200948_a(50.0f, 2000.0f).func_200947_a(SoundType.field_185852_e).func_226896_b_().func_222380_e()));
        antibuilder = TFBlocks.BLOCKS.register("antibuilder", () -> new AntibuilderBlock(AbstractBlock.Properties.func_200949_a(Material.field_151575_d, MaterialColor.field_151658_d).func_235861_h_().harvestTool(ToolType.AXE).func_200948_a(10.0f, 35.0f).func_200947_a(SoundType.field_185848_a).func_235838_a_(state -> 10)));
        antibuilt_block = TFBlocks.BLOCKS.register("antibuilt_block", () -> new Block(AbstractBlock.Properties.func_200945_a(Material.field_151592_s).func_200948_a(0.3f, 2000.0f).func_200947_a(SoundType.field_185852_e).func_222380_e().func_226896_b_()));
        ghast_trap = TFBlocks.BLOCKS.register("ghast_trap", () -> new GhastTrapBlock(AbstractBlock.Properties.func_200949_a(Material.field_151575_d, MaterialColor.field_151658_d).func_235861_h_().harvestTool(ToolType.AXE).func_200948_a(10.0f, 35.0f).func_200947_a(SoundType.field_185848_a).func_235838_a_(state -> state.func_177229_b((Property)GhastTrapBlock.ACTIVE) ? 15 : 0)));
        carminite_reactor = TFBlocks.BLOCKS.register("carminite_reactor", () -> new CarminiteReactorBlock(AbstractBlock.Properties.func_200949_a(Material.field_151575_d, MaterialColor.field_151658_d).func_235861_h_().harvestTool(ToolType.AXE).func_200948_a(10.0f, 35.0f).func_200947_a(SoundType.field_185848_a).func_235838_a_(state -> state.func_177229_b((Property)CarminiteReactorBlock.ACTIVE) ? 15 : 0)));
        reactor_debris = TFBlocks.BLOCKS.register("reactor_debris", () -> new Block(AbstractBlock.Properties.func_200945_a(Material.field_151592_s).func_200948_a(0.3f, 2000.0f).func_200947_a(SoundType.field_185852_e).func_222380_e().func_226896_b_()));
        fake_gold = TFBlocks.BLOCKS.register("fake_gold", () -> new Block(AbstractBlock.Properties.func_200945_a(Material.field_151592_s).func_200948_a(50.0f, 2000.0f).func_200947_a(SoundType.field_185852_e).func_222380_e()));
        fake_diamond = TFBlocks.BLOCKS.register("fake_diamond", () -> new Block(AbstractBlock.Properties.func_200945_a(Material.field_151592_s).func_200948_a(50.0f, 2000.0f).func_200947_a(SoundType.field_185852_e).func_222380_e()));
        naga_trophy = TFBlocks.BLOCKS.register("naga_trophy", () -> new TrophyBlock(BossVariant.NAGA, 5));
        lich_trophy = TFBlocks.BLOCKS.register("lich_trophy", () -> new TrophyBlock(BossVariant.LICH, 6));
        hydra_trophy = TFBlocks.BLOCKS.register("hydra_trophy", () -> new TrophyBlock(BossVariant.HYDRA, 12));
        ur_ghast_trophy = TFBlocks.BLOCKS.register("ur_ghast_trophy", () -> new TrophyBlock(BossVariant.UR_GHAST, 13));
        knight_phantom_trophy = TFBlocks.BLOCKS.register("knight_phantom_trophy", () -> new TrophyBlock(BossVariant.KNIGHT_PHANTOM, 8));
        snow_queen_trophy = TFBlocks.BLOCKS.register("snow_queen_trophy", () -> new TrophyBlock(BossVariant.SNOW_QUEEN, 14));
        minoshroom_trophy = TFBlocks.BLOCKS.register("minoshroom_trophy", () -> new TrophyBlock(BossVariant.MINOSHROOM, 7));
        yeti_trophy = TFBlocks.BLOCKS.register("yeti_trophy", () -> new TrophyBlock(BossVariant.ALPHA_YETI, 9));
        quest_ram_trophy = TFBlocks.BLOCKS.register("quest_ram_trophy", () -> new TrophyBlock(BossVariant.QUEST_RAM, 1));
        naga_wall_trophy = TFBlocks.BLOCKS.register("naga_wall_trophy", () -> new TrophyWallBlock(BossVariant.NAGA));
        lich_wall_trophy = TFBlocks.BLOCKS.register("lich_wall_trophy", () -> new TrophyWallBlock(BossVariant.LICH));
        hydra_wall_trophy = TFBlocks.BLOCKS.register("hydra_wall_trophy", () -> new TrophyWallBlock(BossVariant.HYDRA));
        ur_ghast_wall_trophy = TFBlocks.BLOCKS.register("ur_ghast_wall_trophy", () -> new TrophyWallBlock(BossVariant.UR_GHAST));
        knight_phantom_wall_trophy = TFBlocks.BLOCKS.register("knight_phantom_wall_trophy", () -> new TrophyWallBlock(BossVariant.KNIGHT_PHANTOM));
        snow_queen_wall_trophy = TFBlocks.BLOCKS.register("snow_queen_wall_trophy", () -> new TrophyWallBlock(BossVariant.SNOW_QUEEN));
        minoshroom_wall_trophy = TFBlocks.BLOCKS.register("minoshroom_wall_trophy", () -> new TrophyWallBlock(BossVariant.MINOSHROOM));
        yeti_wall_trophy = TFBlocks.BLOCKS.register("yeti_wall_trophy", () -> new TrophyWallBlock(BossVariant.ALPHA_YETI));
        quest_ram_wall_trophy = TFBlocks.BLOCKS.register("quest_ram_wall_trophy", () -> new TrophyWallBlock(BossVariant.QUEST_RAM));
        stronghold_shield = TFBlocks.BLOCKS.register("stronghold_shield", () -> new StrongholdShieldBlock(AbstractBlock.Properties.func_200945_a(Material.field_151576_e).func_235861_h_().harvestTool(ToolType.PICKAXE).func_200948_a(-1.0f, 6000000.0f).func_200947_a(SoundType.field_185852_e).func_222380_e()));
        trophy_pedestal = TFBlocks.BLOCKS.register("trophy_pedestal", () -> new TrophyPedestalBlock(AbstractBlock.Properties.func_200945_a(Material.field_151576_e).func_235861_h_().harvestTool(ToolType.PICKAXE).func_200948_a(2.0f, 2000.0f).func_200947_a(SoundType.field_185851_d)));
        aurora_block = TFBlocks.BLOCKS.register("aurora_block", () -> new AuroraBrickBlock(AbstractBlock.Properties.func_200945_a(Material.field_151598_x).harvestTool(ToolType.PICKAXE).func_200948_a(10.0f, 10.0f)));
        aurora_pillar = TFBlocks.BLOCKS.register("aurora_pillar", () -> new RotatedPillarBlock(AbstractBlock.Properties.func_200945_a(Material.field_151598_x).func_235861_h_().harvestTool(ToolType.PICKAXE).func_200948_a(2.0f, 10.0f)));
        aurora_slab = TFBlocks.BLOCKS.register("aurora_slab", () -> new SlabBlock(AbstractBlock.Properties.func_200945_a(Material.field_151598_x).func_235861_h_().harvestTool(ToolType.PICKAXE).func_200948_a(2.0f, 10.0f)));
        auroralized_glass = TFBlocks.BLOCKS.register("auroralized_glass", () -> new AuroralizedGlassBlock(AbstractBlock.Properties.func_200945_a(Material.field_151588_w).func_226896_b_()));
        underbrick = TFBlocks.BLOCKS.register("underbrick", () -> new Block(AbstractBlock.Properties.func_200949_a(Material.field_151576_e, MaterialColor.field_151663_o).func_235861_h_().func_200948_a(1.5f, 10.0f).func_200947_a(SoundType.field_185851_d)));
        underbrick_mossy = TFBlocks.BLOCKS.register("underbrick_mossy", () -> new Block(AbstractBlock.Properties.func_200949_a(Material.field_151576_e, MaterialColor.field_151663_o).func_235861_h_().func_200948_a(1.5f, 10.0f).func_200947_a(SoundType.field_185851_d)));
        underbrick_cracked = TFBlocks.BLOCKS.register("underbrick_cracked", () -> new Block(AbstractBlock.Properties.func_200949_a(Material.field_151576_e, MaterialColor.field_151663_o).func_235861_h_().func_200948_a(1.5f, 10.0f).func_200947_a(SoundType.field_185851_d)));
        underbrick_floor = TFBlocks.BLOCKS.register("underbrick_floor", () -> new UnfinishedBlock(AbstractBlock.Properties.func_200949_a(Material.field_151576_e, MaterialColor.field_151663_o).func_235861_h_().func_200948_a(1.5f, 10.0f).func_200947_a(SoundType.field_185851_d), true));
        brown_thorns = TFBlocks.BLOCKS.register("brown_thorns", () -> new ThornsBlock(AbstractBlock.Properties.func_200949_a(Material.field_151575_d, MaterialColor.field_151654_J).func_200948_a(50.0f, 2000.0f).func_200947_a(SoundType.field_185848_a).func_222380_e()));
        green_thorns = TFBlocks.BLOCKS.register("green_thorns", () -> new ThornsBlock(AbstractBlock.Properties.func_200949_a(Material.field_151575_d, MaterialColor.field_151669_i).func_200948_a(50.0f, 2000.0f).func_200947_a(SoundType.field_185848_a).func_222380_e()));
        burnt_thorns = TFBlocks.BLOCKS.register("burnt_thorns", () -> new BurntThornsBlock(AbstractBlock.Properties.func_200949_a(Material.field_151575_d, MaterialColor.field_151665_m).func_200948_a(0.01f, 0.0f).func_200947_a(SoundType.field_185855_h).func_222380_e()));
        thorn_rose = TFBlocks.BLOCKS.register("thorn_rose", () -> new ThornRoseBlock(AbstractBlock.Properties.func_200945_a(Material.field_151585_k).func_200948_a(10.0f, 0.0f).func_200947_a(SoundType.field_185850_c).func_200942_a()));
        thorn_leaves = TFBlocks.BLOCKS.register("thorn_leaves", () -> new TFLeavesBlock(AbstractBlock.Properties.func_200945_a(Material.field_151584_j).harvestTool(ToolType.HOE).func_200943_b(0.2f).func_200944_c().func_226896_b_().func_200947_a(SoundType.field_185850_c)));
        beanstalk_leaves = TFBlocks.BLOCKS.register("beanstalk_leaves", () -> new TFLeavesBlock(AbstractBlock.Properties.func_200945_a(Material.field_151584_j).harvestTool(ToolType.HOE).func_200943_b(0.2f).func_200944_c().func_226896_b_().func_200947_a(SoundType.field_185850_c)));
        deadrock = TFBlocks.BLOCKS.register("deadrock", () -> new Block(AbstractBlock.Properties.func_200945_a(Material.field_151576_e).func_235861_h_().func_200948_a(100.0f, 6000000.0f).func_200947_a(SoundType.field_185851_d)));
        deadrock_cracked = TFBlocks.BLOCKS.register("deadrock_cracked", () -> new Block(AbstractBlock.Properties.func_200945_a(Material.field_151576_e).func_235861_h_().func_200948_a(100.0f, 6000000.0f).func_200947_a(SoundType.field_185851_d)));
        deadrock_weathered = TFBlocks.BLOCKS.register("deadrock_weathered", () -> new Block(AbstractBlock.Properties.func_200945_a(Material.field_151576_e).func_235861_h_().func_200948_a(100.0f, 6000000.0f).func_200947_a(SoundType.field_185851_d)));
        trollsteinn = TFBlocks.BLOCKS.register("trollsteinn", () -> new TrollsteinnBlock(AbstractBlock.Properties.func_200945_a(Material.field_151576_e).func_235861_h_().func_200948_a(2.0f, 15.0f).func_200947_a(SoundType.field_185851_d)));
        wispy_cloud = TFBlocks.BLOCKS.register("wispy_cloud", () -> new BreakableBlock(AbstractBlock.Properties.func_200945_a(Material.field_151597_y).func_200943_b(0.3f).func_200947_a(SoundType.field_185854_g).func_226896_b_()));
        fluffy_cloud = TFBlocks.BLOCKS.register("fluffy_cloud", () -> new Block(AbstractBlock.Properties.func_200945_a(Material.field_151598_x).func_200948_a(0.8f, 0.0f).func_200947_a(SoundType.field_185854_g)));
        giant_cobblestone = TFBlocks.BLOCKS.register("giant_cobblestone", () -> new GiantBlock(AbstractBlock.Properties.func_200950_a((AbstractBlock)Blocks.field_150347_e).func_235861_h_().func_200948_a(128.0f, 10.0f)));
        giant_log = TFBlocks.BLOCKS.register("giant_log", () -> new GiantLogBlock(AbstractBlock.Properties.func_200950_a((AbstractBlock)Blocks.field_196617_K).func_235861_h_().harvestTool(ToolType.PICKAXE).func_200948_a(128.0f, 0.0f)));
        giant_leaves = TFBlocks.BLOCKS.register("giant_leaves", () -> new GiantLeavesBlock(AbstractBlock.Properties.func_200950_a((AbstractBlock)Blocks.field_196642_W).func_235861_h_().harvestTool(ToolType.PICKAXE).func_200948_a(12.8f, 0.0f).func_226896_b_()));
        giant_obsidian = TFBlocks.BLOCKS.register("giant_obsidian", () -> new GiantBlock(AbstractBlock.Properties.func_200950_a((AbstractBlock)Blocks.field_150343_Z).func_235861_h_().func_200948_a(204800.0f, 8192000.0f)));
        uberous_soil = TFBlocks.BLOCKS.register("uberous_soil", () -> new UberousSoilBlock(AbstractBlock.Properties.func_200945_a(Material.field_151578_c).harvestTool(ToolType.SHOVEL).func_200943_b(0.6f).func_200947_a(SoundType.field_185849_b)));
        huge_stalk = TFBlocks.BLOCKS.register("huge_stalk", () -> new Block(AbstractBlock.Properties.func_200949_a(Material.field_151575_d, MaterialColor.field_151669_i).func_200948_a(1.25f, 7.0f).func_200947_a(SoundType.field_185850_c)));
        huge_mushgloom = TFBlocks.BLOCKS.register("huge_mushgloom", () -> new HugeMushroomBlock(AbstractBlock.Properties.func_200949_a(Material.field_151575_d, MaterialColor.field_151676_q).func_200943_b(0.2f).func_200947_a(SoundType.field_185848_a).func_235838_a_(state -> 5)));
        huge_mushgloom_stem = TFBlocks.BLOCKS.register("huge_mushgloom_stem", () -> new HugeMushroomBlock(AbstractBlock.Properties.func_200949_a(Material.field_151575_d, MaterialColor.field_151676_q).func_200943_b(0.2f).func_200947_a(SoundType.field_185848_a).func_235838_a_(state -> 5)));
        trollvidr = TFBlocks.BLOCKS.register("trollvidr", () -> new TrollRootBlock(AbstractBlock.Properties.func_200945_a(Material.field_151585_k).func_200947_a(SoundType.field_185850_c).func_200942_a()));
        unripe_trollber = TFBlocks.BLOCKS.register("unripe_trollber", () -> new UnripeTorchClusterBlock(AbstractBlock.Properties.func_200945_a(Material.field_151585_k).func_200947_a(SoundType.field_185850_c).func_200942_a().func_200944_c()));
        trollber = TFBlocks.BLOCKS.register("trollber", () -> new TrollRootBlock(AbstractBlock.Properties.func_200945_a(Material.field_151585_k).func_200947_a(SoundType.field_185850_c).func_200942_a().func_235838_a_(state -> 15)));
        huge_lilypad = TFBlocks.BLOCKS.register("huge_lilypad", () -> new HugeLilyPadBlock(AbstractBlock.Properties.func_200945_a(Material.field_151585_k).func_200947_a(SoundType.field_185850_c)));
        huge_waterlily = TFBlocks.BLOCKS.register("huge_waterlily", () -> new HugeWaterLilyBlock(AbstractBlock.Properties.func_200945_a(Material.field_151585_k).func_200947_a(SoundType.field_185850_c)));
        slider = TFBlocks.BLOCKS.register("slider", (Supplier)SliderBlock::new);
        castle_brick = TFBlocks.BLOCKS.register("castle_brick", () -> new CastleBlock(MaterialColor.field_151677_p));
        castle_brick_worn = TFBlocks.BLOCKS.register("castle_brick_worn", () -> new CastleBlock(MaterialColor.field_151677_p));
        castle_brick_cracked = TFBlocks.BLOCKS.register("castle_brick_cracked", () -> new CastleBlock(MaterialColor.field_151677_p));
        castle_brick_roof = TFBlocks.BLOCKS.register("castle_brick_roof", () -> new CastleBlock(MaterialColor.field_151670_w));
        castle_brick_mossy = TFBlocks.BLOCKS.register("castle_brick_mossy", () -> new CastleBlock(MaterialColor.field_151677_p));
        castle_brick_frame = TFBlocks.BLOCKS.register("castle_brick_frame", () -> new CastleBlock(MaterialColor.field_151677_p));
        castle_pillar_encased = TFBlocks.BLOCKS.register("castle_pillar_encased", () -> new RotatedPillarBlock(AbstractBlock.Properties.func_200949_a(Material.field_151576_e, MaterialColor.field_151677_p).func_235861_h_().func_200948_a(100.0f, 35.0f).func_200947_a(SoundType.field_185851_d)));
        castle_pillar_encased_tile = TFBlocks.BLOCKS.register("castle_pillar_encased_tile", () -> new Block(AbstractBlock.Properties.func_200949_a(Material.field_151576_e, MaterialColor.field_151677_p).func_235861_h_().func_200948_a(100.0f, 35.0f).func_200947_a(SoundType.field_185851_d)));
        castle_pillar_bold = TFBlocks.BLOCKS.register("castle_pillar_bold", () -> new RotatedPillarBlock(AbstractBlock.Properties.func_200949_a(Material.field_151576_e, MaterialColor.field_151677_p).func_235861_h_().func_200948_a(100.0f, 35.0f).func_200947_a(SoundType.field_185851_d)));
        castle_pillar_bold_tile = TFBlocks.BLOCKS.register("castle_pillar_bold_tile", () -> new Block(AbstractBlock.Properties.func_200949_a(Material.field_151576_e, MaterialColor.field_151677_p).func_235861_h_().func_200948_a(100.0f, 35.0f).func_200947_a(SoundType.field_185851_d)));
        castle_stairs_brick = TFBlocks.BLOCKS.register("castle_stairs_brick", () -> new StairsBlock(((Block)TFBlocks.castle_brick.get()).func_176223_P(), AbstractBlock.Properties.func_200950_a((AbstractBlock)TFBlocks.castle_brick.get())));
        castle_stairs_worn = TFBlocks.BLOCKS.register("castle_stairs_worn", () -> new StairsBlock(((Block)TFBlocks.castle_brick_worn.get()).func_176223_P(), AbstractBlock.Properties.func_200950_a((AbstractBlock)TFBlocks.castle_brick_worn.get())));
        castle_stairs_cracked = TFBlocks.BLOCKS.register("castle_stairs_cracked", () -> new StairsBlock(((Block)TFBlocks.castle_brick_cracked.get()).func_176223_P(), AbstractBlock.Properties.func_200950_a((AbstractBlock)TFBlocks.castle_brick_cracked.get())));
        castle_stairs_mossy = TFBlocks.BLOCKS.register("castle_stairs_mossy", () -> new StairsBlock(((Block)TFBlocks.castle_brick_mossy.get()).func_176223_P(), AbstractBlock.Properties.func_200950_a((AbstractBlock)TFBlocks.castle_brick_mossy.get())));
        castle_stairs_encased = TFBlocks.BLOCKS.register("castle_stairs_encased", () -> new StairsBlock(((Block)TFBlocks.castle_pillar_encased.get()).func_176223_P(), AbstractBlock.Properties.func_200950_a((AbstractBlock)TFBlocks.castle_pillar_encased.get())));
        castle_stairs_bold = TFBlocks.BLOCKS.register("castle_stairs_bold", () -> new StairsBlock(((Block)TFBlocks.castle_pillar_bold.get()).func_176223_P(), AbstractBlock.Properties.func_200950_a((AbstractBlock)TFBlocks.castle_pillar_bold.get())));
        castle_rune_brick_pink = TFBlocks.BLOCKS.register("castle_rune_brick_pink", () -> new Block(AbstractBlock.Properties.func_200949_a(Material.field_151576_e, MaterialColor.field_151677_p).func_235861_h_().func_200948_a(100.0f, 15.0f).func_200947_a(SoundType.field_185851_d)));
        castle_rune_brick_blue = TFBlocks.BLOCKS.register("castle_rune_brick_blue", () -> new Block(AbstractBlock.Properties.func_200949_a(Material.field_151576_e, MaterialColor.field_151677_p).func_235861_h_().func_200948_a(100.0f, 15.0f).func_200947_a(SoundType.field_185851_d)));
        castle_rune_brick_yellow = TFBlocks.BLOCKS.register("castle_rune_brick_yellow", () -> new Block(AbstractBlock.Properties.func_200949_a(Material.field_151576_e, MaterialColor.field_151677_p).func_235861_h_().func_200948_a(100.0f, 15.0f).func_200947_a(SoundType.field_185851_d)));
        castle_rune_brick_purple = TFBlocks.BLOCKS.register("castle_rune_brick_purple", () -> new Block(AbstractBlock.Properties.func_200949_a(Material.field_151576_e, MaterialColor.field_151677_p).func_235861_h_().func_200948_a(100.0f, 15.0f).func_200947_a(SoundType.field_185851_d)));
        force_field_purple = TFBlocks.BLOCKS.register("force_field_purple", () -> new ForceFieldBlock(AbstractBlock.Properties.func_200945_a(Material.field_175972_I).func_200943_b(-1.0f).func_235838_a_(state -> 2).func_222380_e().func_226896_b_()));
        force_field_pink = TFBlocks.BLOCKS.register("force_field_pink", () -> new ForceFieldBlock(AbstractBlock.Properties.func_200945_a(Material.field_175972_I).func_200943_b(-1.0f).func_235838_a_(state -> 2).func_222380_e().func_226896_b_()));
        force_field_orange = TFBlocks.BLOCKS.register("force_field_orange", () -> new ForceFieldBlock(AbstractBlock.Properties.func_200945_a(Material.field_175972_I).func_200943_b(-1.0f).func_235838_a_(state -> 2).func_222380_e().func_226896_b_()));
        force_field_green = TFBlocks.BLOCKS.register("force_field_green", () -> new ForceFieldBlock(AbstractBlock.Properties.func_200945_a(Material.field_175972_I).func_200943_b(-1.0f).func_235838_a_(state -> 2).func_222380_e().func_226896_b_()));
        force_field_blue = TFBlocks.BLOCKS.register("force_field_blue", () -> new ForceFieldBlock(AbstractBlock.Properties.func_200945_a(Material.field_175972_I).func_200943_b(-1.0f).func_235838_a_(state -> 2).func_222380_e().func_226896_b_()));
        cinder_furnace = TFBlocks.BLOCKS.register("cinder_furnace", (Supplier)CinderFurnaceBlock::new);
        cinder_log = TFBlocks.BLOCKS.register("cinder_log", () -> new TFLogBlock(AbstractBlock.Properties.func_200949_a(Material.field_151575_d, MaterialColor.field_151670_w).harvestTool(ToolType.AXE).func_200943_b(1.0f)));
        cinder_wood = TFBlocks.BLOCKS.register("cinder_wood", () -> new UnfinishedBlock(AbstractBlock.Properties.func_200949_a(Material.field_151575_d, MaterialColor.field_151670_w).harvestTool(ToolType.AXE).func_200943_b(1.0f), true));
        castle_door_yellow = TFBlocks.BLOCKS.register("castle_door_yellow", () -> new CastleDoorBlock(AbstractBlock.Properties.func_235836_a_(Material.field_151576_e, state -> state.func_177229_b((Property)CastleDoorBlock.VANISHED) ? MaterialColor.field_151660_b : MaterialColor.field_151679_y).func_235861_h_().func_200948_a(100.0f, 35.0f)));
        castle_door_purple = TFBlocks.BLOCKS.register("castle_door_purple", () -> new CastleDoorBlock(AbstractBlock.Properties.func_235836_a_(Material.field_151576_e, state -> state.func_177229_b((Property)CastleDoorBlock.VANISHED) ? MaterialColor.field_151660_b : MaterialColor.field_151679_y).func_235861_h_().func_200948_a(100.0f, 35.0f)));
        castle_door_pink = TFBlocks.BLOCKS.register("castle_door_pink", () -> new CastleDoorBlock(AbstractBlock.Properties.func_235836_a_(Material.field_151576_e, state -> state.func_177229_b((Property)CastleDoorBlock.VANISHED) ? MaterialColor.field_151660_b : MaterialColor.field_151679_y).func_235861_h_().func_200948_a(100.0f, 35.0f)));
        castle_door_blue = TFBlocks.BLOCKS.register("castle_door_blue", () -> new CastleDoorBlock(AbstractBlock.Properties.func_235836_a_(Material.field_151576_e, state -> state.func_177229_b((Property)CastleDoorBlock.VANISHED) ? MaterialColor.field_151660_b : MaterialColor.field_151679_y).func_235861_h_().func_200948_a(100.0f, 35.0f)));
        experiment_115 = TFBlocks.BLOCKS.register("experiment_115", (Supplier)Experiment115Block::new);
        twilight_portal_miniature_structure = TFBlocks.BLOCKS.register("twilight_portal_miniature_structure", (Supplier)MiniatureStructureBlock::new);
        naga_courtyard_miniature_structure = TFBlocks.BLOCKS.register("naga_courtyard_miniature_structure", (Supplier)MiniatureStructureBlock::new);
        lich_tower_miniature_structure = TFBlocks.BLOCKS.register("lich_tower_miniature_structure", (Supplier)MiniatureStructureBlock::new);
        knightmetal_block = TFBlocks.BLOCKS.register("knightmetal_block", () -> new KnightmetalBlock(AbstractBlock.Properties.func_200945_a(Material.field_151573_f).func_235861_h_().harvestTool(ToolType.PICKAXE).func_200948_a(5.0f, 41.0f).func_200947_a(SoundType.field_185852_e)));
        ironwood_block = TFBlocks.BLOCKS.register("ironwood_block", () -> new CompressedBlock(AbstractBlock.Properties.func_200949_a(Material.field_151575_d, MaterialColor.field_151663_o).harvestTool(ToolType.AXE).func_200948_a(5.0f, 10.0f).func_200947_a(SoundType.field_185848_a)));
        fiery_block = TFBlocks.BLOCKS.register("fiery_block", () -> new CompressedBlock(AbstractBlock.Properties.func_200949_a(Material.field_151573_f, MaterialColor.field_193560_ab).func_235861_h_().harvestTool(ToolType.PICKAXE).func_200948_a(5.0f, 10.0f).func_200947_a(SoundType.field_185852_e).func_226896_b_().func_235856_e_((state, world, pos) -> true)));
        steeleaf_block = TFBlocks.BLOCKS.register("steeleaf_block", () -> new CompressedBlock(AbstractBlock.Properties.func_200949_a(Material.field_151584_j, MaterialColor.field_151669_i).harvestTool(ToolType.HOE).func_200948_a(5.0f, 10.0f).func_200947_a(SoundType.field_185850_c)));
        arctic_fur_block = TFBlocks.BLOCKS.register("arctic_fur_block", () -> new CompressedBlock(AbstractBlock.Properties.func_200949_a(Material.field_151580_n, MaterialColor.field_151659_e).harvestTool(ToolType.HOE).func_200948_a(0.8f, 10.0f).func_200947_a(SoundType.field_185854_g)));
        carminite_block = TFBlocks.BLOCKS.register("carminite_block", () -> new CompressedBlock(AbstractBlock.Properties.func_200949_a(Material.field_151571_B, MaterialColor.field_151645_D).func_200948_a(0.0f, 10.0f).func_200947_a(SoundType.field_185859_l)));
        spiral_bricks = TFBlocks.BLOCKS.register("spiral_bricks", (Supplier)SpiralBrickBlock::new);
        etched_nagastone = TFBlocks.BLOCKS.register("etched_nagastone", () -> new EtchedNagastoneBlock(AbstractBlock.Properties.func_200945_a(Material.field_151576_e).func_235861_h_().func_200948_a(1.5f, 10.0f).func_200947_a(SoundType.field_185851_d)));
        nagastone_pillar = TFBlocks.BLOCKS.register("nagastone_pillar", (Supplier)NagastonePillarBlock::new);
        nagastone_stairs_left = TFBlocks.BLOCKS.register("nagastone_stairs_left", () -> new StairsBlock(((Block)TFBlocks.etched_nagastone.get()).func_176223_P(), AbstractBlock.Properties.func_200950_a((AbstractBlock)TFBlocks.etched_nagastone.get())));
        nagastone_stairs_right = TFBlocks.BLOCKS.register("nagastone_stairs_right", () -> new StairsBlock(((Block)TFBlocks.etched_nagastone.get()).func_176223_P(), AbstractBlock.Properties.func_200950_a((AbstractBlock)TFBlocks.etched_nagastone.get())));
        etched_nagastone_mossy = TFBlocks.BLOCKS.register("etched_nagastone_mossy", () -> new EtchedNagastoneBlock(AbstractBlock.Properties.func_200945_a(Material.field_151576_e).func_235861_h_().func_200948_a(1.5f, 10.0f).func_200947_a(SoundType.field_185851_d)));
        nagastone_pillar_mossy = TFBlocks.BLOCKS.register("nagastone_pillar_mossy", (Supplier)NagastonePillarBlock::new);
        nagastone_stairs_mossy_left = TFBlocks.BLOCKS.register("nagastone_stairs_mossy_left", () -> new StairsBlock(((Block)TFBlocks.etched_nagastone_mossy.get()).func_176223_P(), AbstractBlock.Properties.func_200950_a((AbstractBlock)TFBlocks.etched_nagastone_mossy.get())));
        nagastone_stairs_mossy_right = TFBlocks.BLOCKS.register("nagastone_stairs_mossy_right", () -> new StairsBlock(((Block)TFBlocks.etched_nagastone_mossy.get()).func_176223_P(), AbstractBlock.Properties.func_200950_a((AbstractBlock)TFBlocks.etched_nagastone_mossy.get())));
        etched_nagastone_weathered = TFBlocks.BLOCKS.register("etched_nagastone_weathered", () -> new EtchedNagastoneBlock(AbstractBlock.Properties.func_200945_a(Material.field_151576_e).func_200948_a(1.5f, 10.0f).func_200947_a(SoundType.field_185851_d)));
        nagastone_pillar_weathered = TFBlocks.BLOCKS.register("nagastone_pillar_weathered", (Supplier)NagastonePillarBlock::new);
        nagastone_stairs_weathered_left = TFBlocks.BLOCKS.register("nagastone_stairs_weathered_left", () -> new StairsBlock(((Block)TFBlocks.etched_nagastone_weathered.get()).func_176223_P(), AbstractBlock.Properties.func_200950_a((AbstractBlock)TFBlocks.etched_nagastone_weathered.get())));
        nagastone_stairs_weathered_right = TFBlocks.BLOCKS.register("nagastone_stairs_weathered_right", () -> new StairsBlock(((Block)TFBlocks.etched_nagastone_weathered.get()).func_176223_P(), AbstractBlock.Properties.func_200950_a((AbstractBlock)TFBlocks.etched_nagastone_weathered.get())));
        iron_ladder = TFBlocks.BLOCKS.register("iron_ladder", () -> new IronLadderBlock(AbstractBlock.Properties.func_200945_a(Material.field_151594_q).func_235861_h_().harvestTool(ToolType.PICKAXE).func_200948_a(5.0f, 10.0f).func_200947_a(SoundType.field_185852_e).func_226896_b_()));
        stone_twist = TFBlocks.BLOCKS.register("stone_twist", () -> new RotatedPillarBlock(AbstractBlock.Properties.func_200945_a(Material.field_151576_e).func_235861_h_().func_200948_a(1.5f, 10.0f)));
        stone_twist_thin = TFBlocks.BLOCKS.register("stone_twist_thin", () -> new WallPillarBlock(Material.field_151576_e, 12.0, 16.0));
        keepsake_casket = TFBlocks.BLOCKS.register("keepsake_casket", (Supplier)KeepsakeCasketBlock::new);
        potted_twilight_oak_sapling = TFBlocks.BLOCKS.register("potted_twilight_oak_sapling", () -> new FlowerPotBlock(() -> (FlowerPotBlock)Blocks.field_150457_bL, (Supplier)TFBlocks.oak_sapling, AbstractBlock.Properties.func_200950_a((AbstractBlock)Blocks.field_150457_bL)));
        potted_canopy_sapling = TFBlocks.BLOCKS.register("potted_canopy_sapling", () -> new FlowerPotBlock(() -> (FlowerPotBlock)Blocks.field_150457_bL, (Supplier)TFBlocks.canopy_sapling, AbstractBlock.Properties.func_200950_a((AbstractBlock)Blocks.field_150457_bL)));
        potted_mangrove_sapling = TFBlocks.BLOCKS.register("potted_mangrove_sapling", () -> new FlowerPotBlock(() -> (FlowerPotBlock)Blocks.field_150457_bL, (Supplier)TFBlocks.mangrove_sapling, AbstractBlock.Properties.func_200950_a((AbstractBlock)Blocks.field_150457_bL)));
        potted_darkwood_sapling = TFBlocks.BLOCKS.register("potted_darkwood_sapling", () -> new FlowerPotBlock(() -> (FlowerPotBlock)Blocks.field_150457_bL, (Supplier)TFBlocks.darkwood_sapling, AbstractBlock.Properties.func_200950_a((AbstractBlock)Blocks.field_150457_bL)));
        potted_hollow_oak_sapling = TFBlocks.BLOCKS.register("potted_hollow_oak_sapling", () -> new FlowerPotBlock(() -> (FlowerPotBlock)Blocks.field_150457_bL, (Supplier)TFBlocks.hollow_oak_sapling, AbstractBlock.Properties.func_200950_a((AbstractBlock)Blocks.field_150457_bL)));
        potted_rainboak_sapling = TFBlocks.BLOCKS.register("potted_rainboak_sapling", () -> new FlowerPotBlock(() -> (FlowerPotBlock)Blocks.field_150457_bL, (Supplier)TFBlocks.rainboak_sapling, AbstractBlock.Properties.func_200950_a((AbstractBlock)Blocks.field_150457_bL)));
        potted_time_sapling = TFBlocks.BLOCKS.register("potted_time_sapling", () -> new FlowerPotBlock(() -> (FlowerPotBlock)Blocks.field_150457_bL, (Supplier)TFBlocks.time_sapling, AbstractBlock.Properties.func_200950_a((AbstractBlock)Blocks.field_150457_bL)));
        potted_trans_sapling = TFBlocks.BLOCKS.register("potted_trans_sapling", () -> new FlowerPotBlock(() -> (FlowerPotBlock)Blocks.field_150457_bL, (Supplier)TFBlocks.transformation_sapling, AbstractBlock.Properties.func_200950_a((AbstractBlock)Blocks.field_150457_bL)));
        potted_mine_sapling = TFBlocks.BLOCKS.register("potted_mine_sapling", () -> new FlowerPotBlock(() -> (FlowerPotBlock)Blocks.field_150457_bL, (Supplier)TFBlocks.mining_sapling, AbstractBlock.Properties.func_200950_a((AbstractBlock)Blocks.field_150457_bL)));
        potted_sort_sapling = TFBlocks.BLOCKS.register("potted_sort_sapling", () -> new FlowerPotBlock(() -> (FlowerPotBlock)Blocks.field_150457_bL, (Supplier)TFBlocks.sorting_sapling, AbstractBlock.Properties.func_200950_a((AbstractBlock)Blocks.field_150457_bL)));
        potted_mayapple = TFBlocks.BLOCKS.register("potted_mayapple", () -> new FlowerPotBlock(() -> (FlowerPotBlock)Blocks.field_150457_bL, (Supplier)TFBlocks.mayapple, AbstractBlock.Properties.func_200950_a((AbstractBlock)Blocks.field_150457_bL)));
        potted_fiddlehead = TFBlocks.BLOCKS.register("potted_fiddlehead", () -> new FlowerPotBlock(() -> (FlowerPotBlock)Blocks.field_150457_bL, (Supplier)TFBlocks.fiddlehead, AbstractBlock.Properties.func_200950_a((AbstractBlock)Blocks.field_150457_bL)));
        potted_mushgloom = TFBlocks.BLOCKS.register("potted_mushgloom", () -> new FlowerPotBlock(() -> (FlowerPotBlock)Blocks.field_150457_bL, (Supplier)TFBlocks.mushgloom, AbstractBlock.Properties.func_200950_a((AbstractBlock)Blocks.field_150457_bL)));
        potted_thorn = TFBlocks.BLOCKS.register("potted_thorn", () -> new FlowerPotBlock(() -> (FlowerPotBlock)Blocks.field_150457_bL, (Supplier)TFBlocks.brown_thorns, AbstractBlock.Properties.func_200950_a((AbstractBlock)Blocks.field_150457_bL)));
        potted_green_thorn = TFBlocks.BLOCKS.register("potted_green_thorn", () -> new FlowerPotBlock(() -> (FlowerPotBlock)Blocks.field_150457_bL, (Supplier)TFBlocks.green_thorns, AbstractBlock.Properties.func_200950_a((AbstractBlock)Blocks.field_150457_bL)));
        potted_dead_thorn = TFBlocks.BLOCKS.register("potted_dead_thorn", () -> new FlowerPotBlock(() -> (FlowerPotBlock)Blocks.field_150457_bL, (Supplier)TFBlocks.burnt_thorns, AbstractBlock.Properties.func_200950_a((AbstractBlock)Blocks.field_150457_bL)));
        TWILIGHT_OAK = WoodType.create(TwilightForestMod.prefix("twilight_oak").toString());
        CANOPY = WoodType.create(TwilightForestMod.prefix("canopy").toString());
        MANGROVE = WoodType.create(TwilightForestMod.prefix("mangrove").toString());
        DARKWOOD = WoodType.create(TwilightForestMod.prefix("darkwood").toString());
        TIMEWOOD = WoodType.create(TwilightForestMod.prefix("timewood").toString());
        TRANSFORMATION = WoodType.create(TwilightForestMod.prefix("transformation").toString());
        MINING = WoodType.create(TwilightForestMod.prefix("mining").toString());
        SORTING = WoodType.create(TwilightForestMod.prefix("sorting").toString());
        twilight_oak_planks = TFBlocks.BLOCKS.register("twilight_oak_planks", () -> new Block(AbstractBlock.Properties.func_200949_a(Material.field_151575_d, MaterialColor.field_151663_o).func_200948_a(2.0f, 5.0f).func_200947_a(SoundType.field_185848_a)));
        twilight_oak_stairs = TFBlocks.BLOCKS.register("twilight_oak_stairs", () -> new StairsBlock(((Block)TFBlocks.twilight_oak_planks.get()).func_176223_P(), AbstractBlock.Properties.func_200950_a((AbstractBlock)TFBlocks.twilight_oak_planks.get())));
        twilight_oak_slab = TFBlocks.BLOCKS.register("twilight_oak_slab", () -> new SlabBlock(AbstractBlock.Properties.func_200950_a((AbstractBlock)TFBlocks.twilight_oak_planks.get())));
        twilight_oak_button = TFBlocks.BLOCKS.register("twilight_oak_button", () -> new WoodButtonBlock(AbstractBlock.Properties.func_200950_a((AbstractBlock)TFBlocks.twilight_oak_planks.get()).func_200942_a().func_200943_b(0.5f).func_200947_a(SoundType.field_185848_a)));
        twilight_oak_fence = TFBlocks.BLOCKS.register("twilight_oak_fence", () -> new FenceBlock(AbstractBlock.Properties.func_200950_a((AbstractBlock)TFBlocks.twilight_oak_planks.get())));
        twilight_oak_gate = TFBlocks.BLOCKS.register("twilight_oak_gate", () -> new FenceGateBlock(AbstractBlock.Properties.func_200950_a((AbstractBlock)TFBlocks.twilight_oak_planks.get())));
        twilight_oak_plate = TFBlocks.BLOCKS.register("twilight_oak_plate", () -> new PressurePlateBlock(PressurePlateBlock.Sensitivity.EVERYTHING, AbstractBlock.Properties.func_200950_a((AbstractBlock)TFBlocks.twilight_oak_planks.get()).func_200942_a().func_200943_b(0.5f).func_200947_a(SoundType.field_185848_a)));
        twilight_oak_door = TFBlocks.BLOCKS.register("twilight_oak_door", () -> new DoorBlock(AbstractBlock.Properties.func_200950_a((AbstractBlock)TFBlocks.twilight_oak_planks.get()).func_200943_b(3.0f).func_200947_a(SoundType.field_185848_a).func_226896_b_()));
        twilight_oak_trapdoor = TFBlocks.BLOCKS.register("twilight_oak_trapdoor", () -> new TrapDoorBlock(AbstractBlock.Properties.func_200950_a((AbstractBlock)TFBlocks.twilight_oak_planks.get()).func_200943_b(3.0f).func_200947_a(SoundType.field_185848_a).func_226896_b_()));
        twilight_oak_sign = TFBlocks.BLOCKS.register("twilight_oak_sign", () -> new TFSignBlock(AbstractBlock.Properties.func_200950_a((AbstractBlock)TFBlocks.twilight_oak_planks.get()).func_200943_b(3.0f).func_200947_a(SoundType.field_185848_a).func_226896_b_().func_200942_a(), TFBlocks.TWILIGHT_OAK));
        twilight_wall_sign = TFBlocks.BLOCKS.register("twilight_wall_sign", () -> new TFWallSignBlock(AbstractBlock.Properties.func_200950_a((AbstractBlock)TFBlocks.twilight_oak_planks.get()).func_200943_b(3.0f).func_200947_a(SoundType.field_185848_a).func_226896_b_().func_200942_a(), TFBlocks.TWILIGHT_OAK));
        canopy_planks = TFBlocks.BLOCKS.register("canopy_planks", () -> new Block(AbstractBlock.Properties.func_200949_a(Material.field_151575_d, MaterialColor.field_151654_J).func_200948_a(2.0f, 5.0f).func_200947_a(SoundType.field_185848_a)));
        canopy_stairs = TFBlocks.BLOCKS.register("canopy_stairs", () -> new StairsBlock(((Block)TFBlocks.canopy_planks.get()).func_176223_P(), AbstractBlock.Properties.func_200950_a((AbstractBlock)TFBlocks.canopy_planks.get())));
        canopy_slab = TFBlocks.BLOCKS.register("canopy_slab", () -> new SlabBlock(AbstractBlock.Properties.func_200950_a((AbstractBlock)TFBlocks.canopy_planks.get())));
        canopy_button = TFBlocks.BLOCKS.register("canopy_button", () -> new WoodButtonBlock(AbstractBlock.Properties.func_200950_a((AbstractBlock)TFBlocks.canopy_planks.get()).func_200942_a().func_200943_b(0.5f).func_200947_a(SoundType.field_185848_a)));
        canopy_fence = TFBlocks.BLOCKS.register("canopy_fence", () -> new FenceBlock(AbstractBlock.Properties.func_200950_a((AbstractBlock)TFBlocks.canopy_planks.get())));
        canopy_gate = TFBlocks.BLOCKS.register("canopy_gate", () -> new FenceGateBlock(AbstractBlock.Properties.func_200950_a((AbstractBlock)TFBlocks.canopy_planks.get())));
        canopy_plate = TFBlocks.BLOCKS.register("canopy_plate", () -> new PressurePlateBlock(PressurePlateBlock.Sensitivity.EVERYTHING, AbstractBlock.Properties.func_200950_a((AbstractBlock)TFBlocks.canopy_planks.get()).func_200942_a().func_200943_b(0.5f).func_200947_a(SoundType.field_185848_a)));
        canopy_door = TFBlocks.BLOCKS.register("canopy_door", () -> new DoorBlock(AbstractBlock.Properties.func_200949_a(Material.field_151575_d, MaterialColor.field_151654_J).func_200943_b(3.0f).func_200947_a(SoundType.field_185848_a).func_226896_b_()));
        canopy_trapdoor = TFBlocks.BLOCKS.register("canopy_trapdoor", () -> new TrapDoorBlock(AbstractBlock.Properties.func_200949_a(Material.field_151575_d, MaterialColor.field_151658_d).func_200943_b(3.0f).func_200947_a(SoundType.field_185848_a).func_226896_b_()));
        canopy_sign = TFBlocks.BLOCKS.register("canopy_sign", () -> new TFSignBlock(AbstractBlock.Properties.func_200950_a((AbstractBlock)TFBlocks.canopy_planks.get()).func_200943_b(3.0f).func_200947_a(SoundType.field_185848_a).func_226896_b_().func_200942_a(), TFBlocks.CANOPY));
        canopy_wall_sign = TFBlocks.BLOCKS.register("canopy_wall_sign", () -> new TFWallSignBlock(AbstractBlock.Properties.func_200950_a((AbstractBlock)TFBlocks.canopy_planks.get()).func_200943_b(3.0f).func_200947_a(SoundType.field_185848_a).func_226896_b_().func_200942_a(), TFBlocks.CANOPY));
        mangrove_planks = TFBlocks.BLOCKS.register("mangrove_planks", () -> new Block(AbstractBlock.Properties.func_200949_a(Material.field_151575_d, MaterialColor.field_151664_l).func_200948_a(2.0f, 5.0f).func_200947_a(SoundType.field_185848_a)));
        mangrove_stairs = TFBlocks.BLOCKS.register("mangrove_stairs", () -> new StairsBlock(((Block)TFBlocks.mangrove_planks.get()).func_176223_P(), AbstractBlock.Properties.func_200950_a((AbstractBlock)TFBlocks.mangrove_planks.get())));
        mangrove_slab = TFBlocks.BLOCKS.register("mangrove_slab", () -> new SlabBlock(AbstractBlock.Properties.func_200950_a((AbstractBlock)TFBlocks.mangrove_planks.get()).func_200948_a(2.0f, 5.0f).func_200947_a(SoundType.field_185848_a)));
        mangrove_button = TFBlocks.BLOCKS.register("mangrove_button", () -> new WoodButtonBlock(AbstractBlock.Properties.func_200950_a((AbstractBlock)TFBlocks.mangrove_planks.get()).func_200942_a().func_200943_b(0.5f).func_200947_a(SoundType.field_185848_a)));
        mangrove_fence = TFBlocks.BLOCKS.register("mangrove_fence", () -> new FenceBlock(AbstractBlock.Properties.func_200950_a((AbstractBlock)TFBlocks.mangrove_planks.get())));
        mangrove_gate = TFBlocks.BLOCKS.register("mangrove_gate", () -> new FenceGateBlock(AbstractBlock.Properties.func_200950_a((AbstractBlock)TFBlocks.mangrove_planks.get())));
        mangrove_plate = TFBlocks.BLOCKS.register("mangrove_plate", () -> new PressurePlateBlock(PressurePlateBlock.Sensitivity.EVERYTHING, AbstractBlock.Properties.func_200950_a((AbstractBlock)TFBlocks.mangrove_planks.get()).func_200942_a().func_200943_b(0.5f).func_200947_a(SoundType.field_185848_a)));
        mangrove_door = TFBlocks.BLOCKS.register("mangrove_door", () -> new DoorBlock(AbstractBlock.Properties.func_200950_a((AbstractBlock)TFBlocks.mangrove_planks.get()).func_200943_b(3.0f).func_200947_a(SoundType.field_185848_a).func_226896_b_()));
        mangrove_trapdoor = TFBlocks.BLOCKS.register("mangrove_trapdoor", () -> new TrapDoorBlock(AbstractBlock.Properties.func_200950_a((AbstractBlock)TFBlocks.mangrove_planks.get()).func_200943_b(3.0f).func_200947_a(SoundType.field_185848_a).func_226896_b_()));
        mangrove_sign = TFBlocks.BLOCKS.register("mangrove_sign", () -> new TFSignBlock(AbstractBlock.Properties.func_200950_a((AbstractBlock)TFBlocks.mangrove_planks.get()).func_200943_b(3.0f).func_200947_a(SoundType.field_185848_a).func_226896_b_().func_200942_a(), TFBlocks.MANGROVE));
        mangrove_wall_sign = TFBlocks.BLOCKS.register("mangrove_wall_sign", () -> new TFWallSignBlock(AbstractBlock.Properties.func_200950_a((AbstractBlock)TFBlocks.mangrove_planks.get()).func_200943_b(3.0f).func_200947_a(SoundType.field_185848_a).func_226896_b_().func_200942_a(), TFBlocks.MANGROVE));
        dark_planks = TFBlocks.BLOCKS.register("dark_planks", () -> new Block(AbstractBlock.Properties.func_200949_a(Material.field_151575_d, MaterialColor.field_151676_q).func_200948_a(2.0f, 5.0f).func_200947_a(SoundType.field_185848_a)));
        dark_stairs = TFBlocks.BLOCKS.register("dark_stairs", () -> new StairsBlock(((Block)TFBlocks.dark_planks.get()).func_176223_P(), AbstractBlock.Properties.func_200950_a((AbstractBlock)TFBlocks.dark_planks.get())));
        dark_slab = TFBlocks.BLOCKS.register("dark_slab", () -> new SlabBlock(AbstractBlock.Properties.func_200950_a((AbstractBlock)TFBlocks.dark_planks.get()).func_200948_a(2.0f, 5.0f).func_200947_a(SoundType.field_185848_a)));
        dark_button = TFBlocks.BLOCKS.register("dark_button", () -> new WoodButtonBlock(AbstractBlock.Properties.func_200950_a((AbstractBlock)TFBlocks.dark_planks.get()).func_200942_a().func_200943_b(0.5f).func_200947_a(SoundType.field_185848_a)));
        dark_fence = TFBlocks.BLOCKS.register("dark_fence", () -> new FenceBlock(AbstractBlock.Properties.func_200950_a((AbstractBlock)TFBlocks.dark_planks.get())));
        dark_gate = TFBlocks.BLOCKS.register("dark_gate", () -> new FenceGateBlock(AbstractBlock.Properties.func_200950_a((AbstractBlock)TFBlocks.dark_planks.get())));
        dark_plate = TFBlocks.BLOCKS.register("dark_plate", () -> new PressurePlateBlock(PressurePlateBlock.Sensitivity.EVERYTHING, AbstractBlock.Properties.func_200950_a((AbstractBlock)TFBlocks.dark_planks.get()).func_200942_a().func_200943_b(0.5f).func_200947_a(SoundType.field_185848_a)));
        dark_door = TFBlocks.BLOCKS.register("dark_door", () -> new DoorBlock(AbstractBlock.Properties.func_200950_a((AbstractBlock)TFBlocks.dark_planks.get()).func_200943_b(3.0f).func_200947_a(SoundType.field_185848_a).func_226896_b_()));
        dark_trapdoor = TFBlocks.BLOCKS.register("dark_trapdoor", () -> new TrapDoorBlock(AbstractBlock.Properties.func_200950_a((AbstractBlock)TFBlocks.dark_planks.get()).func_200943_b(3.0f).func_200947_a(SoundType.field_185848_a).func_226896_b_()));
        darkwood_sign = TFBlocks.BLOCKS.register("darkwood_sign", () -> new TFSignBlock(AbstractBlock.Properties.func_200950_a((AbstractBlock)TFBlocks.dark_planks.get()).func_200943_b(3.0f).func_200947_a(SoundType.field_185848_a).func_226896_b_().func_200942_a(), TFBlocks.DARKWOOD));
        darkwood_wall_sign = TFBlocks.BLOCKS.register("darkwood_wall_sign", () -> new TFWallSignBlock(AbstractBlock.Properties.func_200950_a((AbstractBlock)TFBlocks.dark_planks.get()).func_200943_b(3.0f).func_200947_a(SoundType.field_185848_a).func_226896_b_().func_200942_a(), TFBlocks.DARKWOOD));
        time_planks = TFBlocks.BLOCKS.register("time_planks", () -> new Block(AbstractBlock.Properties.func_200949_a(Material.field_151575_d, MaterialColor.field_151664_l).func_200948_a(2.0f, 5.0f).func_200947_a(SoundType.field_185848_a)));
        time_stairs = TFBlocks.BLOCKS.register("time_stairs", () -> new StairsBlock(((Block)TFBlocks.time_planks.get()).func_176223_P(), AbstractBlock.Properties.func_200950_a((AbstractBlock)TFBlocks.time_planks.get())));
        time_slab = TFBlocks.BLOCKS.register("time_slab", () -> new SlabBlock(AbstractBlock.Properties.func_200950_a((AbstractBlock)TFBlocks.time_planks.get()).func_200948_a(2.0f, 5.0f).func_200947_a(SoundType.field_185848_a)));
        time_button = TFBlocks.BLOCKS.register("time_button", () -> new WoodButtonBlock(AbstractBlock.Properties.func_200950_a((AbstractBlock)TFBlocks.time_planks.get()).func_200942_a().func_200943_b(0.5f).func_200947_a(SoundType.field_185848_a)));
        time_fence = TFBlocks.BLOCKS.register("time_fence", () -> new FenceBlock(AbstractBlock.Properties.func_200950_a((AbstractBlock)TFBlocks.time_planks.get())));
        time_gate = TFBlocks.BLOCKS.register("time_gate", () -> new FenceGateBlock(AbstractBlock.Properties.func_200950_a((AbstractBlock)TFBlocks.time_planks.get())));
        time_plate = TFBlocks.BLOCKS.register("time_plate", () -> new PressurePlateBlock(PressurePlateBlock.Sensitivity.EVERYTHING, AbstractBlock.Properties.func_200950_a((AbstractBlock)TFBlocks.time_planks.get()).func_200942_a().func_200943_b(0.5f).func_200947_a(SoundType.field_185848_a)));
        time_door = TFBlocks.BLOCKS.register("time_door", () -> new DoorBlock(AbstractBlock.Properties.func_200950_a((AbstractBlock)TFBlocks.time_planks.get()).func_200943_b(3.0f).func_200947_a(SoundType.field_185848_a).func_226896_b_()));
        time_trapdoor = TFBlocks.BLOCKS.register("time_trapdoor", () -> new TrapDoorBlock(AbstractBlock.Properties.func_200950_a((AbstractBlock)TFBlocks.time_planks.get()).func_200943_b(3.0f).func_200947_a(SoundType.field_185848_a).func_226896_b_()));
        time_sign = TFBlocks.BLOCKS.register("time_sign", () -> new TFSignBlock(AbstractBlock.Properties.func_200950_a((AbstractBlock)TFBlocks.time_planks.get()).func_200943_b(3.0f).func_200947_a(SoundType.field_185848_a).func_226896_b_().func_200942_a(), TFBlocks.TIMEWOOD));
        time_wall_sign = TFBlocks.BLOCKS.register("time_wall_sign", () -> new TFWallSignBlock(AbstractBlock.Properties.func_200950_a((AbstractBlock)TFBlocks.time_planks.get()).func_200943_b(3.0f).func_200947_a(SoundType.field_185848_a).func_226896_b_().func_200942_a(), TFBlocks.TIMEWOOD));
        trans_planks = TFBlocks.BLOCKS.register("trans_planks", () -> new Block(AbstractBlock.Properties.func_200949_a(Material.field_151575_d, MaterialColor.field_151663_o).func_200948_a(2.0f, 5.0f).func_200947_a(SoundType.field_185848_a)));
        trans_stairs = TFBlocks.BLOCKS.register("trans_stairs", () -> new StairsBlock(((Block)TFBlocks.trans_planks.get()).func_176223_P(), AbstractBlock.Properties.func_200950_a((AbstractBlock)TFBlocks.trans_planks.get())));
        trans_slab = TFBlocks.BLOCKS.register("trans_slab", () -> new SlabBlock(AbstractBlock.Properties.func_200950_a((AbstractBlock)TFBlocks.trans_planks.get()).func_200948_a(2.0f, 5.0f).func_200947_a(SoundType.field_185848_a)));
        trans_button = TFBlocks.BLOCKS.register("trans_button", () -> new WoodButtonBlock(AbstractBlock.Properties.func_200950_a((AbstractBlock)TFBlocks.trans_planks.get()).func_200942_a().func_200943_b(0.5f).func_200947_a(SoundType.field_185848_a)));
        trans_fence = TFBlocks.BLOCKS.register("trans_fence", () -> new FenceBlock(AbstractBlock.Properties.func_200950_a((AbstractBlock)TFBlocks.trans_planks.get())));
        trans_gate = TFBlocks.BLOCKS.register("trans_gate", () -> new FenceGateBlock(AbstractBlock.Properties.func_200950_a((AbstractBlock)TFBlocks.trans_planks.get())));
        trans_plate = TFBlocks.BLOCKS.register("trans_plate", () -> new PressurePlateBlock(PressurePlateBlock.Sensitivity.EVERYTHING, AbstractBlock.Properties.func_200950_a((AbstractBlock)TFBlocks.trans_planks.get()).func_200942_a().func_200943_b(0.5f).func_200947_a(SoundType.field_185848_a)));
        trans_door = TFBlocks.BLOCKS.register("trans_door", () -> new DoorBlock(AbstractBlock.Properties.func_200950_a((AbstractBlock)TFBlocks.trans_planks.get()).func_200943_b(3.0f).func_200947_a(SoundType.field_185848_a).func_226896_b_()));
        trans_trapdoor = TFBlocks.BLOCKS.register("trans_trapdoor", () -> new TrapDoorBlock(AbstractBlock.Properties.func_200950_a((AbstractBlock)TFBlocks.trans_planks.get()).func_200943_b(3.0f).func_200947_a(SoundType.field_185848_a).func_226896_b_()));
        trans_sign = TFBlocks.BLOCKS.register("trans_sign", () -> new TFSignBlock(AbstractBlock.Properties.func_200950_a((AbstractBlock)TFBlocks.trans_planks.get()).func_200943_b(3.0f).func_200947_a(SoundType.field_185848_a).func_226896_b_().func_200942_a(), TFBlocks.TRANSFORMATION));
        trans_wall_sign = TFBlocks.BLOCKS.register("trans_wall_sign", () -> new TFWallSignBlock(AbstractBlock.Properties.func_200950_a((AbstractBlock)TFBlocks.trans_planks.get()).func_200943_b(3.0f).func_200947_a(SoundType.field_185848_a).func_226896_b_().func_200942_a(), TFBlocks.TRANSFORMATION));
        mine_planks = TFBlocks.BLOCKS.register("mine_planks", () -> new Block(AbstractBlock.Properties.func_200949_a(Material.field_151575_d, MaterialColor.field_151658_d).func_200948_a(2.0f, 5.0f).func_200947_a(SoundType.field_185848_a)));
        mine_stairs = TFBlocks.BLOCKS.register("mine_stairs", () -> new StairsBlock(((Block)TFBlocks.mine_planks.get()).func_176223_P(), AbstractBlock.Properties.func_200950_a((AbstractBlock)TFBlocks.mine_planks.get())));
        mine_slab = TFBlocks.BLOCKS.register("mine_slab", () -> new SlabBlock(AbstractBlock.Properties.func_200950_a((AbstractBlock)TFBlocks.mine_planks.get()).func_200948_a(2.0f, 5.0f).func_200947_a(SoundType.field_185848_a)));
        mine_button = TFBlocks.BLOCKS.register("mine_button", () -> new WoodButtonBlock(AbstractBlock.Properties.func_200950_a((AbstractBlock)TFBlocks.mine_planks.get()).func_200942_a().func_200943_b(0.5f).func_200947_a(SoundType.field_185848_a)));
        mine_fence = TFBlocks.BLOCKS.register("mine_fence", () -> new FenceBlock(AbstractBlock.Properties.func_200950_a((AbstractBlock)TFBlocks.mine_planks.get())));
        mine_gate = TFBlocks.BLOCKS.register("mine_gate", () -> new FenceGateBlock(AbstractBlock.Properties.func_200950_a((AbstractBlock)TFBlocks.mine_planks.get())));
        mine_plate = TFBlocks.BLOCKS.register("mine_plate", () -> new PressurePlateBlock(PressurePlateBlock.Sensitivity.EVERYTHING, AbstractBlock.Properties.func_200950_a((AbstractBlock)TFBlocks.mine_planks.get()).func_200942_a().func_200943_b(0.5f).func_200947_a(SoundType.field_185848_a)));
        mine_door = TFBlocks.BLOCKS.register("mine_door", () -> new DoorBlock(AbstractBlock.Properties.func_200950_a((AbstractBlock)TFBlocks.mine_planks.get()).func_200943_b(3.0f).func_200947_a(SoundType.field_185848_a).func_226896_b_()));
        mine_trapdoor = TFBlocks.BLOCKS.register("mine_trapdoor", () -> new TrapDoorBlock(AbstractBlock.Properties.func_200950_a((AbstractBlock)TFBlocks.mine_planks.get()).func_200943_b(3.0f).func_200947_a(SoundType.field_185848_a).func_226896_b_()));
        mine_sign = TFBlocks.BLOCKS.register("mine_sign", () -> new TFSignBlock(AbstractBlock.Properties.func_200950_a((AbstractBlock)TFBlocks.mine_planks.get()).func_200943_b(3.0f).func_200947_a(SoundType.field_185848_a).func_226896_b_().func_200942_a(), TFBlocks.MINING));
        mine_wall_sign = TFBlocks.BLOCKS.register("mine_wall_sign", () -> new TFWallSignBlock(AbstractBlock.Properties.func_200950_a((AbstractBlock)TFBlocks.mine_planks.get()).func_200943_b(3.0f).func_200947_a(SoundType.field_185848_a).func_226896_b_().func_200942_a(), TFBlocks.MINING));
        sort_planks = TFBlocks.BLOCKS.register("sort_planks", () -> new Block(AbstractBlock.Properties.func_200949_a(Material.field_151575_d, MaterialColor.field_151654_J).func_200948_a(2.0f, 5.0f).func_200947_a(SoundType.field_185848_a)));
        sort_stairs = TFBlocks.BLOCKS.register("sort_stairs", () -> new StairsBlock(((Block)TFBlocks.sort_planks.get()).func_176223_P(), AbstractBlock.Properties.func_200950_a((AbstractBlock)TFBlocks.sort_planks.get())));
        sort_slab = TFBlocks.BLOCKS.register("sort_slab", () -> new SlabBlock(AbstractBlock.Properties.func_200950_a((AbstractBlock)TFBlocks.sort_planks.get()).func_200948_a(2.0f, 5.0f).func_200947_a(SoundType.field_185848_a)));
        sort_button = TFBlocks.BLOCKS.register("sort_button", () -> new WoodButtonBlock(AbstractBlock.Properties.func_200950_a((AbstractBlock)TFBlocks.sort_planks.get()).func_200942_a().func_200943_b(0.5f).func_200947_a(SoundType.field_185848_a)));
        sort_fence = TFBlocks.BLOCKS.register("sort_fence", () -> new FenceBlock(AbstractBlock.Properties.func_200950_a((AbstractBlock)TFBlocks.sort_planks.get())));
        sort_gate = TFBlocks.BLOCKS.register("sort_gate", () -> new FenceGateBlock(AbstractBlock.Properties.func_200950_a((AbstractBlock)TFBlocks.sort_planks.get())));
        sort_plate = TFBlocks.BLOCKS.register("sort_plate", () -> new PressurePlateBlock(PressurePlateBlock.Sensitivity.EVERYTHING, AbstractBlock.Properties.func_200950_a((AbstractBlock)TFBlocks.sort_planks.get()).func_200942_a().func_200943_b(0.5f).func_200947_a(SoundType.field_185848_a)));
        sort_door = TFBlocks.BLOCKS.register("sort_door", () -> new DoorBlock(AbstractBlock.Properties.func_200950_a((AbstractBlock)TFBlocks.sort_planks.get()).func_200943_b(3.0f).func_200947_a(SoundType.field_185848_a).func_226896_b_()));
        sort_trapdoor = TFBlocks.BLOCKS.register("sort_trapdoor", () -> new TrapDoorBlock(AbstractBlock.Properties.func_200950_a((AbstractBlock)TFBlocks.sort_planks.get()).func_200943_b(3.0f).func_200947_a(SoundType.field_185848_a).func_226896_b_()));
        sort_sign = TFBlocks.BLOCKS.register("sort_sign", () -> new TFSignBlock(AbstractBlock.Properties.func_200950_a((AbstractBlock)TFBlocks.sort_planks.get()).func_200943_b(3.0f).func_200947_a(SoundType.field_185848_a).func_226896_b_().func_200942_a(), TFBlocks.SORTING));
        sort_wall_sign = TFBlocks.BLOCKS.register("sort_wall_sign", () -> new TFWallSignBlock(AbstractBlock.Properties.func_200950_a((AbstractBlock)TFBlocks.sort_planks.get()).func_200943_b(3.0f).func_200947_a(SoundType.field_185848_a).func_226896_b_().func_200942_a(), TFBlocks.SORTING));
    }
}
