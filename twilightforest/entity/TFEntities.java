// 
// Decompiled by Procyon v0.6-prerelease
// 

package twilightforest.entity;

import twilightforest.util.TFEntityNames;
import java.util.ArrayList;
import net.minecraft.block.material.Material;
import net.minecraft.block.Block;
import net.minecraft.block.BlockState;
import net.minecraft.world.IBlockReader;
import net.minecraft.world.spawner.WorldEntitySpawner;
import net.minecraft.block.Blocks;
import twilightforest.block.TFBlocks;
import net.minecraft.util.math.BlockPos;
import net.minecraft.world.IWorldReader;
import twilightforest.client.renderer.entity.BoarRenderer;
import twilightforest.client.model.entity.BoarModel;
import net.minecraft.client.renderer.entity.model.SheepModel;
import twilightforest.client.renderer.entity.BighornRenderer;
import twilightforest.client.model.entity.BighornFurLayer;
import twilightforest.client.model.entity.BighornModel;
import twilightforest.client.model.entity.DeerModel;
import twilightforest.client.model.entity.SkeletonDruidModel;
import twilightforest.client.renderer.entity.WraithRenderer;
import twilightforest.client.model.entity.WraithModel;
import twilightforest.client.renderer.entity.HydraRenderer;
import twilightforest.client.model.entity.HydraModel;
import twilightforest.client.renderer.entity.LichRenderer;
import twilightforest.client.model.entity.LichModel;
import twilightforest.client.model.entity.PenguinModel;
import twilightforest.client.model.entity.LichMinionModel;
import twilightforest.client.model.entity.LoyalZombieModel;
import twilightforest.client.renderer.entity.TinyBirdRenderer;
import twilightforest.client.model.entity.TinyBirdModel;
import twilightforest.client.model.entity.SquirrelModel;
import twilightforest.client.renderer.entity.BunnyRenderer;
import twilightforest.client.model.entity.BunnyModel;
import twilightforest.client.renderer.entity.BirdRenderer;
import twilightforest.client.model.entity.RavenModel;
import twilightforest.client.renderer.entity.QuestRamRenderer;
import twilightforest.client.model.entity.QuestRamModel;
import twilightforest.client.renderer.entity.KoboldRenderer;
import twilightforest.client.model.entity.KoboldModel;
import twilightforest.client.model.entity.MosquitoSwarmModel;
import twilightforest.client.model.entity.DeathTomeModel;
import twilightforest.client.model.entity.MinotaurModel;
import twilightforest.client.renderer.entity.MinoshroomRenderer;
import twilightforest.client.model.entity.MinoshroomModel;
import twilightforest.client.model.entity.FireBeetleModel;
import twilightforest.client.renderer.entity.SlimeBeetleRenderer;
import twilightforest.client.model.entity.SlimeBeetleModel;
import twilightforest.client.model.entity.PinchBeetleModel;
import twilightforest.client.renderer.entity.TFGhastRenderer;
import twilightforest.client.renderer.entity.CarminiteGolemRenderer;
import twilightforest.client.model.entity.CarminiteGolemModel;
import net.minecraft.client.renderer.entity.model.SilverfishModel;
import twilightforest.client.renderer.entity.CarminiteGhastRenderer;
import twilightforest.client.model.entity.TFGhastModel;
import twilightforest.client.renderer.entity.UrGhastRenderer;
import twilightforest.client.model.entity.UrGhastModel;
import twilightforest.client.renderer.entity.BlockChainGoblinRenderer;
import twilightforest.client.model.entity.BlockChainGoblinModel;
import twilightforest.client.renderer.entity.UpperGoblinKnightRenderer;
import twilightforest.client.model.entity.UpperGoblinKnightModel;
import twilightforest.client.model.entity.LowerGoblinKnightModel;
import net.minecraft.client.renderer.entity.model.EntityModel;
import twilightforest.client.renderer.entity.TFGenericMobRenderer;
import twilightforest.client.model.entity.HelmetCrabModel;
import twilightforest.client.renderer.entity.KnightPhantomRenderer;
import twilightforest.client.model.entity.KnightPhantomModel;
import twilightforest.client.renderer.entity.NagaRenderer;
import twilightforest.client.model.entity.NagaModel;
import twilightforest.client.model.entity.RedcapModel;
import twilightforest.client.renderer.entity.MazeSlimeRenderer;
import twilightforest.client.model.entity.YetiModel;
import twilightforest.client.model.entity.AlphaYetiModel;
import twilightforest.client.renderer.entity.SnowGuardianRenderer;
import twilightforest.client.model.entity.NoopModel;
import twilightforest.client.renderer.entity.StableIceCoreRenderer;
import twilightforest.client.model.entity.StableIceCoreModel;
import twilightforest.client.renderer.entity.UnstableIceCoreRenderer;
import twilightforest.client.model.entity.UnstableIceCoreModel;
import twilightforest.client.renderer.entity.SnowQueenRenderer;
import twilightforest.client.model.entity.SnowQueenModel;
import twilightforest.client.model.entity.TrollModel;
import net.minecraft.client.renderer.entity.model.BipedModel;
import twilightforest.client.renderer.entity.TFBipedRenderer;
import twilightforest.client.model.entity.RisingZombieModel;
import net.minecraft.client.renderer.entity.SpriteRenderer;
import net.minecraft.client.Minecraft;
import net.minecraft.client.renderer.entity.EntityRenderer;
import net.minecraft.client.renderer.entity.EntityRendererManager;
import net.minecraftforge.api.distmarker.Dist;
import net.minecraftforge.api.distmarker.OnlyIn;
import twilightforest.client.renderer.entity.DefaultArrowRenderer;
import twilightforest.client.renderer.entity.SlideBlockRenderer;
import twilightforest.client.renderer.entity.ThrownIceRenderer;
import twilightforest.client.renderer.entity.FallingIceRenderer;
import twilightforest.client.renderer.entity.ThrownWepRenderer;
import twilightforest.client.renderer.entity.MoonwormShotRenderer;
import twilightforest.client.renderer.entity.CicadaShotRenderer;
import twilightforest.client.renderer.entity.HydraMortarRenderer;
import twilightforest.client.renderer.entity.NoopRenderer;
import twilightforest.client.renderer.entity.RovingCubeRenderer;
import twilightforest.client.renderer.entity.AdherentRenderer;
import twilightforest.client.renderer.entity.HarbingerCubeRenderer;
import twilightforest.client.renderer.entity.CubeOfAnnihilationRenderer;
import twilightforest.client.renderer.entity.BlockChainRenderer;
import twilightforest.client.renderer.entity.IceCrystalRenderer;
import twilightforest.client.renderer.entity.TFGiantRenderer;
import twilightforest.client.renderer.entity.WinterWolfRenderer;
import twilightforest.client.renderer.entity.ProtectionBoxRenderer;
import twilightforest.client.renderer.entity.HedgeSpiderRenderer;
import twilightforest.client.renderer.entity.CarminiteBroodlingRenderer;
import twilightforest.client.renderer.entity.KingSpiderRenderer;
import twilightforest.client.renderer.entity.SwarmSpiderRenderer;
import twilightforest.client.renderer.entity.MistWolfRenderer;
import net.minecraft.client.renderer.entity.WolfRenderer;
import net.minecraftforge.fml.client.registry.RenderingRegistry;
import net.minecraft.entity.monster.ZombieEntity;
import net.minecraft.entity.monster.SpiderEntity;
import net.minecraft.entity.monster.AbstractSkeletonEntity;
import net.minecraft.entity.passive.SheepEntity;
import net.minecraft.entity.passive.PigEntity;
import net.minecraftforge.event.entity.EntityAttributeCreationEvent;
import net.minecraft.entity.MobEntity;
import net.minecraft.entity.monster.MonsterEntity;
import net.minecraft.entity.passive.AnimalEntity;
import net.minecraft.world.gen.Heightmap;
import twilightforest.item.TransformPowderItem;
import net.minecraftforge.eventbus.api.SubscribeEvent;
import net.minecraftforge.registries.IForgeRegistry;
import net.minecraftforge.registries.IForgeRegistryEntry;
import net.minecraftforge.event.RegistryEvent;
import net.minecraft.item.SpawnEggItem;
import twilightforest.item.TFItems;
import net.minecraft.item.Item;
import net.minecraft.util.SharedConstants;
import net.minecraft.entity.Entity;
import net.minecraft.entity.EntityClassification;
import net.minecraft.util.ResourceLocation;
import twilightforest.entity.projectile.IceSnowballEntity;
import twilightforest.entity.projectile.IceArrowEntity;
import twilightforest.entity.projectile.SeekerArrowEntity;
import twilightforest.entity.boss.IceBombEntity;
import twilightforest.entity.boss.FallingIceEntity;
import twilightforest.entity.boss.ThrownWepEntity;
import twilightforest.entity.projectile.SlimeProjectileEntity;
import twilightforest.entity.projectile.CicadaShotEntity;
import twilightforest.entity.projectile.MoonwormShotEntity;
import twilightforest.entity.boss.LichBombEntity;
import twilightforest.entity.boss.HydraMortarHead;
import twilightforest.entity.projectile.TomeBoltEntity;
import twilightforest.entity.projectile.TwilightWandBoltEntity;
import twilightforest.entity.boss.LichBoltEntity;
import twilightforest.entity.projectile.NatureBoltEntity;
import twilightforest.entity.boss.PlateauBossEntity;
import twilightforest.entity.boss.IceCrystalEntity;
import twilightforest.entity.boss.SnowQueenEntity;
import twilightforest.entity.boss.AlphaYetiEntity;
import twilightforest.entity.boss.KnightPhantomEntity;
import twilightforest.entity.boss.UrGhastEntity;
import twilightforest.entity.boss.MinoshroomEntity;
import twilightforest.entity.passive.QuestRamEntity;
import twilightforest.entity.passive.RavenEntity;
import twilightforest.entity.passive.BunnyEntity;
import twilightforest.entity.passive.SquirrelEntity;
import twilightforest.entity.passive.TinyBirdEntity;
import twilightforest.entity.boss.LichMinionEntity;
import twilightforest.entity.passive.PenguinEntity;
import twilightforest.entity.boss.LichEntity;
import twilightforest.entity.boss.HydraEntity;
import twilightforest.entity.boss.NagaEntity;
import twilightforest.entity.passive.DeerEntity;
import twilightforest.entity.passive.BighornEntity;
import twilightforest.entity.passive.BoarEntity;
import net.minecraft.entity.EntityType;
import java.util.List;
import net.minecraft.entity.EntitySpawnPlacementRegistry;
import net.minecraftforge.fml.common.Mod;

@Mod.EventBusSubscriber(modid = "twilightforest", bus = Mod.EventBusSubscriber.Bus.MOD)
public class TFEntities
{
    public static final EntitySpawnPlacementRegistry.PlacementType ON_ICE;
    public static final EntitySpawnPlacementRegistry.PlacementType CLOUDS;
    private static final List<EntityType<?>> ALL;
    public static final EntityType<BoarEntity> wild_boar;
    public static final EntityType<BighornEntity> bighorn_sheep;
    public static final EntityType<DeerEntity> deer;
    public static final EntityType<RedcapEntity> redcap;
    public static final EntityType<SwarmSpiderEntity> swarm_spider;
    public static final EntityType<NagaEntity> naga;
    public static final EntityType<SkeletonDruidEntity> skeleton_druid;
    public static final EntityType<HostileWolfEntity> hostile_wolf;
    public static final EntityType<WraithEntity> wraith;
    public static final EntityType<HedgeSpiderEntity> hedge_spider;
    public static final EntityType<HydraEntity> hydra;
    public static final EntityType<LichEntity> lich;
    public static final EntityType<PenguinEntity> penguin;
    public static final EntityType<LichMinionEntity> lich_minion;
    public static final EntityType<LoyalZombieEntity> loyal_zombie;
    public static final EntityType<TinyBirdEntity> tiny_bird;
    public static final EntityType<SquirrelEntity> squirrel;
    public static final EntityType<BunnyEntity> bunny;
    public static final EntityType<RavenEntity> raven;
    public static final EntityType<QuestRamEntity> quest_ram;
    public static final EntityType<KoboldEntity> kobold;
    public static final EntityType<MosquitoSwarmEntity> mosquito_swarm;
    public static final EntityType<DeathTomeEntity> death_tome;
    public static final EntityType<MinotaurEntity> minotaur;
    public static final EntityType<MinoshroomEntity> minoshroom;
    public static final EntityType<FireBeetleEntity> fire_beetle;
    public static final EntityType<SlimeBeetleEntity> slime_beetle;
    public static final EntityType<PinchBeetleEntity> pinch_beetle;
    public static final EntityType<MazeSlimeEntity> maze_slime;
    public static final EntityType<RedcapSapperEntity> redcap_sapper;
    public static final EntityType<MistWolfEntity> mist_wolf;
    public static final EntityType<KingSpiderEntity> king_spider;
    public static final EntityType<CarminiteGhastlingEntity> mini_ghast;
    public static final EntityType<CarminiteGhastguardEntity> tower_ghast;
    public static final EntityType<CarminiteGolemEntity> tower_golem;
    public static final EntityType<TowerwoodBorerEntity> tower_termite;
    public static final EntityType<TowerBroodlingEntity> tower_broodling;
    public static final EntityType<UrGhastEntity> ur_ghast;
    public static final EntityType<BlockChainGoblinEntity> blockchain_goblin;
    public static final EntityType<UpperGoblinKnightEntity> goblin_knight_upper;
    public static final EntityType<LowerGoblinKnightEntity> goblin_knight_lower;
    public static final EntityType<HelmetCrabEntity> helmet_crab;
    public static final EntityType<KnightPhantomEntity> knight_phantom;
    public static final EntityType<YetiEntity> yeti;
    public static final EntityType<AlphaYetiEntity> yeti_alpha;
    public static final EntityType<WinterWolfEntity> winter_wolf;
    public static final EntityType<SnowGuardianEntity> snow_guardian;
    public static final EntityType<StableIceCoreEntity> stable_ice_core;
    public static final EntityType<UnstableIceCoreEntity> unstable_ice_core;
    public static final EntityType<SnowQueenEntity> snow_queen;
    public static final EntityType<TrollEntity> troll;
    public static final EntityType<GiantMinerEntity> giant_miner;
    public static final EntityType<ArmoredGiantEntity> armored_giant;
    public static final EntityType<IceCrystalEntity> ice_crystal;
    public static final EntityType<HarbingerCubeEntity> harbinger_cube;
    public static final EntityType<AdherentEntity> adherent;
    public static final EntityType<RovingCubeEntity> roving_cube;
    public static final EntityType<PlateauBossEntity> plateau_boss;
    public static final EntityType<NatureBoltEntity> nature_bolt;
    public static final EntityType<LichBoltEntity> lich_bolt;
    public static final EntityType<TwilightWandBoltEntity> wand_bolt;
    public static final EntityType<TomeBoltEntity> tome_bolt;
    public static final EntityType<HydraMortarHead> hydra_mortar;
    public static final EntityType<LichBombEntity> lich_bomb;
    public static final EntityType<MoonwormShotEntity> moonworm_shot;
    public static final EntityType<CicadaShotEntity> cicada_shot;
    public static final EntityType<SlimeProjectileEntity> slime_blob;
    public static final EntityType<CharmEffectEntity> charm_effect;
    public static final EntityType<ThrownWepEntity> thrown_wep;
    public static final EntityType<FallingIceEntity> falling_ice;
    public static final EntityType<IceBombEntity> thrown_ice;
    public static final EntityType<SeekerArrowEntity> seeker_arrow;
    public static final EntityType<IceArrowEntity> ice_arrow;
    public static final EntityType<IceSnowballEntity> ice_snowball;
    public static final EntityType<ChainBlockEntity> chain_block;
    public static final EntityType<CubeOfAnnihilationEntity> cube_of_annihilation;
    public static final EntityType<SlideBlockEntity> slider;
    public static final EntityType<RisingZombieEntity> rising_zombie;
    public static final EntityType<ProtectionBoxEntity> protection_box;
    
    private static <E extends Entity> EntityType<E> make(final ResourceLocation id, final EntityType.IFactory<E> factory, final EntityClassification classification, final float width, final float height) {
        return build(id, (EntityType.Builder<E>)makeBuilder(factory, classification).func_220321_a(width, height));
    }
    
    private static <E extends Entity> EntityType<E> make(final ResourceLocation id, final EntityType.IFactory<E> factory, final EntityClassification classification) {
        return make(id, factory, classification, 0.6f, 1.8f);
    }
    
    private static <E extends Entity> EntityType<E> build(final ResourceLocation id, final EntityType.Builder<E> builder) {
        final boolean cache = SharedConstants.field_240856_c_;
        SharedConstants.field_240856_c_ = false;
        final EntityType<E> ret = (EntityType<E>)builder.func_206830_a(id.toString()).setRegistryName(id);
        SharedConstants.field_240856_c_ = cache;
        TFEntities.ALL.add(ret);
        return ret;
    }
    
    private static <E extends Entity> EntityType.Builder<E> makeCastedBuilder(final Class<E> cast, final EntityType.IFactory<E> factory, final EntityClassification classification) {
        return makeBuilder(factory, classification);
    }
    
    private static <E extends Entity> EntityType.Builder<E> makeBuilder(final EntityType.IFactory<E> factory, final EntityClassification classification) {
        return (EntityType.Builder<E>)EntityType.Builder.func_220322_a((EntityType.IFactory)factory, classification).func_220321_a(0.6f, 1.8f).setTrackingRange(80).setUpdateInterval(3).setShouldReceiveVelocityUpdates(true);
    }
    
    private static Item spawnEgg(final EntityType<?> type, final int color, final int color2) {
        final ResourceLocation eggId = new ResourceLocation(type.getRegistryName().func_110624_b(), type.getRegistryName().func_110623_a() + "_spawn_egg");
        return (Item)new SpawnEggItem((EntityType)type, color, color2, TFItems.defaultBuilder()).setRegistryName(eggId);
    }
    
    @SubscribeEvent
    public static void registerSpawnEggs(final RegistryEvent.Register<Item> evt) {
        final IForgeRegistry<Item> r = (IForgeRegistry<Item>)evt.getRegistry();
        r.register((IForgeRegistryEntry)spawnEgg(TFEntities.adherent, 655360, 139));
        r.register((IForgeRegistryEntry)spawnEgg(TFEntities.yeti_alpha, 13487565, 2705518));
        r.register((IForgeRegistryEntry)spawnEgg(TFEntities.armored_giant, 2331537, 10132122));
        r.register((IForgeRegistryEntry)spawnEgg(TFEntities.bighorn_sheep, 14405295, 14141297));
        r.register((IForgeRegistryEntry)spawnEgg(TFEntities.blockchain_goblin, 13887420, 2047999));
        r.register((IForgeRegistryEntry)spawnEgg(TFEntities.tower_broodling, 3423252, 12250626));
        r.register((IForgeRegistryEntry)spawnEgg(TFEntities.tower_ghast, 12369084, 12023928));
        r.register((IForgeRegistryEntry)spawnEgg(TFEntities.mini_ghast, 12369084, 10961731));
        r.register((IForgeRegistryEntry)spawnEgg(TFEntities.tower_golem, 7028000, 14867930));
        r.register((IForgeRegistryEntry)spawnEgg(TFEntities.troll, 10398095, 11572366));
        r.register((IForgeRegistryEntry)spawnEgg(TFEntities.death_tome, 7818786, 14405054));
        r.register((IForgeRegistryEntry)spawnEgg(TFEntities.deer, 8080686, 4924445));
        r.register((IForgeRegistryEntry)spawnEgg(TFEntities.bunny, 16711406, 13413017));
        r.register((IForgeRegistryEntry)spawnEgg(TFEntities.fire_beetle, 1903360, 13332261));
        r.register((IForgeRegistryEntry)spawnEgg(TFEntities.squirrel, 9457426, 15658734));
        r.register((IForgeRegistryEntry)spawnEgg(TFEntities.giant_miner, 2169682, 10132122));
        r.register((IForgeRegistryEntry)spawnEgg(TFEntities.goblin_knight_lower, 5660757, 13887420));
        r.register((IForgeRegistryEntry)spawnEgg(TFEntities.harbinger_cube, 10, 9109504));
        r.register((IForgeRegistryEntry)spawnEgg(TFEntities.hedge_spider, 2318099, 5645907));
        r.register((IForgeRegistryEntry)spawnEgg(TFEntities.helmet_crab, 16486475, 13887420));
        r.register((IForgeRegistryEntry)spawnEgg(TFEntities.hostile_wolf, 14144467, 11214356));
        r.register((IForgeRegistryEntry)spawnEgg(TFEntities.hydra, 1321280, 2719851));
        r.register((IForgeRegistryEntry)spawnEgg(TFEntities.ice_crystal, 14477822, 11389691));
        r.register((IForgeRegistryEntry)spawnEgg(TFEntities.king_spider, 2890254, 16760855));
        r.register((IForgeRegistryEntry)spawnEgg(TFEntities.knight_phantom, 10905403, 13887420));
        r.register((IForgeRegistryEntry)spawnEgg(TFEntities.kobold, 3612822, 9002267));
        r.register((IForgeRegistryEntry)spawnEgg(TFEntities.maze_slime, 10724259, 2767639));
        r.register((IForgeRegistryEntry)spawnEgg(TFEntities.minoshroom, 11014162, 11173222));
        r.register((IForgeRegistryEntry)spawnEgg(TFEntities.minotaur, 4141092, 11173222));
        r.register((IForgeRegistryEntry)spawnEgg(TFEntities.mist_wolf, 3806225, 14862474));
        r.register((IForgeRegistryEntry)spawnEgg(TFEntities.mosquito_swarm, 526596, 2961185));
        r.register((IForgeRegistryEntry)spawnEgg(TFEntities.naga, 10801942, 1783819));
        r.register((IForgeRegistryEntry)spawnEgg(TFEntities.penguin, 1185051, 16379346));
        r.register((IForgeRegistryEntry)spawnEgg(TFEntities.pinch_beetle, 12358439, 2364937));
        r.register((IForgeRegistryEntry)spawnEgg(TFEntities.quest_ram, 16711406, 3386077));
        r.register((IForgeRegistryEntry)spawnEgg(TFEntities.raven, 17, 2236979));
        r.register((IForgeRegistryEntry)spawnEgg(TFEntities.redcap, 3881580, 11214356));
        r.register((IForgeRegistryEntry)spawnEgg(TFEntities.redcap_sapper, 5725473, 11214356));
        r.register((IForgeRegistryEntry)spawnEgg(TFEntities.roving_cube, 655360, 155));
        r.register((IForgeRegistryEntry)spawnEgg(TFEntities.skeleton_druid, 10724259, 2767639));
        r.register((IForgeRegistryEntry)spawnEgg(TFEntities.slime_beetle, 792070, 6334284));
        r.register((IForgeRegistryEntry)spawnEgg(TFEntities.snow_guardian, 13887420, 16711422));
        r.register((IForgeRegistryEntry)spawnEgg(TFEntities.snow_queen, 11645652, 8847470));
        r.register((IForgeRegistryEntry)spawnEgg(TFEntities.stable_ice_core, 10600435, 7340280));
        r.register((IForgeRegistryEntry)spawnEgg(TFEntities.swarm_spider, 3277358, 1516830));
        r.register((IForgeRegistryEntry)spawnEgg(TFEntities.tiny_bird, 3386077, 1149166));
        r.register((IForgeRegistryEntry)spawnEgg(TFEntities.tower_termite, 6105889, 11313210));
        r.register((IForgeRegistryEntry)spawnEgg(TFEntities.lich, 11314313, 3540082));
        r.register((IForgeRegistryEntry)spawnEgg(TFEntities.unstable_ice_core, 10136821, 10162085));
        r.register((IForgeRegistryEntry)spawnEgg(TFEntities.ur_ghast, 12369084, 12023928));
        r.register((IForgeRegistryEntry)spawnEgg(TFEntities.wild_boar, 8611131, 16773066));
        r.register((IForgeRegistryEntry)spawnEgg(TFEntities.winter_wolf, 14672869, 11713738));
        r.register((IForgeRegistryEntry)spawnEgg(TFEntities.wraith, 5263440, 8618883));
        r.register((IForgeRegistryEntry)spawnEgg(TFEntities.yeti, 14606046, 4617659));
    }
    
    @SubscribeEvent
    public static void registerEntities(final RegistryEvent.Register<EntityType<?>> evt) {
        evt.getRegistry().registerAll((IForgeRegistryEntry[])TFEntities.ALL.toArray((IForgeRegistryEntry[])new EntityType[0]));
        ((TransformPowderItem)TFItems.transformation_powder.get()).initTransformations();
        EntitySpawnPlacementRegistry.func_209343_a((EntityType)TFEntities.wild_boar, EntitySpawnPlacementRegistry.PlacementType.ON_GROUND, Heightmap.Type.MOTION_BLOCKING_NO_LEAVES, AnimalEntity::func_223316_b);
        EntitySpawnPlacementRegistry.func_209343_a((EntityType)TFEntities.bighorn_sheep, EntitySpawnPlacementRegistry.PlacementType.ON_GROUND, Heightmap.Type.MOTION_BLOCKING_NO_LEAVES, AnimalEntity::func_223316_b);
        EntitySpawnPlacementRegistry.func_209343_a((EntityType)TFEntities.deer, EntitySpawnPlacementRegistry.PlacementType.ON_GROUND, Heightmap.Type.MOTION_BLOCKING_NO_LEAVES, AnimalEntity::func_223316_b);
        EntitySpawnPlacementRegistry.func_209343_a((EntityType)TFEntities.redcap, EntitySpawnPlacementRegistry.PlacementType.ON_GROUND, Heightmap.Type.MOTION_BLOCKING_NO_LEAVES, MonsterEntity::func_223325_c);
        EntitySpawnPlacementRegistry.func_209343_a((EntityType)TFEntities.skeleton_druid, EntitySpawnPlacementRegistry.PlacementType.ON_GROUND, Heightmap.Type.MOTION_BLOCKING_NO_LEAVES, SkeletonDruidEntity::skeletonDruidSpawnHandler);
        EntitySpawnPlacementRegistry.func_209343_a((EntityType)TFEntities.wraith, EntitySpawnPlacementRegistry.PlacementType.ON_GROUND, Heightmap.Type.MOTION_BLOCKING_NO_LEAVES, WraithEntity::getCanSpawnHere);
        EntitySpawnPlacementRegistry.func_209343_a((EntityType)TFEntities.hydra, EntitySpawnPlacementRegistry.PlacementType.ON_GROUND, Heightmap.Type.MOTION_BLOCKING_NO_LEAVES, MobEntity::func_223315_a);
        EntitySpawnPlacementRegistry.func_209343_a((EntityType)TFEntities.lich, EntitySpawnPlacementRegistry.PlacementType.ON_GROUND, Heightmap.Type.MOTION_BLOCKING_NO_LEAVES, MobEntity::func_223315_a);
        EntitySpawnPlacementRegistry.func_209343_a((EntityType)TFEntities.penguin, TFEntities.ON_ICE, Heightmap.Type.MOTION_BLOCKING_NO_LEAVES, PenguinEntity::canSpawn);
        EntitySpawnPlacementRegistry.func_209343_a((EntityType)TFEntities.lich_minion, EntitySpawnPlacementRegistry.PlacementType.ON_GROUND, Heightmap.Type.MOTION_BLOCKING_NO_LEAVES, MobEntity::func_223315_a);
        EntitySpawnPlacementRegistry.func_209343_a((EntityType)TFEntities.loyal_zombie, EntitySpawnPlacementRegistry.PlacementType.ON_GROUND, Heightmap.Type.MOTION_BLOCKING_NO_LEAVES, MobEntity::func_223315_a);
        EntitySpawnPlacementRegistry.func_209343_a((EntityType)TFEntities.tiny_bird, EntitySpawnPlacementRegistry.PlacementType.ON_GROUND, Heightmap.Type.MOTION_BLOCKING_NO_LEAVES, AnimalEntity::func_223316_b);
        EntitySpawnPlacementRegistry.func_209343_a((EntityType)TFEntities.squirrel, EntitySpawnPlacementRegistry.PlacementType.ON_GROUND, Heightmap.Type.MOTION_BLOCKING_NO_LEAVES, AnimalEntity::func_223316_b);
        EntitySpawnPlacementRegistry.func_209343_a((EntityType)TFEntities.bunny, EntitySpawnPlacementRegistry.PlacementType.ON_GROUND, Heightmap.Type.MOTION_BLOCKING_NO_LEAVES, AnimalEntity::func_223316_b);
        EntitySpawnPlacementRegistry.func_209343_a((EntityType)TFEntities.raven, EntitySpawnPlacementRegistry.PlacementType.ON_GROUND, Heightmap.Type.MOTION_BLOCKING_NO_LEAVES, AnimalEntity::func_223316_b);
        EntitySpawnPlacementRegistry.func_209343_a((EntityType)TFEntities.quest_ram, EntitySpawnPlacementRegistry.PlacementType.ON_GROUND, Heightmap.Type.MOTION_BLOCKING_NO_LEAVES, AnimalEntity::func_223316_b);
        EntitySpawnPlacementRegistry.func_209343_a((EntityType)TFEntities.kobold, EntitySpawnPlacementRegistry.PlacementType.ON_GROUND, Heightmap.Type.MOTION_BLOCKING_NO_LEAVES, MonsterEntity::func_223325_c);
        EntitySpawnPlacementRegistry.func_209343_a((EntityType)TFEntities.mosquito_swarm, EntitySpawnPlacementRegistry.PlacementType.ON_GROUND, Heightmap.Type.MOTION_BLOCKING_NO_LEAVES, MosquitoSwarmEntity::canSpawn);
        EntitySpawnPlacementRegistry.func_209343_a((EntityType)TFEntities.death_tome, EntitySpawnPlacementRegistry.PlacementType.ON_GROUND, Heightmap.Type.MOTION_BLOCKING_NO_LEAVES, MonsterEntity::func_223325_c);
        EntitySpawnPlacementRegistry.func_209343_a((EntityType)TFEntities.minotaur, EntitySpawnPlacementRegistry.PlacementType.ON_GROUND, Heightmap.Type.MOTION_BLOCKING_NO_LEAVES, MonsterEntity::func_223325_c);
        EntitySpawnPlacementRegistry.func_209343_a((EntityType)TFEntities.minoshroom, EntitySpawnPlacementRegistry.PlacementType.ON_GROUND, Heightmap.Type.MOTION_BLOCKING_NO_LEAVES, MobEntity::func_223315_a);
        EntitySpawnPlacementRegistry.func_209343_a((EntityType)TFEntities.fire_beetle, EntitySpawnPlacementRegistry.PlacementType.ON_GROUND, Heightmap.Type.MOTION_BLOCKING_NO_LEAVES, MonsterEntity::func_223325_c);
        EntitySpawnPlacementRegistry.func_209343_a((EntityType)TFEntities.slime_beetle, EntitySpawnPlacementRegistry.PlacementType.ON_GROUND, Heightmap.Type.MOTION_BLOCKING_NO_LEAVES, MonsterEntity::func_223325_c);
        EntitySpawnPlacementRegistry.func_209343_a((EntityType)TFEntities.pinch_beetle, EntitySpawnPlacementRegistry.PlacementType.ON_GROUND, Heightmap.Type.MOTION_BLOCKING_NO_LEAVES, MonsterEntity::func_223325_c);
        EntitySpawnPlacementRegistry.func_209343_a((EntityType)TFEntities.mist_wolf, EntitySpawnPlacementRegistry.PlacementType.ON_GROUND, Heightmap.Type.MOTION_BLOCKING_NO_LEAVES, HostileWolfEntity::getCanSpawnHere);
        EntitySpawnPlacementRegistry.func_209343_a((EntityType)TFEntities.mini_ghast, EntitySpawnPlacementRegistry.PlacementType.ON_GROUND, Heightmap.Type.MOTION_BLOCKING_NO_LEAVES, CarminiteGhastlingEntity::canSpawnHere);
        EntitySpawnPlacementRegistry.func_209343_a((EntityType)TFEntities.tower_golem, EntitySpawnPlacementRegistry.PlacementType.ON_GROUND, Heightmap.Type.MOTION_BLOCKING_NO_LEAVES, MonsterEntity::func_223325_c);
        EntitySpawnPlacementRegistry.func_209343_a((EntityType)TFEntities.tower_termite, EntitySpawnPlacementRegistry.PlacementType.ON_GROUND, Heightmap.Type.MOTION_BLOCKING_NO_LEAVES, MonsterEntity::func_223325_c);
        EntitySpawnPlacementRegistry.func_209343_a((EntityType)TFEntities.tower_ghast, EntitySpawnPlacementRegistry.PlacementType.ON_GROUND, Heightmap.Type.MOTION_BLOCKING_NO_LEAVES, CarminiteGhastguardEntity::ghastSpawnHandler);
        EntitySpawnPlacementRegistry.func_209343_a((EntityType)TFEntities.ur_ghast, EntitySpawnPlacementRegistry.PlacementType.ON_GROUND, Heightmap.Type.MOTION_BLOCKING_NO_LEAVES, MobEntity::func_223315_a);
        EntitySpawnPlacementRegistry.func_209343_a((EntityType)TFEntities.blockchain_goblin, EntitySpawnPlacementRegistry.PlacementType.ON_GROUND, Heightmap.Type.MOTION_BLOCKING_NO_LEAVES, MonsterEntity::func_223325_c);
        EntitySpawnPlacementRegistry.func_209343_a((EntityType)TFEntities.goblin_knight_upper, EntitySpawnPlacementRegistry.PlacementType.ON_GROUND, Heightmap.Type.MOTION_BLOCKING_NO_LEAVES, MonsterEntity::func_223325_c);
        EntitySpawnPlacementRegistry.func_209343_a((EntityType)TFEntities.goblin_knight_lower, EntitySpawnPlacementRegistry.PlacementType.ON_GROUND, Heightmap.Type.MOTION_BLOCKING_NO_LEAVES, MonsterEntity::func_223325_c);
        EntitySpawnPlacementRegistry.func_209343_a((EntityType)TFEntities.helmet_crab, EntitySpawnPlacementRegistry.PlacementType.ON_GROUND, Heightmap.Type.MOTION_BLOCKING_NO_LEAVES, MonsterEntity::func_223325_c);
        EntitySpawnPlacementRegistry.func_209343_a((EntityType)TFEntities.knight_phantom, EntitySpawnPlacementRegistry.PlacementType.ON_GROUND, Heightmap.Type.MOTION_BLOCKING_NO_LEAVES, MobEntity::func_223315_a);
        EntitySpawnPlacementRegistry.func_209343_a((EntityType)TFEntities.naga, EntitySpawnPlacementRegistry.PlacementType.ON_GROUND, Heightmap.Type.MOTION_BLOCKING_NO_LEAVES, MobEntity::func_223315_a);
        EntitySpawnPlacementRegistry.func_209343_a((EntityType)TFEntities.swarm_spider, EntitySpawnPlacementRegistry.PlacementType.ON_GROUND, Heightmap.Type.MOTION_BLOCKING_NO_LEAVES, SwarmSpiderEntity::getCanSpawnHere);
        EntitySpawnPlacementRegistry.func_209343_a((EntityType)TFEntities.king_spider, EntitySpawnPlacementRegistry.PlacementType.ON_GROUND, Heightmap.Type.MOTION_BLOCKING_NO_LEAVES, MonsterEntity::func_223325_c);
        EntitySpawnPlacementRegistry.func_209343_a((EntityType)TFEntities.tower_broodling, EntitySpawnPlacementRegistry.PlacementType.ON_GROUND, Heightmap.Type.MOTION_BLOCKING_NO_LEAVES, SwarmSpiderEntity::getCanSpawnHere);
        EntitySpawnPlacementRegistry.func_209343_a((EntityType)TFEntities.hedge_spider, EntitySpawnPlacementRegistry.PlacementType.ON_GROUND, Heightmap.Type.MOTION_BLOCKING_NO_LEAVES, HedgeSpiderEntity::canSpawn);
        EntitySpawnPlacementRegistry.func_209343_a((EntityType)TFEntities.redcap_sapper, EntitySpawnPlacementRegistry.PlacementType.ON_GROUND, Heightmap.Type.MOTION_BLOCKING_NO_LEAVES, MonsterEntity::func_223325_c);
        EntitySpawnPlacementRegistry.func_209343_a((EntityType)TFEntities.maze_slime, EntitySpawnPlacementRegistry.PlacementType.ON_GROUND, Heightmap.Type.MOTION_BLOCKING_NO_LEAVES, MazeSlimeEntity::getCanSpawnHere);
        EntitySpawnPlacementRegistry.func_209343_a((EntityType)TFEntities.yeti, EntitySpawnPlacementRegistry.PlacementType.ON_GROUND, Heightmap.Type.MOTION_BLOCKING_NO_LEAVES, YetiEntity::yetiSnowyForestSpawnHandler);
        EntitySpawnPlacementRegistry.func_209343_a((EntityType)TFEntities.yeti_alpha, EntitySpawnPlacementRegistry.PlacementType.ON_GROUND, Heightmap.Type.MOTION_BLOCKING_NO_LEAVES, MobEntity::func_223315_a);
        EntitySpawnPlacementRegistry.func_209343_a((EntityType)TFEntities.winter_wolf, EntitySpawnPlacementRegistry.PlacementType.ON_GROUND, Heightmap.Type.MOTION_BLOCKING_NO_LEAVES, WinterWolfEntity::canSpawnHere);
        EntitySpawnPlacementRegistry.func_209343_a((EntityType)TFEntities.snow_guardian, EntitySpawnPlacementRegistry.PlacementType.ON_GROUND, Heightmap.Type.MOTION_BLOCKING_NO_LEAVES, MonsterEntity::func_223325_c);
        EntitySpawnPlacementRegistry.func_209343_a((EntityType)TFEntities.stable_ice_core, EntitySpawnPlacementRegistry.PlacementType.ON_GROUND, Heightmap.Type.MOTION_BLOCKING_NO_LEAVES, MonsterEntity::func_223325_c);
        EntitySpawnPlacementRegistry.func_209343_a((EntityType)TFEntities.unstable_ice_core, EntitySpawnPlacementRegistry.PlacementType.ON_GROUND, Heightmap.Type.MOTION_BLOCKING_NO_LEAVES, MonsterEntity::func_223325_c);
        EntitySpawnPlacementRegistry.func_209343_a((EntityType)TFEntities.snow_queen, EntitySpawnPlacementRegistry.PlacementType.ON_GROUND, Heightmap.Type.MOTION_BLOCKING_NO_LEAVES, MobEntity::func_223315_a);
        EntitySpawnPlacementRegistry.func_209343_a((EntityType)TFEntities.troll, EntitySpawnPlacementRegistry.PlacementType.ON_GROUND, Heightmap.Type.MOTION_BLOCKING_NO_LEAVES, TrollEntity::canSpawn);
        EntitySpawnPlacementRegistry.func_209343_a((EntityType)TFEntities.giant_miner, TFEntities.CLOUDS, Heightmap.Type.MOTION_BLOCKING_NO_LEAVES, GiantMinerEntity::canSpawn);
        EntitySpawnPlacementRegistry.func_209343_a((EntityType)TFEntities.armored_giant, TFEntities.CLOUDS, Heightmap.Type.MOTION_BLOCKING_NO_LEAVES, GiantMinerEntity::canSpawn);
        EntitySpawnPlacementRegistry.func_209343_a((EntityType)TFEntities.ice_crystal, EntitySpawnPlacementRegistry.PlacementType.ON_GROUND, Heightmap.Type.MOTION_BLOCKING_NO_LEAVES, MobEntity::func_223315_a);
        EntitySpawnPlacementRegistry.func_209343_a((EntityType)TFEntities.harbinger_cube, EntitySpawnPlacementRegistry.PlacementType.ON_GROUND, Heightmap.Type.MOTION_BLOCKING_NO_LEAVES, MonsterEntity::func_223324_d);
        EntitySpawnPlacementRegistry.func_209343_a((EntityType)TFEntities.adherent, EntitySpawnPlacementRegistry.PlacementType.ON_GROUND, Heightmap.Type.MOTION_BLOCKING_NO_LEAVES, MonsterEntity::func_223325_c);
        EntitySpawnPlacementRegistry.func_209343_a((EntityType)TFEntities.roving_cube, EntitySpawnPlacementRegistry.PlacementType.ON_GROUND, Heightmap.Type.MOTION_BLOCKING_NO_LEAVES, MonsterEntity::func_223324_d);
        EntitySpawnPlacementRegistry.func_209343_a((EntityType)TFEntities.rising_zombie, EntitySpawnPlacementRegistry.PlacementType.ON_GROUND, Heightmap.Type.MOTION_BLOCKING_NO_LEAVES, MobEntity::func_223315_a);
    }
    
    @SubscribeEvent
    public static void addEntityAttributes(final EntityAttributeCreationEvent event) {
        event.put((EntityType)TFEntities.wild_boar, PigEntity.func_234215_eI_().func_233813_a_());
        event.put((EntityType)TFEntities.bighorn_sheep, SheepEntity.func_234225_eI_().func_233813_a_());
        event.put((EntityType)TFEntities.deer, DeerEntity.registerAttributes().func_233813_a_());
        event.put((EntityType)TFEntities.redcap, RedcapEntity.registerAttributes().func_233813_a_());
        event.put((EntityType)TFEntities.swarm_spider, SwarmSpiderEntity.registerAttributes().func_233813_a_());
        event.put((EntityType)TFEntities.naga, NagaEntity.registerAttributes().func_233813_a_());
        event.put((EntityType)TFEntities.skeleton_druid, AbstractSkeletonEntity.func_234275_m_().func_233813_a_());
        event.put((EntityType)TFEntities.hostile_wolf, HostileWolfEntity.registerAttributes().func_233813_a_());
        event.put((EntityType)TFEntities.wraith, WraithEntity.registerAttributes().func_233813_a_());
        event.put((EntityType)TFEntities.hedge_spider, SpiderEntity.func_234305_eI_().func_233813_a_());
        event.put((EntityType)TFEntities.hydra, HydraEntity.registerAttributes().func_233813_a_());
        event.put((EntityType)TFEntities.lich, LichEntity.registerAttributes().func_233813_a_());
        event.put((EntityType)TFEntities.penguin, PenguinEntity.registerAttributes().func_233813_a_());
        event.put((EntityType)TFEntities.lich_minion, ZombieEntity.func_234342_eQ_().func_233813_a_());
        event.put((EntityType)TFEntities.loyal_zombie, LoyalZombieEntity.registerAttributes().func_233813_a_());
        event.put((EntityType)TFEntities.tiny_bird, TinyBirdEntity.registerAttributes().func_233813_a_());
        event.put((EntityType)TFEntities.squirrel, SquirrelEntity.registerAttributes().func_233813_a_());
        event.put((EntityType)TFEntities.bunny, BunnyEntity.registerAttributes().func_233813_a_());
        event.put((EntityType)TFEntities.raven, RavenEntity.registerAttributes().func_233813_a_());
        event.put((EntityType)TFEntities.quest_ram, QuestRamEntity.registerAttributes().func_233813_a_());
        event.put((EntityType)TFEntities.kobold, KoboldEntity.registerAttributes().func_233813_a_());
        event.put((EntityType)TFEntities.mosquito_swarm, MosquitoSwarmEntity.registerAttributes().func_233813_a_());
        event.put((EntityType)TFEntities.death_tome, DeathTomeEntity.registerAttributes().func_233813_a_());
        event.put((EntityType)TFEntities.minotaur, MinotaurEntity.registerAttributes().func_233813_a_());
        event.put((EntityType)TFEntities.minoshroom, MinoshroomEntity.registerAttributes().func_233813_a_());
        event.put((EntityType)TFEntities.fire_beetle, FireBeetleEntity.registerAttributes().func_233813_a_());
        event.put((EntityType)TFEntities.slime_beetle, SlimeBeetleEntity.registerAttributes().func_233813_a_());
        event.put((EntityType)TFEntities.pinch_beetle, PinchBeetleEntity.registerAttributes().func_233813_a_());
        event.put((EntityType)TFEntities.maze_slime, MazeSlimeEntity.registerAttributes().func_233813_a_());
        event.put((EntityType)TFEntities.redcap_sapper, RedcapSapperEntity.registerAttributes().func_233813_a_());
        event.put((EntityType)TFEntities.mist_wolf, MistWolfEntity.registerAttributes().func_233813_a_());
        event.put((EntityType)TFEntities.king_spider, KingSpiderEntity.registerAttributes().func_233813_a_());
        event.put((EntityType)TFEntities.mini_ghast, CarminiteGhastlingEntity.registerAttributes().func_233813_a_());
        event.put((EntityType)TFEntities.tower_ghast, CarminiteGhastguardEntity.registerAttributes().func_233813_a_());
        event.put((EntityType)TFEntities.tower_golem, CarminiteGolemEntity.registerAttributes().func_233813_a_());
        event.put((EntityType)TFEntities.tower_termite, TowerwoodBorerEntity.registerAttributes().func_233813_a_());
        event.put((EntityType)TFEntities.tower_broodling, TowerBroodlingEntity.registerAttributes().func_233813_a_());
        event.put((EntityType)TFEntities.ur_ghast, UrGhastEntity.registerAttributes().func_233813_a_());
        event.put((EntityType)TFEntities.blockchain_goblin, BlockChainGoblinEntity.registerAttributes().func_233813_a_());
        event.put((EntityType)TFEntities.goblin_knight_upper, UpperGoblinKnightEntity.registerAttributes().func_233813_a_());
        event.put((EntityType)TFEntities.goblin_knight_lower, LowerGoblinKnightEntity.registerAttributes().func_233813_a_());
        event.put((EntityType)TFEntities.helmet_crab, HelmetCrabEntity.registerAttributes().func_233813_a_());
        event.put((EntityType)TFEntities.knight_phantom, KnightPhantomEntity.registerAttributes().func_233813_a_());
        event.put((EntityType)TFEntities.yeti, YetiEntity.registerAttributes().func_233813_a_());
        event.put((EntityType)TFEntities.yeti_alpha, AlphaYetiEntity.registerAttributes().func_233813_a_());
        event.put((EntityType)TFEntities.winter_wolf, WinterWolfEntity.registerAttributes().func_233813_a_());
        event.put((EntityType)TFEntities.snow_guardian, SnowGuardianEntity.registerAttributes().func_233813_a_());
        event.put((EntityType)TFEntities.stable_ice_core, StableIceCoreEntity.registerAttributes().func_233813_a_());
        event.put((EntityType)TFEntities.unstable_ice_core, UnstableIceCoreEntity.registerAttributes().func_233813_a_());
        event.put((EntityType)TFEntities.snow_queen, SnowQueenEntity.registerAttributes().func_233813_a_());
        event.put((EntityType)TFEntities.troll, TrollEntity.registerAttributes().func_233813_a_());
        event.put((EntityType)TFEntities.giant_miner, GiantMinerEntity.registerAttributes().func_233813_a_());
        event.put((EntityType)TFEntities.armored_giant, GiantMinerEntity.registerAttributes().func_233813_a_());
        event.put((EntityType)TFEntities.ice_crystal, IceCrystalEntity.registerAttributes().func_233813_a_());
        event.put((EntityType)TFEntities.harbinger_cube, HarbingerCubeEntity.registerAttributes().func_233813_a_());
        event.put((EntityType)TFEntities.adherent, AdherentEntity.registerAttributes().func_233813_a_());
        event.put((EntityType)TFEntities.roving_cube, RovingCubeEntity.registerAttributes().func_233813_a_());
        event.put((EntityType)TFEntities.plateau_boss, PlateauBossEntity.registerAttributes().func_233813_a_());
        event.put((EntityType)TFEntities.rising_zombie, ZombieEntity.func_234342_eQ_().func_233813_a_());
    }
    
    @OnlyIn(Dist.CLIENT)
    public static void registerEntityRenderer() {
        RenderingRegistry.registerEntityRenderingHandler((EntityType)TFEntities.wild_boar, m -> new BoarRenderer(m, new BoarModel<BoarEntity>()));
        RenderingRegistry.registerEntityRenderingHandler((EntityType)TFEntities.bighorn_sheep, m -> new BighornRenderer(m, new BighornModel<SheepEntity>(), (EntityModel<?>)new BighornFurLayer(), 0.7f));
        RenderingRegistry.registerEntityRenderingHandler((EntityType)TFEntities.deer, m -> new TFGenericMobRenderer(m, (EntityModel)new DeerModel(), 0.7f, "wilddeer.png"));
        RenderingRegistry.registerEntityRenderingHandler((EntityType)TFEntities.redcap, m -> new TFBipedRenderer(m, new RedcapModel(0.0f), new BipedModel(0.7f), new BipedModel(0.7f), 0.4f, "redcap.png"));
        RenderingRegistry.registerEntityRenderingHandler((EntityType)TFEntities.skeleton_druid, m -> new TFBipedRenderer(m, (BipedModel)new SkeletonDruidModel(), (BipedModel)new SkeletonDruidModel(), (BipedModel)new SkeletonDruidModel(), 0.5f, "skeletondruid.png"));
        RenderingRegistry.registerEntityRenderingHandler((EntityType)TFEntities.hostile_wolf, WolfRenderer::new);
        RenderingRegistry.registerEntityRenderingHandler((EntityType)TFEntities.wraith, m -> new WraithRenderer(m, new WraithModel(), 0.5f));
        RenderingRegistry.registerEntityRenderingHandler((EntityType)TFEntities.hydra, m -> new HydraRenderer(m, new HydraModel(), 4.0f));
        RenderingRegistry.registerEntityRenderingHandler((EntityType)TFEntities.lich, m -> new LichRenderer(m, new LichModel(), 0.6f));
        RenderingRegistry.registerEntityRenderingHandler((EntityType)TFEntities.penguin, m -> new BirdRenderer(m, (EntityModel)new PenguinModel(), 0.375f, "penguin.png"));
        RenderingRegistry.registerEntityRenderingHandler((EntityType)TFEntities.lich_minion, m -> new TFBipedRenderer(m, (BipedModel)new LichMinionModel(false), (BipedModel)new LichMinionModel(true), (BipedModel)new LichMinionModel(true), 0.5f, "textures/entity/zombie/zombie.png"));
        RenderingRegistry.registerEntityRenderingHandler((EntityType)TFEntities.loyal_zombie, m -> new TFBipedRenderer(m, new LoyalZombieModel(false), new LoyalZombieModel(true), new LoyalZombieModel(true), 0.5f, "textures/entity/zombie/zombie.png"));
        RenderingRegistry.registerEntityRenderingHandler((EntityType)TFEntities.tiny_bird, m -> new TinyBirdRenderer(m, new TinyBirdModel(), 0.3f));
        RenderingRegistry.registerEntityRenderingHandler((EntityType)TFEntities.squirrel, m -> new TFGenericMobRenderer(m, (EntityModel)new SquirrelModel(), 0.3f, "squirrel2.png"));
        RenderingRegistry.registerEntityRenderingHandler((EntityType)TFEntities.bunny, m -> new BunnyRenderer(m, new BunnyModel(), 0.3f));
        RenderingRegistry.registerEntityRenderingHandler((EntityType)TFEntities.raven, m -> new BirdRenderer(m, (EntityModel)new RavenModel(), 0.3f, "raven.png"));
        RenderingRegistry.registerEntityRenderingHandler((EntityType)TFEntities.quest_ram, manager -> new QuestRamRenderer(manager, new QuestRamModel()));
        RenderingRegistry.registerEntityRenderingHandler((EntityType)TFEntities.kobold, m -> new KoboldRenderer(m, new KoboldModel(), 0.4f, "kobold.png"));
        RenderingRegistry.registerEntityRenderingHandler((EntityType)TFEntities.mosquito_swarm, m -> new TFGenericMobRenderer(m, (EntityModel)new MosquitoSwarmModel(), 0.0f, "mosquitoswarm.png"));
        RenderingRegistry.registerEntityRenderingHandler((EntityType)TFEntities.death_tome, m -> new TFGenericMobRenderer(m, new DeathTomeModel(), 0.3f, "textures/entity/enchanting_table_book.png"));
        RenderingRegistry.registerEntityRenderingHandler((EntityType)TFEntities.minotaur, m -> new TFBipedRenderer(m, new MinotaurModel(), 0.625f, "minotaur.png"));
        RenderingRegistry.registerEntityRenderingHandler((EntityType)TFEntities.minoshroom, m -> new MinoshroomRenderer(m, new MinoshroomModel(), 0.625f));
        RenderingRegistry.registerEntityRenderingHandler((EntityType)TFEntities.fire_beetle, m -> new TFGenericMobRenderer(m, (EntityModel)new FireBeetleModel(), 0.8f, "firebeetle.png"));
        RenderingRegistry.registerEntityRenderingHandler((EntityType)TFEntities.slime_beetle, m -> new SlimeBeetleRenderer(m, new SlimeBeetleModel(), 0.6f));
        RenderingRegistry.registerEntityRenderingHandler((EntityType)TFEntities.pinch_beetle, m -> new TFGenericMobRenderer(m, (EntityModel)new PinchBeetleModel(), 0.6f, "pinchbeetle.png"));
        RenderingRegistry.registerEntityRenderingHandler((EntityType)TFEntities.mist_wolf, MistWolfRenderer::new);
        RenderingRegistry.registerEntityRenderingHandler((EntityType)TFEntities.mini_ghast, m -> new TFGhastRenderer(m, new TFGhastModel(), 0.625f));
        RenderingRegistry.registerEntityRenderingHandler((EntityType)TFEntities.tower_golem, m -> new CarminiteGolemRenderer(m, new CarminiteGolemModel(), 0.75f));
        RenderingRegistry.registerEntityRenderingHandler((EntityType)TFEntities.tower_termite, m -> new TFGenericMobRenderer(m, (EntityModel)new SilverfishModel(), 0.3f, "towertermite.png"));
        RenderingRegistry.registerEntityRenderingHandler((EntityType)TFEntities.tower_ghast, m -> new CarminiteGhastRenderer(m, new TFGhastModel(), 3.0f));
        RenderingRegistry.registerEntityRenderingHandler((EntityType)TFEntities.ur_ghast, m -> new UrGhastRenderer(m, new UrGhastModel(), 8.0f, 24.0f));
        RenderingRegistry.registerEntityRenderingHandler((EntityType)TFEntities.blockchain_goblin, m -> new BlockChainGoblinRenderer(m, new BlockChainGoblinModel(), 0.4f));
        RenderingRegistry.registerEntityRenderingHandler((EntityType)TFEntities.goblin_knight_upper, m -> new UpperGoblinKnightRenderer(m, new UpperGoblinKnightModel(), 0.625f));
        RenderingRegistry.registerEntityRenderingHandler((EntityType)TFEntities.goblin_knight_lower, m -> new TFBipedRenderer(m, new LowerGoblinKnightModel(), 0.625f, "doublegoblin.png"));
        RenderingRegistry.registerEntityRenderingHandler((EntityType)TFEntities.helmet_crab, m -> new TFGenericMobRenderer(m, (EntityModel)new HelmetCrabModel(), 0.625f, "helmetcrab.png"));
        RenderingRegistry.registerEntityRenderingHandler((EntityType)TFEntities.knight_phantom, m -> new KnightPhantomRenderer(m, new KnightPhantomModel(), 0.625f));
        RenderingRegistry.registerEntityRenderingHandler((EntityType)TFEntities.naga, m -> new NagaRenderer(m, new NagaModel(), 1.45f));
        RenderingRegistry.registerEntityRenderingHandler((EntityType)TFEntities.swarm_spider, SwarmSpiderRenderer::new);
        RenderingRegistry.registerEntityRenderingHandler((EntityType)TFEntities.king_spider, KingSpiderRenderer::new);
        RenderingRegistry.registerEntityRenderingHandler((EntityType)TFEntities.tower_broodling, CarminiteBroodlingRenderer::new);
        RenderingRegistry.registerEntityRenderingHandler((EntityType)TFEntities.hedge_spider, HedgeSpiderRenderer::new);
        RenderingRegistry.registerEntityRenderingHandler((EntityType)TFEntities.redcap_sapper, m -> new TFBipedRenderer(m, new RedcapModel(0.0f), new BipedModel(0.75f), new BipedModel(0.75f), 0.4f, "redcapsapper.png"));
        RenderingRegistry.registerEntityRenderingHandler((EntityType)TFEntities.maze_slime, m -> new MazeSlimeRenderer(m, 0.625f));
        RenderingRegistry.registerEntityRenderingHandler((EntityType)TFEntities.yeti, m -> new TFBipedRenderer(m, new YetiModel(), 0.625f, "yeti2.png"));
        RenderingRegistry.registerEntityRenderingHandler((EntityType)TFEntities.protection_box, ProtectionBoxRenderer::new);
        RenderingRegistry.registerEntityRenderingHandler((EntityType)TFEntities.yeti_alpha, m -> new TFBipedRenderer(m, new AlphaYetiModel(), 1.75f, "yetialpha.png"));
        RenderingRegistry.registerEntityRenderingHandler((EntityType)TFEntities.winter_wolf, WinterWolfRenderer::new);
        RenderingRegistry.registerEntityRenderingHandler((EntityType)TFEntities.snow_guardian, m -> new SnowGuardianRenderer(m, new NoopModel<SnowGuardianEntity>()));
        RenderingRegistry.registerEntityRenderingHandler((EntityType)TFEntities.stable_ice_core, m -> new StableIceCoreRenderer(m, new StableIceCoreModel()));
        RenderingRegistry.registerEntityRenderingHandler((EntityType)TFEntities.unstable_ice_core, m -> new UnstableIceCoreRenderer(m, new UnstableIceCoreModel()));
        RenderingRegistry.registerEntityRenderingHandler((EntityType)TFEntities.snow_queen, m -> new SnowQueenRenderer(m, new SnowQueenModel()));
        RenderingRegistry.registerEntityRenderingHandler((EntityType)TFEntities.troll, m -> new TFBipedRenderer(m, new TrollModel(), 0.625f, "troll.png"));
        RenderingRegistry.registerEntityRenderingHandler((EntityType)TFEntities.giant_miner, TFGiantRenderer::new);
        RenderingRegistry.registerEntityRenderingHandler((EntityType)TFEntities.armored_giant, TFGiantRenderer::new);
        RenderingRegistry.registerEntityRenderingHandler((EntityType)TFEntities.ice_crystal, IceCrystalRenderer::new);
        RenderingRegistry.registerEntityRenderingHandler((EntityType)TFEntities.chain_block, BlockChainRenderer::new);
        RenderingRegistry.registerEntityRenderingHandler((EntityType)TFEntities.cube_of_annihilation, CubeOfAnnihilationRenderer::new);
        RenderingRegistry.registerEntityRenderingHandler((EntityType)TFEntities.harbinger_cube, HarbingerCubeRenderer::new);
        RenderingRegistry.registerEntityRenderingHandler((EntityType)TFEntities.adherent, AdherentRenderer::new);
        RenderingRegistry.registerEntityRenderingHandler((EntityType)TFEntities.roving_cube, RovingCubeRenderer::new);
        RenderingRegistry.registerEntityRenderingHandler((EntityType)TFEntities.rising_zombie, m -> new TFBipedRenderer(m, (BipedModel)new RisingZombieModel(false), (BipedModel)new RisingZombieModel(true), (BipedModel)new RisingZombieModel(true), 0.5f, "textures/entity/zombie/zombie.png"));
        RenderingRegistry.registerEntityRenderingHandler((EntityType)TFEntities.plateau_boss, NoopRenderer::new);
        RenderingRegistry.registerEntityRenderingHandler((EntityType)TFEntities.nature_bolt, m -> new SpriteRenderer(m, Minecraft.func_71410_x().func_175599_af()));
        RenderingRegistry.registerEntityRenderingHandler((EntityType)TFEntities.lich_bolt, m -> new SpriteRenderer(m, Minecraft.func_71410_x().func_175599_af()));
        RenderingRegistry.registerEntityRenderingHandler((EntityType)TFEntities.wand_bolt, m -> new SpriteRenderer(m, Minecraft.func_71410_x().func_175599_af()));
        RenderingRegistry.registerEntityRenderingHandler((EntityType)TFEntities.tome_bolt, m -> new SpriteRenderer(m, Minecraft.func_71410_x().func_175599_af()));
        RenderingRegistry.registerEntityRenderingHandler((EntityType)TFEntities.hydra_mortar, HydraMortarRenderer::new);
        RenderingRegistry.registerEntityRenderingHandler((EntityType)TFEntities.slime_blob, m -> new SpriteRenderer(m, Minecraft.func_71410_x().func_175599_af()));
        RenderingRegistry.registerEntityRenderingHandler((EntityType)TFEntities.cicada_shot, CicadaShotRenderer::new);
        RenderingRegistry.registerEntityRenderingHandler((EntityType)TFEntities.moonworm_shot, MoonwormShotRenderer::new);
        RenderingRegistry.registerEntityRenderingHandler((EntityType)TFEntities.charm_effect, m -> new SpriteRenderer(m, Minecraft.func_71410_x().func_175599_af()));
        RenderingRegistry.registerEntityRenderingHandler((EntityType)TFEntities.lich_bomb, m -> new SpriteRenderer(m, Minecraft.func_71410_x().func_175599_af()));
        RenderingRegistry.registerEntityRenderingHandler((EntityType)TFEntities.thrown_wep, ThrownWepRenderer::new);
        RenderingRegistry.registerEntityRenderingHandler((EntityType)TFEntities.falling_ice, FallingIceRenderer::new);
        RenderingRegistry.registerEntityRenderingHandler((EntityType)TFEntities.thrown_ice, ThrownIceRenderer::new);
        RenderingRegistry.registerEntityRenderingHandler((EntityType)TFEntities.ice_snowball, m -> new SpriteRenderer(m, Minecraft.func_71410_x().func_175599_af()));
        RenderingRegistry.registerEntityRenderingHandler((EntityType)TFEntities.slider, SlideBlockRenderer::new);
        RenderingRegistry.registerEntityRenderingHandler((EntityType)TFEntities.seeker_arrow, DefaultArrowRenderer::new);
        RenderingRegistry.registerEntityRenderingHandler((EntityType)TFEntities.ice_arrow, DefaultArrowRenderer::new);
    }
    
    static {
        ON_ICE = EntitySpawnPlacementRegistry.PlacementType.create("TF_ON_ICE", (world, pos, entityType) -> {
            final BlockState state = world.func_180495_p(pos.func_177977_b());
            final Block block = state.func_177230_c();
            final Material material = state.func_185904_a();
            final BlockPos up = pos.func_177984_a();
            return (material == Material.field_151588_w || material == Material.field_151598_x) && block != Blocks.field_150357_h && block != Blocks.field_180401_cv && WorldEntitySpawner.func_234968_a_((IBlockReader)world, pos, world.func_180495_p(pos), world.func_204610_c(pos), entityType) && WorldEntitySpawner.func_234968_a_((IBlockReader)world, up, world.func_180495_p(up), world.func_204610_c(up), entityType);
        });
        CLOUDS = EntitySpawnPlacementRegistry.PlacementType.create("CLOUD_DWELLERS", (world, pos, entityType) -> {
            final BlockState state = world.func_180495_p(pos.func_177977_b());
            final Block block = state.func_177230_c();
            final BlockPos up = pos.func_177984_a();
            return (block == TFBlocks.wispy_cloud.get() || block == TFBlocks.wispy_cloud.get()) && block != Blocks.field_150357_h && block != Blocks.field_180401_cv && WorldEntitySpawner.func_234968_a_((IBlockReader)world, pos, world.func_180495_p(pos), world.func_204610_c(pos), entityType) && WorldEntitySpawner.func_234968_a_((IBlockReader)world, up, world.func_180495_p(up), world.func_204610_c(up), entityType);
        });
        ALL = new ArrayList<EntityType<?>>();
        wild_boar = make(TFEntityNames.WILD_BOAR, (EntityType.IFactory<BoarEntity>)BoarEntity::new, EntityClassification.CREATURE, 0.9f, 0.9f);
        bighorn_sheep = make(TFEntityNames.BIGHORN_SHEEP, (EntityType.IFactory<BighornEntity>)BighornEntity::new, EntityClassification.CREATURE, 0.9f, 1.3f);
        deer = make(TFEntityNames.DEER, (EntityType.IFactory<DeerEntity>)DeerEntity::new, EntityClassification.CREATURE, 0.7f, 1.8f);
        redcap = make(TFEntityNames.REDCAP, (EntityType.IFactory<RedcapEntity>)RedcapEntity::new, EntityClassification.MONSTER, 0.9f, 1.4f);
        swarm_spider = make(TFEntityNames.SWARM_SPIDER, (EntityType.IFactory<SwarmSpiderEntity>)SwarmSpiderEntity::new, EntityClassification.MONSTER, 0.8f, 0.4f);
        naga = make(TFEntityNames.NAGA, (EntityType.IFactory<NagaEntity>)NagaEntity::new, EntityClassification.MONSTER, 1.75f, 3.0f);
        skeleton_druid = make(TFEntityNames.SKELETON_DRUID, (EntityType.IFactory<SkeletonDruidEntity>)SkeletonDruidEntity::new, EntityClassification.MONSTER, 0.6f, 1.99f);
        hostile_wolf = make(TFEntityNames.HOSTILE_WOLF, (EntityType.IFactory<HostileWolfEntity>)HostileWolfEntity::new, EntityClassification.MONSTER, 0.6f, 0.85f);
        wraith = make(TFEntityNames.WRAITH, (EntityType.IFactory<WraithEntity>)WraithEntity::new, EntityClassification.MONSTER);
        hedge_spider = make(TFEntityNames.HEDGE_SPIDER, (EntityType.IFactory<HedgeSpiderEntity>)HedgeSpiderEntity::new, EntityClassification.MONSTER, 1.4f, 0.9f);
        hydra = make(TFEntityNames.HYDRA, (EntityType.IFactory<HydraEntity>)HydraEntity::new, EntityClassification.MONSTER, 16.0f, 12.0f);
        lich = make(TFEntityNames.LICH, (EntityType.IFactory<LichEntity>)LichEntity::new, EntityClassification.MONSTER, 1.1f, 2.1f);
        penguin = make(TFEntityNames.PENGUIN, (EntityType.IFactory<PenguinEntity>)PenguinEntity::new, EntityClassification.CREATURE, 0.5f, 0.9f);
        lich_minion = make(TFEntityNames.LICH_MINION, (EntityType.IFactory<LichMinionEntity>)LichMinionEntity::new, EntityClassification.MONSTER, 0.6f, 1.95f);
        loyal_zombie = make(TFEntityNames.LOYAL_ZOMBIE, (EntityType.IFactory<LoyalZombieEntity>)LoyalZombieEntity::new, EntityClassification.MONSTER);
        tiny_bird = make(TFEntityNames.TINY_BIRD, (EntityType.IFactory<TinyBirdEntity>)TinyBirdEntity::new, EntityClassification.CREATURE, 0.3f, 0.3f);
        squirrel = make(TFEntityNames.SQUIRREL, (EntityType.IFactory<SquirrelEntity>)SquirrelEntity::new, EntityClassification.CREATURE, 0.3f, 0.5f);
        bunny = make(TFEntityNames.BUNNY, (EntityType.IFactory<BunnyEntity>)BunnyEntity::new, EntityClassification.CREATURE, 0.3f, 0.6f);
        raven = make(TFEntityNames.RAVEN, (EntityType.IFactory<RavenEntity>)RavenEntity::new, EntityClassification.CREATURE, 0.3f, 0.5f);
        quest_ram = make(TFEntityNames.QUEST_RAM, (EntityType.IFactory<QuestRamEntity>)QuestRamEntity::new, EntityClassification.CREATURE, 1.25f, 2.9f);
        kobold = make(TFEntityNames.KOBOLD, (EntityType.IFactory<KoboldEntity>)KoboldEntity::new, EntityClassification.MONSTER, 0.8f, 1.1f);
        mosquito_swarm = make(TFEntityNames.MOSQUITO_SWARM, (EntityType.IFactory<MosquitoSwarmEntity>)MosquitoSwarmEntity::new, EntityClassification.MONSTER, 0.7f, 1.9f);
        death_tome = make(TFEntityNames.DEATH_TOME, (EntityType.IFactory<DeathTomeEntity>)DeathTomeEntity::new, EntityClassification.MONSTER);
        minotaur = make(TFEntityNames.MINOTAUR, (EntityType.IFactory<MinotaurEntity>)MinotaurEntity::new, EntityClassification.MONSTER, 0.6f, 2.1f);
        minoshroom = make(TFEntityNames.MINOSHROOM, (EntityType.IFactory<MinoshroomEntity>)MinoshroomEntity::new, EntityClassification.MONSTER, 1.49f, 2.5f);
        fire_beetle = make(TFEntityNames.FIRE_BEETLE, (EntityType.IFactory<FireBeetleEntity>)FireBeetleEntity::new, EntityClassification.MONSTER, 1.1f, 0.5f);
        slime_beetle = make(TFEntityNames.SLIME_BEETLE, (EntityType.IFactory<SlimeBeetleEntity>)SlimeBeetleEntity::new, EntityClassification.MONSTER, 0.9f, 0.5f);
        pinch_beetle = make(TFEntityNames.PINCH_BEETLE, (EntityType.IFactory<PinchBeetleEntity>)PinchBeetleEntity::new, EntityClassification.MONSTER, 1.2f, 0.5f);
        maze_slime = make(TFEntityNames.MAZE_SLIME, (EntityType.IFactory<MazeSlimeEntity>)MazeSlimeEntity::new, EntityClassification.MONSTER, 2.04f, 2.04f);
        redcap_sapper = make(TFEntityNames.REDCAP_SAPPER, (EntityType.IFactory<RedcapSapperEntity>)RedcapSapperEntity::new, EntityClassification.MONSTER, 0.9f, 1.4f);
        mist_wolf = make(TFEntityNames.MIST_WOLF, (EntityType.IFactory<MistWolfEntity>)MistWolfEntity::new, EntityClassification.MONSTER, 1.4f, 1.9f);
        king_spider = make(TFEntityNames.KING_SPIDER, (EntityType.IFactory<KingSpiderEntity>)KingSpiderEntity::new, EntityClassification.MONSTER, 1.6f, 1.6f);
        mini_ghast = make(TFEntityNames.MINI_GHAST, (EntityType.IFactory<CarminiteGhastlingEntity>)CarminiteGhastlingEntity::new, EntityClassification.MONSTER, 1.1f, 1.5f);
        tower_ghast = make(TFEntityNames.TOWER_GHAST, (EntityType.IFactory<CarminiteGhastguardEntity>)CarminiteGhastguardEntity::new, EntityClassification.MONSTER, 4.0f, 6.0f);
        tower_golem = make(TFEntityNames.TOWER_GOLEM, (EntityType.IFactory<CarminiteGolemEntity>)CarminiteGolemEntity::new, EntityClassification.MONSTER, 1.4f, 2.9f);
        tower_termite = make(TFEntityNames.TOWER_TERMITE, (EntityType.IFactory<TowerwoodBorerEntity>)TowerwoodBorerEntity::new, EntityClassification.MONSTER, 0.4f, 0.3f);
        tower_broodling = make(TFEntityNames.TOWER_BROODLING, (EntityType.IFactory<TowerBroodlingEntity>)TowerBroodlingEntity::new, EntityClassification.MONSTER, 0.7f, 0.5f);
        ur_ghast = make(TFEntityNames.UR_GHAST, (EntityType.IFactory<UrGhastEntity>)UrGhastEntity::new, EntityClassification.MONSTER, 14.0f, 18.0f);
        blockchain_goblin = make(TFEntityNames.BLOCKCHAIN_GOBLIN, (EntityType.IFactory<BlockChainGoblinEntity>)BlockChainGoblinEntity::new, EntityClassification.MONSTER, 0.9f, 1.4f);
        goblin_knight_upper = make(TFEntityNames.GOBLIN_KNIGHT_UPPER, (EntityType.IFactory<UpperGoblinKnightEntity>)UpperGoblinKnightEntity::new, EntityClassification.MONSTER, 1.1f, 1.3f);
        goblin_knight_lower = make(TFEntityNames.GOBLIN_KNIGHT_LOWER, (EntityType.IFactory<LowerGoblinKnightEntity>)LowerGoblinKnightEntity::new, EntityClassification.MONSTER, 0.7f, 1.1f);
        helmet_crab = make(TFEntityNames.HELMET_CRAB, (EntityType.IFactory<HelmetCrabEntity>)HelmetCrabEntity::new, EntityClassification.MONSTER, 0.8f, 1.1f);
        knight_phantom = make(TFEntityNames.KNIGHT_PHANTOM, (EntityType.IFactory<KnightPhantomEntity>)KnightPhantomEntity::new, EntityClassification.MONSTER, 1.5f, 3.0f);
        yeti = make(TFEntityNames.YETI, (EntityType.IFactory<YetiEntity>)YetiEntity::new, EntityClassification.MONSTER, 1.4f, 2.4f);
        yeti_alpha = make(TFEntityNames.YETI_ALPHA, (EntityType.IFactory<AlphaYetiEntity>)AlphaYetiEntity::new, EntityClassification.MONSTER, 3.8f, 5.0f);
        winter_wolf = make(TFEntityNames.WINTER_WOLF, (EntityType.IFactory<WinterWolfEntity>)WinterWolfEntity::new, EntityClassification.MONSTER, 1.4f, 1.9f);
        snow_guardian = make(TFEntityNames.SNOW_GUARDIAN, (EntityType.IFactory<SnowGuardianEntity>)SnowGuardianEntity::new, EntityClassification.MONSTER, 0.6f, 1.8f);
        stable_ice_core = make(TFEntityNames.STABLE_ICE_CORE, (EntityType.IFactory<StableIceCoreEntity>)StableIceCoreEntity::new, EntityClassification.MONSTER, 0.8f, 1.8f);
        unstable_ice_core = make(TFEntityNames.UNSTABLE_ICE_CORE, (EntityType.IFactory<UnstableIceCoreEntity>)UnstableIceCoreEntity::new, EntityClassification.MONSTER, 0.8f, 1.8f);
        snow_queen = make(TFEntityNames.SNOW_QUEEN, (EntityType.IFactory<SnowQueenEntity>)SnowQueenEntity::new, EntityClassification.MONSTER, 0.7f, 2.2f);
        troll = make(TFEntityNames.TROLL, (EntityType.IFactory<TrollEntity>)TrollEntity::new, EntityClassification.MONSTER, 1.4f, 2.4f);
        giant_miner = make(TFEntityNames.GIANT_MINER, (EntityType.IFactory<GiantMinerEntity>)GiantMinerEntity::new, EntityClassification.MONSTER, 2.4f, 7.2f);
        armored_giant = make(TFEntityNames.ARMORED_GIANT, (EntityType.IFactory<ArmoredGiantEntity>)ArmoredGiantEntity::new, EntityClassification.MONSTER, 2.4f, 7.2f);
        ice_crystal = make(TFEntityNames.ICE_CRYSTAL, (EntityType.IFactory<IceCrystalEntity>)IceCrystalEntity::new, EntityClassification.MONSTER, 0.6f, 1.8f);
        harbinger_cube = make(TFEntityNames.HARBINGER_CUBE, (EntityType.IFactory<HarbingerCubeEntity>)HarbingerCubeEntity::new, EntityClassification.MONSTER, 1.9f, 2.4f);
        adherent = make(TFEntityNames.ADHERENT, (EntityType.IFactory<AdherentEntity>)AdherentEntity::new, EntityClassification.MONSTER, 0.8f, 2.2f);
        roving_cube = make(TFEntityNames.ROVING_CUBE, (EntityType.IFactory<RovingCubeEntity>)RovingCubeEntity::new, EntityClassification.MONSTER, 1.2f, 2.1f);
        plateau_boss = make(TFEntityNames.PLATEAU_BOSS, (EntityType.IFactory<PlateauBossEntity>)PlateauBossEntity::new, EntityClassification.MONSTER, 1.0f, 1.0f);
        nature_bolt = build(TFEntityNames.NATURE_BOLT, (EntityType.Builder<NatureBoltEntity>)makeCastedBuilder(NatureBoltEntity.class, (EntityType.IFactory<NatureBoltEntity>)NatureBoltEntity::new, EntityClassification.MISC).func_220321_a(0.25f, 0.25f).setTrackingRange(150).setUpdateInterval(5));
        lich_bolt = build(TFEntityNames.LICH_BOLT, (EntityType.Builder<LichBoltEntity>)makeCastedBuilder(LichBoltEntity.class, (EntityType.IFactory<LichBoltEntity>)LichBoltEntity::new, EntityClassification.MISC).func_220321_a(0.25f, 0.25f).setTrackingRange(150).setUpdateInterval(2));
        wand_bolt = build(TFEntityNames.WAND_BOLT, (EntityType.Builder<TwilightWandBoltEntity>)makeCastedBuilder(TwilightWandBoltEntity.class, (EntityType.IFactory<TwilightWandBoltEntity>)TwilightWandBoltEntity::new, EntityClassification.MISC).func_220321_a(0.25f, 0.25f).setTrackingRange(150).setUpdateInterval(5));
        tome_bolt = build(TFEntityNames.TOME_BOLT, (EntityType.Builder<TomeBoltEntity>)makeCastedBuilder(TomeBoltEntity.class, (EntityType.IFactory<TomeBoltEntity>)TomeBoltEntity::new, EntityClassification.MISC).func_220321_a(0.25f, 0.25f).setTrackingRange(150).setUpdateInterval(5));
        hydra_mortar = build(TFEntityNames.HYDRA_MORTAR, (EntityType.Builder<HydraMortarHead>)makeCastedBuilder(HydraMortarHead.class, (EntityType.IFactory<HydraMortarHead>)HydraMortarHead::new, EntityClassification.MISC).func_220321_a(0.75f, 0.75f).setTrackingRange(150));
        lich_bomb = build(TFEntityNames.LICH_BOMB, (EntityType.Builder<LichBombEntity>)makeCastedBuilder(LichBombEntity.class, (EntityType.IFactory<LichBombEntity>)LichBombEntity::new, EntityClassification.MISC).func_220321_a(0.25f, 0.25f).setTrackingRange(150));
        moonworm_shot = build(TFEntityNames.MOONWORM_SHOT, (EntityType.Builder<MoonwormShotEntity>)makeCastedBuilder(MoonwormShotEntity.class, (EntityType.IFactory<MoonwormShotEntity>)MoonwormShotEntity::new, EntityClassification.MISC).func_220321_a(0.25f, 0.25f).setTrackingRange(150));
        cicada_shot = build(TFEntityNames.CICADA_SHOT, (EntityType.Builder<CicadaShotEntity>)makeCastedBuilder(CicadaShotEntity.class, (EntityType.IFactory<CicadaShotEntity>)CicadaShotEntity::new, EntityClassification.MISC).func_220321_a(0.25f, 0.25f).setTrackingRange(150));
        slime_blob = build(TFEntityNames.SLIME_BLOB, (EntityType.Builder<SlimeProjectileEntity>)makeCastedBuilder(SlimeProjectileEntity.class, (EntityType.IFactory<SlimeProjectileEntity>)SlimeProjectileEntity::new, EntityClassification.MISC).func_220321_a(0.25f, 0.25f).setTrackingRange(150));
        charm_effect = make(TFEntityNames.CHARM_EFFECT, (EntityType.IFactory<CharmEffectEntity>)CharmEffectEntity::new, EntityClassification.MISC, 0.25f, 0.25f);
        thrown_wep = make(TFEntityNames.THROWN_WEP, (EntityType.IFactory<ThrownWepEntity>)ThrownWepEntity::new, EntityClassification.MISC, 0.5f, 0.5f);
        falling_ice = make(TFEntityNames.FALLING_ICE, (EntityType.IFactory<FallingIceEntity>)FallingIceEntity::new, EntityClassification.MISC, 2.98f, 2.98f);
        thrown_ice = build(TFEntityNames.THROWN_ICE, (EntityType.Builder<IceBombEntity>)makeCastedBuilder(IceBombEntity.class, (EntityType.IFactory<IceBombEntity>)IceBombEntity::new, EntityClassification.MISC).func_220321_a(1.0f, 1.0f).setUpdateInterval(2));
        seeker_arrow = build(TFEntityNames.SEEKER_ARROW, (EntityType.Builder<SeekerArrowEntity>)makeCastedBuilder(SeekerArrowEntity.class, (EntityType.IFactory<SeekerArrowEntity>)SeekerArrowEntity::new, EntityClassification.MISC).func_220321_a(0.5f, 0.5f).setTrackingRange(150).setUpdateInterval(1));
        ice_arrow = build(TFEntityNames.ICE_ARROW, (EntityType.Builder<IceArrowEntity>)makeCastedBuilder(IceArrowEntity.class, (EntityType.IFactory<IceArrowEntity>)IceArrowEntity::new, EntityClassification.MISC).func_220321_a(0.5f, 0.5f).setTrackingRange(150).setUpdateInterval(1));
        ice_snowball = build(TFEntityNames.ICE_SNOWBALL, (EntityType.Builder<IceSnowballEntity>)makeCastedBuilder(IceSnowballEntity.class, (EntityType.IFactory<IceSnowballEntity>)IceSnowballEntity::new, EntityClassification.MISC).func_220321_a(0.25f, 0.25f).setTrackingRange(150));
        chain_block = build(TFEntityNames.CHAIN_BLOCK, (EntityType.Builder<ChainBlockEntity>)makeCastedBuilder(ChainBlockEntity.class, (EntityType.IFactory<ChainBlockEntity>)ChainBlockEntity::new, EntityClassification.MISC).func_220321_a(0.6f, 0.6f).setUpdateInterval(1));
        cube_of_annihilation = build(TFEntityNames.CUBE_OF_ANNIHILATION, (EntityType.Builder<CubeOfAnnihilationEntity>)makeCastedBuilder(CubeOfAnnihilationEntity.class, (EntityType.IFactory<CubeOfAnnihilationEntity>)CubeOfAnnihilationEntity::new, EntityClassification.MISC).func_220321_a(1.0f, 1.0f).setUpdateInterval(1));
        slider = build(TFEntityNames.SLIDER, (EntityType.Builder<SlideBlockEntity>)makeCastedBuilder(SlideBlockEntity.class, (EntityType.IFactory<SlideBlockEntity>)SlideBlockEntity::new, EntityClassification.MISC).func_220321_a(0.98f, 0.98f).setUpdateInterval(1));
        rising_zombie = make(TFEntityNames.RISING_ZOMBIE, (EntityType.IFactory<RisingZombieEntity>)RisingZombieEntity::new, EntityClassification.MONSTER, 0.6f, 1.95f);
        protection_box = build(TFEntityNames.PROTECTION_BOX, (EntityType.Builder<ProtectionBoxEntity>)makeCastedBuilder(ProtectionBoxEntity.class, (EntityType.IFactory<ProtectionBoxEntity>)ProtectionBoxEntity::new, EntityClassification.MISC).func_200706_c().func_200705_b().func_220321_a(0.0f, 0.0f));
    }
}
