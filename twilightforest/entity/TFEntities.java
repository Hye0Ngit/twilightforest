// 
// Decompiled by Procyon v0.6-prerelease
// 

package twilightforest.entity;

import java.util.HashMap;
import twilightforest.client.renderer.entity.NagaSegmentRenderer;
import twilightforest.client.renderer.entity.legacy.LegacyNagaSegmentRenderer;
import twilightforest.entity.boss.NagaSegment;
import twilightforest.client.renderer.entity.SnowQueenIceShieldLayer;
import twilightforest.entity.boss.SnowQueenIceShield;
import twilightforest.client.renderer.entity.HydraNeckRenderer;
import twilightforest.client.renderer.entity.legacy.LegacyHydraNeckRenderer;
import twilightforest.entity.boss.HydraNeck;
import twilightforest.client.renderer.entity.HydraHeadRenderer;
import twilightforest.client.renderer.entity.legacy.LegacyHydraHeadRenderer;
import twilightforest.entity.boss.HydraHead;
import java.util.Map;
import java.util.ArrayList;
import net.minecraft.world.level.material.Material;
import net.minecraft.world.level.block.Block;
import net.minecraft.world.level.block.state.BlockState;
import net.minecraft.world.level.BlockGetter;
import net.minecraft.world.level.NaturalSpawner;
import net.minecraft.world.level.block.Blocks;
import twilightforest.block.TFBlocks;
import net.minecraft.core.BlockPos;
import net.minecraft.world.level.LevelReader;
import twilightforest.client.renderer.entity.BoarRenderer;
import twilightforest.client.model.entity.BoarModel;
import twilightforest.client.renderer.entity.legacy.LegacyBoarRenderer;
import twilightforest.client.model.entity.legacy.BoarLegacyModel;
import net.minecraft.client.model.SheepModel;
import twilightforest.client.renderer.entity.BighornRenderer;
import twilightforest.client.model.entity.BighornFurLayer;
import twilightforest.client.model.entity.BighornModel;
import twilightforest.client.model.entity.DeerModel;
import twilightforest.client.model.entity.legacy.DeerLegacyModel;
import twilightforest.client.model.entity.SkeletonDruidModel;
import twilightforest.client.renderer.entity.WraithRenderer;
import twilightforest.client.model.entity.WraithModel;
import twilightforest.client.renderer.entity.HydraRenderer;
import twilightforest.client.model.entity.HydraModel;
import twilightforest.client.renderer.entity.legacy.LegacyHydraRenderer;
import twilightforest.client.model.entity.legacy.HydraLegacyModel;
import twilightforest.client.renderer.entity.LichRenderer;
import twilightforest.client.model.entity.LichModel;
import twilightforest.client.model.entity.PenguinModel;
import twilightforest.client.model.entity.LichMinionModel;
import twilightforest.client.model.entity.LoyalZombieModel;
import twilightforest.client.renderer.entity.TinyBirdRenderer;
import twilightforest.client.model.entity.TinyBirdModel;
import twilightforest.client.renderer.entity.legacy.LegacyTinyBirdRenderer;
import twilightforest.client.model.entity.legacy.TinyBirdLegacyModel;
import twilightforest.client.model.entity.SquirrelModel;
import twilightforest.client.model.entity.legacy.SquirrelLegacyModel;
import twilightforest.client.renderer.entity.BunnyRenderer;
import twilightforest.client.model.entity.BunnyModel;
import twilightforest.client.renderer.entity.BirdRenderer;
import twilightforest.client.model.entity.RavenModel;
import twilightforest.client.model.entity.legacy.RavenLegacyModel;
import twilightforest.client.renderer.entity.QuestRamRenderer;
import twilightforest.client.model.entity.QuestRamModel;
import twilightforest.client.renderer.entity.legacy.LegacyQuestRamRenderer;
import twilightforest.client.model.entity.legacy.QuestRamLegacyModel;
import twilightforest.client.renderer.entity.KoboldRenderer;
import twilightforest.client.model.entity.KoboldModel;
import twilightforest.client.renderer.entity.legacy.LegacyKoboldRenderer;
import twilightforest.client.model.entity.legacy.KoboldLegacyModel;
import twilightforest.client.model.entity.MosquitoSwarmModel;
import twilightforest.client.model.entity.DeathTomeModel;
import twilightforest.client.model.entity.MinotaurModel;
import twilightforest.client.model.entity.legacy.MinotaurLegacyModel;
import twilightforest.client.renderer.entity.MinoshroomRenderer;
import twilightforest.client.model.entity.MinoshroomModel;
import twilightforest.client.renderer.entity.legacy.LegacyMinoshroomRenderer;
import twilightforest.client.model.entity.legacy.MinoshroomLegacyModel;
import twilightforest.client.model.entity.FireBeetleModel;
import twilightforest.client.model.entity.legacy.FireBeetleLegacyModel;
import twilightforest.client.renderer.entity.SlimeBeetleRenderer;
import twilightforest.client.model.entity.SlimeBeetleModel;
import twilightforest.client.renderer.entity.legacy.LegacySlimeBeetleRenderer;
import twilightforest.client.model.entity.legacy.SlimeBeetleLegacyModel;
import twilightforest.client.model.entity.PinchBeetleModel;
import twilightforest.client.model.entity.legacy.PinchBeetleLegacyModel;
import twilightforest.client.renderer.entity.TFGhastRenderer;
import twilightforest.client.renderer.entity.CarminiteGolemRenderer;
import twilightforest.client.model.entity.CarminiteGolemModel;
import net.minecraft.client.model.SilverfishModel;
import twilightforest.client.renderer.entity.CarminiteGhastRenderer;
import twilightforest.client.model.entity.TFGhastModel;
import twilightforest.client.renderer.entity.UrGhastRenderer;
import twilightforest.client.model.entity.UrGhastModel;
import twilightforest.client.renderer.entity.legacy.LegacyUrGhastRenderer;
import twilightforest.client.model.entity.legacy.UrGhastLegacyModel;
import twilightforest.client.renderer.entity.BlockChainGoblinRenderer;
import twilightforest.client.model.entity.BlockChainGoblinModel;
import twilightforest.client.renderer.entity.legacy.LegacyBlockChainGoblinRenderer;
import twilightforest.client.model.entity.legacy.BlockChainGoblinLegacyModel;
import twilightforest.client.renderer.entity.UpperGoblinKnightRenderer;
import twilightforest.client.model.entity.UpperGoblinKnightModel;
import twilightforest.client.renderer.entity.legacy.LegacyUpperGoblinKnightRenderer;
import twilightforest.client.model.entity.legacy.UpperGoblinKnightLegacyModel;
import twilightforest.client.model.entity.LowerGoblinKnightModel;
import twilightforest.client.model.entity.legacy.LowerGoblinKnightLegacyModel;
import net.minecraft.client.model.EntityModel;
import twilightforest.client.renderer.entity.TFGenericMobRenderer;
import twilightforest.client.model.entity.HelmetCrabModel;
import twilightforest.client.model.entity.legacy.HelmetCrabLegacyModel;
import twilightforest.client.renderer.entity.KnightPhantomRenderer;
import twilightforest.client.model.entity.KnightPhantomModel;
import twilightforest.client.renderer.entity.NagaRenderer;
import twilightforest.client.model.entity.NagaModel;
import twilightforest.client.renderer.entity.legacy.LegacyNagaRenderer;
import twilightforest.client.model.entity.legacy.NagaLegacyModel;
import twilightforest.client.model.entity.RedcapModel;
import twilightforest.client.model.entity.legacy.RedcapLegacyModel;
import twilightforest.client.renderer.entity.MazeSlimeRenderer;
import twilightforest.client.model.entity.YetiModel;
import twilightforest.client.model.entity.AlphaYetiModel;
import twilightforest.client.renderer.entity.SnowGuardianRenderer;
import twilightforest.client.model.entity.NoopModel;
import twilightforest.client.renderer.entity.StableIceCoreRenderer;
import twilightforest.client.model.entity.StableIceCoreModel;
import twilightforest.client.renderer.entity.UnstableIceCoreRenderer;
import twilightforest.client.model.entity.UnstableIceCoreModel;
import twilightforest.client.renderer.entity.SnowQueenRenderer;
import twilightforest.client.model.entity.SnowQueenModel;
import twilightforest.client.renderer.entity.legacy.LegacySnowQueenRenderer;
import twilightforest.client.model.entity.legacy.SnowQueenLegacyModel;
import twilightforest.client.model.entity.TrollModel;
import twilightforest.client.model.entity.legacy.TrollLegacyModel;
import net.minecraft.client.model.HumanoidModel;
import twilightforest.client.renderer.entity.TFBipedRenderer;
import net.minecraft.client.model.geom.ModelLayers;
import twilightforest.client.model.entity.RisingZombieModel;
import twilightforest.client.model.TFModelLayers;
import twilightforest.client.renderer.entity.CustomProjectileTextureRenderer;
import twilightforest.TwilightForestMod;
import net.minecraft.client.renderer.entity.EntityRenderer;
import net.minecraft.client.renderer.entity.EntityRendererProvider;
import net.minecraftforge.api.distmarker.Dist;
import net.minecraftforge.api.distmarker.OnlyIn;
import java.util.function.BooleanSupplier;
import twilightforest.client.renderer.entity.DefaultArrowRenderer;
import twilightforest.client.renderer.entity.SlideBlockRenderer;
import twilightforest.client.renderer.entity.ThrownIceRenderer;
import twilightforest.client.renderer.entity.FallingIceRenderer;
import twilightforest.client.renderer.entity.ThrownWepRenderer;
import twilightforest.client.renderer.entity.MoonwormShotRenderer;
import twilightforest.client.renderer.entity.CicadaShotRenderer;
import twilightforest.client.renderer.entity.HydraMortarRenderer;
import net.minecraft.client.renderer.entity.ThrownItemRenderer;
import twilightforest.client.renderer.entity.NoopRenderer;
import twilightforest.client.renderer.entity.RovingCubeRenderer;
import twilightforest.client.renderer.entity.AdherentRenderer;
import twilightforest.client.renderer.entity.HarbingerCubeRenderer;
import twilightforest.client.renderer.entity.CubeOfAnnihilationRenderer;
import twilightforest.client.renderer.entity.BlockChainRenderer;
import twilightforest.client.renderer.entity.IceCrystalRenderer;
import twilightforest.client.renderer.entity.TFGiantRenderer;
import twilightforest.client.renderer.entity.WinterWolfRenderer;
import twilightforest.client.renderer.entity.ProtectionBoxRenderer;
import twilightforest.client.renderer.entity.HedgeSpiderRenderer;
import twilightforest.client.renderer.entity.CarminiteBroodlingRenderer;
import twilightforest.client.renderer.entity.KingSpiderRenderer;
import twilightforest.client.renderer.entity.SwarmSpiderRenderer;
import twilightforest.client.renderer.entity.MistWolfRenderer;
import net.minecraft.client.renderer.entity.WolfRenderer;
import net.minecraft.client.Minecraft;
import net.minecraftforge.client.event.EntityRenderersEvent;
import net.minecraft.world.entity.monster.Zombie;
import net.minecraft.world.entity.monster.Spider;
import net.minecraft.world.entity.monster.AbstractSkeleton;
import net.minecraft.world.entity.animal.Sheep;
import net.minecraft.world.entity.animal.Pig;
import net.minecraftforge.event.entity.EntityAttributeCreationEvent;
import net.minecraft.world.entity.monster.Monster;
import net.minecraft.world.entity.animal.Animal;
import net.minecraft.world.level.levelgen.Heightmap;
import twilightforest.item.TransformPowderItem;
import net.minecraftforge.eventbus.api.SubscribeEvent;
import net.minecraftforge.registries.IForgeRegistry;
import net.minecraftforge.registries.IForgeRegistryEntry;
import net.minecraftforge.event.RegistryEvent;
import net.minecraft.world.item.SpawnEggItem;
import twilightforest.item.TFItems;
import java.util.Objects;
import net.minecraft.world.item.Item;
import net.minecraft.world.entity.Mob;
import net.minecraft.SharedConstants;
import net.minecraft.world.entity.Entity;
import net.minecraft.world.entity.MobCategory;
import net.minecraft.resources.ResourceLocation;
import twilightforest.entity.monster.RisingZombie;
import twilightforest.entity.projectile.IceSnowball;
import twilightforest.entity.projectile.IceArrow;
import twilightforest.entity.projectile.SeekerArrow;
import twilightforest.entity.projectile.IceBomb;
import twilightforest.entity.projectile.FallingIce;
import twilightforest.entity.projectile.ThrownWep;
import twilightforest.entity.projectile.SlimeProjectile;
import twilightforest.entity.projectile.CicadaShot;
import twilightforest.entity.projectile.MoonwormShot;
import twilightforest.entity.projectile.LichBomb;
import twilightforest.entity.boss.HydraMortarHead;
import twilightforest.entity.projectile.TomeBolt;
import twilightforest.entity.projectile.TwilightWandBolt;
import twilightforest.entity.projectile.LichBolt;
import twilightforest.entity.projectile.NatureBolt;
import twilightforest.entity.boss.PlateauBoss;
import twilightforest.entity.monster.Adherent;
import twilightforest.entity.monster.HarbingerCube;
import twilightforest.entity.monster.IceCrystal;
import twilightforest.entity.monster.ArmoredGiant;
import twilightforest.entity.monster.GiantMiner;
import twilightforest.entity.monster.Troll;
import twilightforest.entity.boss.SnowQueen;
import twilightforest.entity.monster.UnstableIceCore;
import twilightforest.entity.monster.StableIceCore;
import twilightforest.entity.monster.SnowGuardian;
import twilightforest.entity.monster.WinterWolf;
import twilightforest.entity.boss.AlphaYeti;
import twilightforest.entity.monster.Yeti;
import twilightforest.entity.boss.KnightPhantom;
import twilightforest.entity.monster.HelmetCrab;
import twilightforest.entity.monster.LowerGoblinKnight;
import twilightforest.entity.monster.UpperGoblinKnight;
import twilightforest.entity.monster.BlockChainGoblin;
import twilightforest.entity.boss.UrGhast;
import twilightforest.entity.monster.TowerBroodling;
import twilightforest.entity.monster.TowerwoodBorer;
import twilightforest.entity.monster.CarminiteGolem;
import twilightforest.entity.monster.CarminiteGhastguard;
import twilightforest.entity.monster.CarminiteGhastling;
import twilightforest.entity.monster.KingSpider;
import twilightforest.entity.monster.MistWolf;
import twilightforest.entity.monster.RedcapSapper;
import twilightforest.entity.monster.MazeSlime;
import twilightforest.entity.monster.PinchBeetle;
import twilightforest.entity.monster.SlimeBeetle;
import twilightforest.entity.monster.FireBeetle;
import twilightforest.entity.boss.Minoshroom;
import twilightforest.entity.monster.Minotaur;
import twilightforest.entity.monster.DeathTome;
import twilightforest.entity.monster.MosquitoSwarm;
import twilightforest.entity.monster.Kobold;
import twilightforest.entity.passive.QuestRam;
import twilightforest.entity.passive.Raven;
import twilightforest.entity.passive.DwarfRabbit;
import twilightforest.entity.passive.Squirrel;
import twilightforest.entity.passive.TinyBird;
import twilightforest.entity.monster.LoyalZombie;
import twilightforest.entity.monster.LichMinion;
import twilightforest.entity.passive.Penguin;
import twilightforest.entity.boss.Lich;
import twilightforest.entity.boss.Hydra;
import twilightforest.entity.monster.HedgeSpider;
import twilightforest.entity.monster.Wraith;
import twilightforest.entity.monster.HostileWolf;
import twilightforest.entity.monster.SkeletonDruid;
import twilightforest.entity.boss.Naga;
import twilightforest.entity.monster.SwarmSpider;
import twilightforest.entity.monster.Redcap;
import twilightforest.entity.passive.Deer;
import twilightforest.entity.passive.Bighorn;
import twilightforest.entity.passive.Boar;
import net.minecraft.world.entity.EntityType;
import java.util.List;
import net.minecraft.world.entity.SpawnPlacements;
import net.minecraftforge.fml.common.Mod;

@Mod.EventBusSubscriber(modid = "twilightforest", bus = Mod.EventBusSubscriber.Bus.MOD)
public class TFEntities
{
    public static final SpawnPlacements.Type ON_ICE;
    public static final SpawnPlacements.Type CLOUDS;
    private static final List<EntityType<?>> ALL;
    public static final EntityType<Boar> BOAR;
    public static final EntityType<Bighorn> BIGHORN_SHEEP;
    public static final EntityType<Deer> DEER;
    public static final EntityType<Redcap> REDCAP;
    public static final EntityType<SwarmSpider> SWARM_SPIDER;
    public static final EntityType<Naga> NAGA;
    public static final EntityType<SkeletonDruid> SKELETON_DRUID;
    public static final EntityType<HostileWolf> HOSTILE_WOLF;
    public static final EntityType<Wraith> WRAITH;
    public static final EntityType<HedgeSpider> HEDGE_SPIDER;
    public static final EntityType<Hydra> HYDRA;
    public static final EntityType<Lich> LICH;
    public static final EntityType<Penguin> PENGUIN;
    public static final EntityType<LichMinion> LICH_MINION;
    public static final EntityType<LoyalZombie> LOYAL_ZOMBIE;
    public static final EntityType<TinyBird> TINY_BIRD;
    public static final EntityType<Squirrel> SQUIRREL;
    public static final EntityType<DwarfRabbit> DWARF_RABBIT;
    public static final EntityType<Raven> RAVEN;
    public static final EntityType<QuestRam> QUEST_RAM;
    public static final EntityType<Kobold> KOBOLD;
    public static final EntityType<MosquitoSwarm> MOSQUITO_SWARM;
    public static final EntityType<DeathTome> DEATH_TOME;
    public static final EntityType<Minotaur> MINOTAUR;
    public static final EntityType<Minoshroom> MINOSHROOM;
    public static final EntityType<FireBeetle> FIRE_BEETLE;
    public static final EntityType<SlimeBeetle> SLIME_BEETLE;
    public static final EntityType<PinchBeetle> PINCH_BEETLE;
    public static final EntityType<MazeSlime> MAZE_SLIME;
    public static final EntityType<RedcapSapper> REDCAP_SAPPER;
    public static final EntityType<MistWolf> MIST_WOLF;
    public static final EntityType<KingSpider> KING_SPIDER;
    public static final EntityType<CarminiteGhastling> CARMINITE_GHASTLING;
    public static final EntityType<CarminiteGhastguard> CARMINITE_GHASTGUARD;
    public static final EntityType<CarminiteGolem> CARMINITE_GOLEM;
    public static final EntityType<TowerwoodBorer> TOWERWOOD_BORER;
    public static final EntityType<TowerBroodling> CARMINITE_BROODLING;
    public static final EntityType<UrGhast> UR_GHAST;
    public static final EntityType<BlockChainGoblin> BLOCKCHAIN_GOBLIN;
    public static final EntityType<UpperGoblinKnight> UPPER_GOBLIN_KNIGHT;
    public static final EntityType<LowerGoblinKnight> LOWER_GOBLIN_KNIGHT;
    public static final EntityType<HelmetCrab> HELMET_CRAB;
    public static final EntityType<KnightPhantom> KNIGHT_PHANTOM;
    public static final EntityType<Yeti> YETI;
    public static final EntityType<AlphaYeti> ALPHA_YETI;
    public static final EntityType<WinterWolf> WINTER_WOLF;
    public static final EntityType<SnowGuardian> SNOW_GUARDIAN;
    public static final EntityType<StableIceCore> STABLE_ICE_CORE;
    public static final EntityType<UnstableIceCore> UNSTABLE_ICE_CORE;
    public static final EntityType<SnowQueen> SNOW_QUEEN;
    public static final EntityType<Troll> TROLL;
    public static final EntityType<GiantMiner> GIANT_MINER;
    public static final EntityType<ArmoredGiant> ARMORED_GIANT;
    public static final EntityType<IceCrystal> ICE_CRYSTAL;
    public static final EntityType<HarbingerCube> HARBINGER_CUBE;
    public static final EntityType<Adherent> ADHERENT;
    public static final EntityType<RovingCube> ROVING_CUBE;
    public static final EntityType<PlateauBoss> PLATEAU_BOSS;
    public static final EntityType<NatureBolt> NATURE_BOLT;
    public static final EntityType<LichBolt> LICH_BOLT;
    public static final EntityType<TwilightWandBolt> WAND_BOLT;
    public static final EntityType<TomeBolt> TOME_BOLT;
    public static final EntityType<HydraMortarHead> HYDRA_MORTAR;
    public static final EntityType<LichBomb> LICH_BOMB;
    public static final EntityType<MoonwormShot> MOONWORM_SHOT;
    public static final EntityType<CicadaShot> CICADA_SHOT;
    public static final EntityType<SlimeProjectile> SLIME_BLOB;
    public static final EntityType<CharmEffect> CHARM_EFFECT;
    public static final EntityType<ThrownWep> THROWN_WEP;
    public static final EntityType<FallingIce> FALLING_ICE;
    public static final EntityType<IceBomb> THROWN_ICE;
    public static final EntityType<SeekerArrow> SEEKER_ARROW;
    public static final EntityType<IceArrow> ICE_ARROW;
    public static final EntityType<IceSnowball> ICE_SNOWBALL;
    public static final EntityType<ChainBlock> CHAIN_BLOCK;
    public static final EntityType<CubeOfAnnihilation> CUBE_OF_ANNIHILATION;
    public static final EntityType<SlideBlock> SLIDER;
    public static final EntityType<RisingZombie> RISING_ZOMBIE;
    public static final EntityType<ProtectionBox> PROTECTION_BOX;
    
    private static <E extends Entity> EntityType<E> make(final ResourceLocation id, final EntityType.EntityFactory<E> factory, final MobCategory classification, final float width, final float height) {
        return make(id, factory, classification, width, height, false);
    }
    
    private static <E extends Entity> EntityType<E> make(final ResourceLocation id, final EntityType.EntityFactory<E> factory, final MobCategory classification, final float width, final float height, final boolean fireproof) {
        return build(id, (EntityType.Builder<E>)makeBuilder((EntityType.EntityFactory<E>)factory, classification, width, height, 80, 3), fireproof);
    }
    
    private static <E extends Entity> EntityType<E> build(final ResourceLocation id, final EntityType.Builder<E> builder) {
        return build(id, builder, false);
    }
    
    private static <E extends Entity> EntityType<E> build(final ResourceLocation id, final EntityType.Builder<E> builder, final boolean fireproof) {
        final boolean cache = SharedConstants.f_136182_;
        SharedConstants.f_136182_ = false;
        if (fireproof) {
            builder.m_20719_();
        }
        final EntityType<E> ret = (EntityType<E>)builder.m_20712_(id.toString()).setRegistryName(id);
        SharedConstants.f_136182_ = cache;
        TFEntities.ALL.add(ret);
        return ret;
    }
    
    private static <E extends Entity> EntityType.Builder<E> makeCastedBuilder(final Class<E> cast, final EntityType.EntityFactory<E> factory, final float width, final float height, final int range, final int interval) {
        return makeBuilder(factory, MobCategory.MISC, width, height, range, interval);
    }
    
    private static <E extends Entity> EntityType.Builder<E> makeBuilder(final EntityType.EntityFactory<E> factory, final MobCategory classification, final float width, final float height, final int range, final int interval) {
        return (EntityType.Builder<E>)EntityType.Builder.m_20704_((EntityType.EntityFactory)factory, classification).m_20699_(width, height).setTrackingRange(range).setUpdateInterval(interval).setShouldReceiveVelocityUpdates(true);
    }
    
    private static Item spawnEgg(final EntityType<? extends Mob> type, final int color, final int color2) {
        final ResourceLocation eggId = new ResourceLocation(Objects.requireNonNull(type.getRegistryName()).m_135827_(), type.getRegistryName().m_135815_() + "_spawn_egg");
        return (Item)new SpawnEggItem((EntityType)type, color, color2, TFItems.defaultBuilder()).setRegistryName(eggId);
    }
    
    @SubscribeEvent
    public static void registerSpawnEggs(final RegistryEvent.Register<Item> evt) {
        final IForgeRegistry<Item> r = (IForgeRegistry<Item>)evt.getRegistry();
        r.register((IForgeRegistryEntry)spawnEgg((EntityType<? extends Mob>)TFEntities.ADHERENT, 655360, 139));
        r.register((IForgeRegistryEntry)spawnEgg((EntityType<? extends Mob>)TFEntities.ALPHA_YETI, 13487565, 2705518));
        r.register((IForgeRegistryEntry)spawnEgg((EntityType<? extends Mob>)TFEntities.ARMORED_GIANT, 2331537, 10132122));
        r.register((IForgeRegistryEntry)spawnEgg((EntityType<? extends Mob>)TFEntities.BIGHORN_SHEEP, 14405295, 14141297));
        r.register((IForgeRegistryEntry)spawnEgg((EntityType<? extends Mob>)TFEntities.BLOCKCHAIN_GOBLIN, 13887420, 2047999));
        r.register((IForgeRegistryEntry)spawnEgg((EntityType<? extends Mob>)TFEntities.CARMINITE_BROODLING, 3423252, 12250626));
        r.register((IForgeRegistryEntry)spawnEgg((EntityType<? extends Mob>)TFEntities.CARMINITE_GHASTGUARD, 12369084, 12023928));
        r.register((IForgeRegistryEntry)spawnEgg((EntityType<? extends Mob>)TFEntities.CARMINITE_GHASTLING, 12369084, 10961731));
        r.register((IForgeRegistryEntry)spawnEgg((EntityType<? extends Mob>)TFEntities.CARMINITE_GOLEM, 7028000, 14867930));
        r.register((IForgeRegistryEntry)spawnEgg((EntityType<? extends Mob>)TFEntities.TROLL, 10398095, 11572366));
        r.register((IForgeRegistryEntry)spawnEgg((EntityType<? extends Mob>)TFEntities.DEATH_TOME, 7818786, 14405054));
        r.register((IForgeRegistryEntry)spawnEgg((EntityType<? extends Mob>)TFEntities.DEER, 8080686, 4924445));
        r.register((IForgeRegistryEntry)spawnEgg((EntityType<? extends Mob>)TFEntities.DWARF_RABBIT, 16711406, 13413017));
        r.register((IForgeRegistryEntry)spawnEgg((EntityType<? extends Mob>)TFEntities.FIRE_BEETLE, 1903360, 13332261));
        r.register((IForgeRegistryEntry)spawnEgg((EntityType<? extends Mob>)TFEntities.SQUIRREL, 9457426, 15658734));
        r.register((IForgeRegistryEntry)spawnEgg((EntityType<? extends Mob>)TFEntities.GIANT_MINER, 2169682, 10132122));
        r.register((IForgeRegistryEntry)spawnEgg((EntityType<? extends Mob>)TFEntities.LOWER_GOBLIN_KNIGHT, 5660757, 13887420));
        r.register((IForgeRegistryEntry)spawnEgg((EntityType<? extends Mob>)TFEntities.HARBINGER_CUBE, 10, 9109504));
        r.register((IForgeRegistryEntry)spawnEgg((EntityType<? extends Mob>)TFEntities.HEDGE_SPIDER, 2318099, 5645907));
        r.register((IForgeRegistryEntry)spawnEgg((EntityType<? extends Mob>)TFEntities.HELMET_CRAB, 16486475, 13887420));
        r.register((IForgeRegistryEntry)spawnEgg((EntityType<? extends Mob>)TFEntities.HOSTILE_WOLF, 14144467, 11214356));
        r.register((IForgeRegistryEntry)spawnEgg(TFEntities.HYDRA, 1321280, 2719851));
        r.register((IForgeRegistryEntry)spawnEgg((EntityType<? extends Mob>)TFEntities.ICE_CRYSTAL, 14477822, 11389691));
        r.register((IForgeRegistryEntry)spawnEgg((EntityType<? extends Mob>)TFEntities.KING_SPIDER, 2890254, 16760855));
        r.register((IForgeRegistryEntry)spawnEgg((EntityType<? extends Mob>)TFEntities.KNIGHT_PHANTOM, 10905403, 13887420));
        r.register((IForgeRegistryEntry)spawnEgg((EntityType<? extends Mob>)TFEntities.KOBOLD, 3612822, 9002267));
        r.register((IForgeRegistryEntry)spawnEgg((EntityType<? extends Mob>)TFEntities.MAZE_SLIME, 10724259, 2767639));
        r.register((IForgeRegistryEntry)spawnEgg((EntityType<? extends Mob>)TFEntities.MINOSHROOM, 11014162, 11173222));
        r.register((IForgeRegistryEntry)spawnEgg((EntityType<? extends Mob>)TFEntities.MINOTAUR, 4141092, 11173222));
        r.register((IForgeRegistryEntry)spawnEgg((EntityType<? extends Mob>)TFEntities.MIST_WOLF, 3806225, 14862474));
        r.register((IForgeRegistryEntry)spawnEgg((EntityType<? extends Mob>)TFEntities.MOSQUITO_SWARM, 526596, 2961185));
        r.register((IForgeRegistryEntry)spawnEgg((EntityType<? extends Mob>)TFEntities.NAGA, 10801942, 1783819));
        r.register((IForgeRegistryEntry)spawnEgg((EntityType<? extends Mob>)TFEntities.PENGUIN, 1185051, 16379346));
        r.register((IForgeRegistryEntry)spawnEgg((EntityType<? extends Mob>)TFEntities.PINCH_BEETLE, 12358439, 2364937));
        r.register((IForgeRegistryEntry)spawnEgg((EntityType<? extends Mob>)TFEntities.QUEST_RAM, 16711406, 3386077));
        r.register((IForgeRegistryEntry)spawnEgg((EntityType<? extends Mob>)TFEntities.RAVEN, 17, 2236979));
        r.register((IForgeRegistryEntry)spawnEgg((EntityType<? extends Mob>)TFEntities.REDCAP, 3881580, 11214356));
        r.register((IForgeRegistryEntry)spawnEgg((EntityType<? extends Mob>)TFEntities.REDCAP_SAPPER, 5725473, 11214356));
        r.register((IForgeRegistryEntry)spawnEgg((EntityType<? extends Mob>)TFEntities.ROVING_CUBE, 655360, 155));
        r.register((IForgeRegistryEntry)spawnEgg((EntityType<? extends Mob>)TFEntities.SKELETON_DRUID, 10724259, 2767639));
        r.register((IForgeRegistryEntry)spawnEgg((EntityType<? extends Mob>)TFEntities.SLIME_BEETLE, 792070, 6334284));
        r.register((IForgeRegistryEntry)spawnEgg((EntityType<? extends Mob>)TFEntities.SNOW_GUARDIAN, 13887420, 16711422));
        r.register((IForgeRegistryEntry)spawnEgg((EntityType<? extends Mob>)TFEntities.SNOW_QUEEN, 11645652, 8847470));
        r.register((IForgeRegistryEntry)spawnEgg((EntityType<? extends Mob>)TFEntities.STABLE_ICE_CORE, 10600435, 7340280));
        r.register((IForgeRegistryEntry)spawnEgg((EntityType<? extends Mob>)TFEntities.SWARM_SPIDER, 3277358, 1516830));
        r.register((IForgeRegistryEntry)spawnEgg((EntityType<? extends Mob>)TFEntities.TINY_BIRD, 3386077, 1149166));
        r.register((IForgeRegistryEntry)spawnEgg((EntityType<? extends Mob>)TFEntities.TOWERWOOD_BORER, 6105889, 11313210));
        r.register((IForgeRegistryEntry)spawnEgg((EntityType<? extends Mob>)TFEntities.LICH, 11314313, 3540082));
        r.register((IForgeRegistryEntry)spawnEgg((EntityType<? extends Mob>)TFEntities.UNSTABLE_ICE_CORE, 10136821, 10162085));
        r.register((IForgeRegistryEntry)spawnEgg((EntityType<? extends Mob>)TFEntities.UR_GHAST, 12369084, 12023928));
        r.register((IForgeRegistryEntry)spawnEgg((EntityType<? extends Mob>)TFEntities.BOAR, 8611131, 16773066));
        r.register((IForgeRegistryEntry)spawnEgg((EntityType<? extends Mob>)TFEntities.WINTER_WOLF, 14672869, 11713738));
        r.register((IForgeRegistryEntry)spawnEgg((EntityType<? extends Mob>)TFEntities.WRAITH, 5263440, 8618883));
        r.register((IForgeRegistryEntry)spawnEgg((EntityType<? extends Mob>)TFEntities.YETI, 14606046, 4617659));
    }
    
    @SubscribeEvent
    public static void registerEntities(final RegistryEvent.Register<EntityType<?>> evt) {
        evt.getRegistry().registerAll((IForgeRegistryEntry[])TFEntities.ALL.toArray((IForgeRegistryEntry[])new EntityType[0]));
        ((TransformPowderItem)TFItems.TRANSFORMATION_POWDER.get()).initTransformations();
        SpawnPlacements.m_21754_((EntityType)TFEntities.BOAR, SpawnPlacements.Type.ON_GROUND, Heightmap.Types.MOTION_BLOCKING_NO_LEAVES, Animal::m_27577_);
        SpawnPlacements.m_21754_((EntityType)TFEntities.BIGHORN_SHEEP, SpawnPlacements.Type.ON_GROUND, Heightmap.Types.MOTION_BLOCKING_NO_LEAVES, Animal::m_27577_);
        SpawnPlacements.m_21754_((EntityType)TFEntities.DEER, SpawnPlacements.Type.ON_GROUND, Heightmap.Types.MOTION_BLOCKING_NO_LEAVES, Animal::m_27577_);
        SpawnPlacements.m_21754_((EntityType)TFEntities.REDCAP, SpawnPlacements.Type.ON_GROUND, Heightmap.Types.MOTION_BLOCKING_NO_LEAVES, Monster::m_33017_);
        SpawnPlacements.m_21754_((EntityType)TFEntities.SKELETON_DRUID, SpawnPlacements.Type.ON_GROUND, Heightmap.Types.MOTION_BLOCKING_NO_LEAVES, SkeletonDruid::skeletonDruidSpawnHandler);
        SpawnPlacements.m_21754_((EntityType)TFEntities.WRAITH, SpawnPlacements.Type.ON_GROUND, Heightmap.Types.MOTION_BLOCKING_NO_LEAVES, Wraith::getCanSpawnHere);
        SpawnPlacements.m_21754_((EntityType)TFEntities.HYDRA, SpawnPlacements.Type.ON_GROUND, Heightmap.Types.MOTION_BLOCKING_NO_LEAVES, Mob::m_21400_);
        SpawnPlacements.m_21754_((EntityType)TFEntities.LICH, SpawnPlacements.Type.ON_GROUND, Heightmap.Types.MOTION_BLOCKING_NO_LEAVES, Mob::m_21400_);
        SpawnPlacements.m_21754_((EntityType)TFEntities.PENGUIN, TFEntities.ON_ICE, Heightmap.Types.MOTION_BLOCKING_NO_LEAVES, Penguin::canSpawn);
        SpawnPlacements.m_21754_((EntityType)TFEntities.LICH_MINION, SpawnPlacements.Type.ON_GROUND, Heightmap.Types.MOTION_BLOCKING_NO_LEAVES, Mob::m_21400_);
        SpawnPlacements.m_21754_((EntityType)TFEntities.LOYAL_ZOMBIE, SpawnPlacements.Type.ON_GROUND, Heightmap.Types.MOTION_BLOCKING_NO_LEAVES, Mob::m_21400_);
        SpawnPlacements.m_21754_((EntityType)TFEntities.TINY_BIRD, SpawnPlacements.Type.ON_GROUND, Heightmap.Types.MOTION_BLOCKING_NO_LEAVES, Animal::m_27577_);
        SpawnPlacements.m_21754_((EntityType)TFEntities.SQUIRREL, SpawnPlacements.Type.ON_GROUND, Heightmap.Types.MOTION_BLOCKING_NO_LEAVES, Animal::m_27577_);
        SpawnPlacements.m_21754_((EntityType)TFEntities.DWARF_RABBIT, SpawnPlacements.Type.ON_GROUND, Heightmap.Types.MOTION_BLOCKING_NO_LEAVES, Animal::m_27577_);
        SpawnPlacements.m_21754_((EntityType)TFEntities.RAVEN, SpawnPlacements.Type.ON_GROUND, Heightmap.Types.MOTION_BLOCKING_NO_LEAVES, Animal::m_27577_);
        SpawnPlacements.m_21754_((EntityType)TFEntities.QUEST_RAM, SpawnPlacements.Type.ON_GROUND, Heightmap.Types.MOTION_BLOCKING_NO_LEAVES, Animal::m_27577_);
        SpawnPlacements.m_21754_((EntityType)TFEntities.KOBOLD, SpawnPlacements.Type.ON_GROUND, Heightmap.Types.MOTION_BLOCKING_NO_LEAVES, Monster::m_33017_);
        SpawnPlacements.m_21754_((EntityType)TFEntities.MOSQUITO_SWARM, SpawnPlacements.Type.ON_GROUND, Heightmap.Types.MOTION_BLOCKING_NO_LEAVES, Monster::m_33023_);
        SpawnPlacements.m_21754_((EntityType)TFEntities.DEATH_TOME, SpawnPlacements.Type.ON_GROUND, Heightmap.Types.MOTION_BLOCKING_NO_LEAVES, Monster::m_33017_);
        SpawnPlacements.m_21754_((EntityType)TFEntities.MINOTAUR, SpawnPlacements.Type.ON_GROUND, Heightmap.Types.MOTION_BLOCKING_NO_LEAVES, Monster::m_33017_);
        SpawnPlacements.m_21754_((EntityType)TFEntities.MINOSHROOM, SpawnPlacements.Type.ON_GROUND, Heightmap.Types.MOTION_BLOCKING_NO_LEAVES, Mob::m_21400_);
        SpawnPlacements.m_21754_((EntityType)TFEntities.FIRE_BEETLE, SpawnPlacements.Type.ON_GROUND, Heightmap.Types.MOTION_BLOCKING_NO_LEAVES, Monster::m_33017_);
        SpawnPlacements.m_21754_((EntityType)TFEntities.SLIME_BEETLE, SpawnPlacements.Type.ON_GROUND, Heightmap.Types.MOTION_BLOCKING_NO_LEAVES, Monster::m_33017_);
        SpawnPlacements.m_21754_((EntityType)TFEntities.PINCH_BEETLE, SpawnPlacements.Type.ON_GROUND, Heightmap.Types.MOTION_BLOCKING_NO_LEAVES, Monster::m_33017_);
        SpawnPlacements.m_21754_((EntityType)TFEntities.MIST_WOLF, SpawnPlacements.Type.ON_GROUND, Heightmap.Types.MOTION_BLOCKING_NO_LEAVES, HostileWolf::getCanSpawnHere);
        SpawnPlacements.m_21754_((EntityType)TFEntities.CARMINITE_GHASTLING, SpawnPlacements.Type.ON_GROUND, Heightmap.Types.MOTION_BLOCKING_NO_LEAVES, CarminiteGhastling::canSpawnHere);
        SpawnPlacements.m_21754_((EntityType)TFEntities.CARMINITE_GOLEM, SpawnPlacements.Type.ON_GROUND, Heightmap.Types.MOTION_BLOCKING_NO_LEAVES, Monster::m_33017_);
        SpawnPlacements.m_21754_((EntityType)TFEntities.TOWERWOOD_BORER, SpawnPlacements.Type.ON_GROUND, Heightmap.Types.MOTION_BLOCKING_NO_LEAVES, Monster::m_33017_);
        SpawnPlacements.m_21754_((EntityType)TFEntities.CARMINITE_GHASTGUARD, SpawnPlacements.Type.ON_GROUND, Heightmap.Types.MOTION_BLOCKING_NO_LEAVES, CarminiteGhastguard::ghastSpawnHandler);
        SpawnPlacements.m_21754_((EntityType)TFEntities.UR_GHAST, SpawnPlacements.Type.ON_GROUND, Heightmap.Types.MOTION_BLOCKING_NO_LEAVES, Mob::m_21400_);
        SpawnPlacements.m_21754_((EntityType)TFEntities.BLOCKCHAIN_GOBLIN, SpawnPlacements.Type.ON_GROUND, Heightmap.Types.MOTION_BLOCKING_NO_LEAVES, Monster::m_33017_);
        SpawnPlacements.m_21754_((EntityType)TFEntities.UPPER_GOBLIN_KNIGHT, SpawnPlacements.Type.ON_GROUND, Heightmap.Types.MOTION_BLOCKING_NO_LEAVES, Monster::m_33017_);
        SpawnPlacements.m_21754_((EntityType)TFEntities.LOWER_GOBLIN_KNIGHT, SpawnPlacements.Type.ON_GROUND, Heightmap.Types.MOTION_BLOCKING_NO_LEAVES, Monster::m_33017_);
        SpawnPlacements.m_21754_((EntityType)TFEntities.HELMET_CRAB, SpawnPlacements.Type.ON_GROUND, Heightmap.Types.MOTION_BLOCKING_NO_LEAVES, Monster::m_33017_);
        SpawnPlacements.m_21754_((EntityType)TFEntities.KNIGHT_PHANTOM, SpawnPlacements.Type.ON_GROUND, Heightmap.Types.MOTION_BLOCKING_NO_LEAVES, Mob::m_21400_);
        SpawnPlacements.m_21754_((EntityType)TFEntities.NAGA, SpawnPlacements.Type.ON_GROUND, Heightmap.Types.MOTION_BLOCKING_NO_LEAVES, Mob::m_21400_);
        SpawnPlacements.m_21754_((EntityType)TFEntities.SWARM_SPIDER, SpawnPlacements.Type.ON_GROUND, Heightmap.Types.MOTION_BLOCKING_NO_LEAVES, SwarmSpider::getCanSpawnHere);
        SpawnPlacements.m_21754_((EntityType)TFEntities.KING_SPIDER, SpawnPlacements.Type.ON_GROUND, Heightmap.Types.MOTION_BLOCKING_NO_LEAVES, Monster::m_33017_);
        SpawnPlacements.m_21754_((EntityType)TFEntities.CARMINITE_BROODLING, SpawnPlacements.Type.ON_GROUND, Heightmap.Types.MOTION_BLOCKING_NO_LEAVES, SwarmSpider::getCanSpawnHere);
        SpawnPlacements.m_21754_((EntityType)TFEntities.HEDGE_SPIDER, SpawnPlacements.Type.ON_GROUND, Heightmap.Types.MOTION_BLOCKING_NO_LEAVES, HedgeSpider::canSpawn);
        SpawnPlacements.m_21754_((EntityType)TFEntities.REDCAP_SAPPER, SpawnPlacements.Type.ON_GROUND, Heightmap.Types.MOTION_BLOCKING_NO_LEAVES, Monster::m_33017_);
        SpawnPlacements.m_21754_((EntityType)TFEntities.MAZE_SLIME, SpawnPlacements.Type.ON_GROUND, Heightmap.Types.MOTION_BLOCKING_NO_LEAVES, MazeSlime::getCanSpawnHere);
        SpawnPlacements.m_21754_((EntityType)TFEntities.YETI, SpawnPlacements.Type.ON_GROUND, Heightmap.Types.MOTION_BLOCKING_NO_LEAVES, Yeti::yetiSnowyForestSpawnHandler);
        SpawnPlacements.m_21754_((EntityType)TFEntities.ALPHA_YETI, SpawnPlacements.Type.ON_GROUND, Heightmap.Types.MOTION_BLOCKING_NO_LEAVES, Mob::m_21400_);
        SpawnPlacements.m_21754_((EntityType)TFEntities.WINTER_WOLF, SpawnPlacements.Type.ON_GROUND, Heightmap.Types.MOTION_BLOCKING_NO_LEAVES, WinterWolf::canSpawnHere);
        SpawnPlacements.m_21754_((EntityType)TFEntities.SNOW_GUARDIAN, SpawnPlacements.Type.ON_GROUND, Heightmap.Types.MOTION_BLOCKING_NO_LEAVES, Monster::m_33017_);
        SpawnPlacements.m_21754_((EntityType)TFEntities.STABLE_ICE_CORE, SpawnPlacements.Type.ON_GROUND, Heightmap.Types.MOTION_BLOCKING_NO_LEAVES, Monster::m_33017_);
        SpawnPlacements.m_21754_((EntityType)TFEntities.UNSTABLE_ICE_CORE, SpawnPlacements.Type.ON_GROUND, Heightmap.Types.MOTION_BLOCKING_NO_LEAVES, Monster::m_33017_);
        SpawnPlacements.m_21754_((EntityType)TFEntities.SNOW_QUEEN, SpawnPlacements.Type.ON_GROUND, Heightmap.Types.MOTION_BLOCKING_NO_LEAVES, Mob::m_21400_);
        SpawnPlacements.m_21754_((EntityType)TFEntities.TROLL, SpawnPlacements.Type.ON_GROUND, Heightmap.Types.MOTION_BLOCKING_NO_LEAVES, Troll::canSpawn);
        SpawnPlacements.m_21754_((EntityType)TFEntities.GIANT_MINER, TFEntities.CLOUDS, Heightmap.Types.MOTION_BLOCKING_NO_LEAVES, GiantMiner::canSpawn);
        SpawnPlacements.m_21754_((EntityType)TFEntities.ARMORED_GIANT, TFEntities.CLOUDS, Heightmap.Types.MOTION_BLOCKING_NO_LEAVES, GiantMiner::canSpawn);
        SpawnPlacements.m_21754_((EntityType)TFEntities.ICE_CRYSTAL, SpawnPlacements.Type.ON_GROUND, Heightmap.Types.MOTION_BLOCKING_NO_LEAVES, Mob::m_21400_);
        SpawnPlacements.m_21754_((EntityType)TFEntities.HARBINGER_CUBE, SpawnPlacements.Type.ON_GROUND, Heightmap.Types.MOTION_BLOCKING_NO_LEAVES, Monster::m_33023_);
        SpawnPlacements.m_21754_((EntityType)TFEntities.ADHERENT, SpawnPlacements.Type.ON_GROUND, Heightmap.Types.MOTION_BLOCKING_NO_LEAVES, Monster::m_33017_);
        SpawnPlacements.m_21754_((EntityType)TFEntities.ROVING_CUBE, SpawnPlacements.Type.ON_GROUND, Heightmap.Types.MOTION_BLOCKING_NO_LEAVES, Monster::m_33023_);
        SpawnPlacements.m_21754_((EntityType)TFEntities.RISING_ZOMBIE, SpawnPlacements.Type.ON_GROUND, Heightmap.Types.MOTION_BLOCKING_NO_LEAVES, Mob::m_21400_);
    }
    
    @SubscribeEvent
    public static void addEntityAttributes(final EntityAttributeCreationEvent event) {
        event.put((EntityType)TFEntities.BOAR, Pig.m_29503_().m_22265_());
        event.put((EntityType)TFEntities.BIGHORN_SHEEP, Sheep.m_29873_().m_22265_());
        event.put((EntityType)TFEntities.DEER, Deer.registerAttributes().m_22265_());
        event.put((EntityType)TFEntities.REDCAP, Redcap.registerAttributes().m_22265_());
        event.put((EntityType)TFEntities.SWARM_SPIDER, SwarmSpider.registerAttributes().m_22265_());
        event.put((EntityType)TFEntities.NAGA, Naga.registerAttributes().m_22265_());
        event.put((EntityType)TFEntities.SKELETON_DRUID, AbstractSkeleton.m_32166_().m_22265_());
        event.put((EntityType)TFEntities.HOSTILE_WOLF, HostileWolf.registerAttributes().m_22265_());
        event.put((EntityType)TFEntities.WRAITH, Wraith.registerAttributes().m_22265_());
        event.put((EntityType)TFEntities.HEDGE_SPIDER, Spider.m_33815_().m_22265_());
        event.put((EntityType)TFEntities.HYDRA, Hydra.registerAttributes().m_22265_());
        event.put((EntityType)TFEntities.LICH, Lich.registerAttributes().m_22265_());
        event.put((EntityType)TFEntities.PENGUIN, Penguin.registerAttributes().m_22265_());
        event.put((EntityType)TFEntities.LICH_MINION, Zombie.m_34328_().m_22265_());
        event.put((EntityType)TFEntities.LOYAL_ZOMBIE, LoyalZombie.registerAttributes().m_22265_());
        event.put((EntityType)TFEntities.TINY_BIRD, TinyBird.registerAttributes().m_22265_());
        event.put((EntityType)TFEntities.SQUIRREL, Squirrel.registerAttributes().m_22265_());
        event.put((EntityType)TFEntities.DWARF_RABBIT, DwarfRabbit.registerAttributes().m_22265_());
        event.put((EntityType)TFEntities.RAVEN, Raven.registerAttributes().m_22265_());
        event.put((EntityType)TFEntities.QUEST_RAM, QuestRam.registerAttributes().m_22265_());
        event.put((EntityType)TFEntities.KOBOLD, Kobold.registerAttributes().m_22265_());
        event.put((EntityType)TFEntities.MOSQUITO_SWARM, MosquitoSwarm.registerAttributes().m_22265_());
        event.put((EntityType)TFEntities.DEATH_TOME, DeathTome.registerAttributes().m_22265_());
        event.put((EntityType)TFEntities.MINOTAUR, Minotaur.registerAttributes().m_22265_());
        event.put((EntityType)TFEntities.MINOSHROOM, Minoshroom.registerAttributes().m_22265_());
        event.put((EntityType)TFEntities.FIRE_BEETLE, FireBeetle.registerAttributes().m_22265_());
        event.put((EntityType)TFEntities.SLIME_BEETLE, SlimeBeetle.registerAttributes().m_22265_());
        event.put((EntityType)TFEntities.PINCH_BEETLE, PinchBeetle.registerAttributes().m_22265_());
        event.put((EntityType)TFEntities.MAZE_SLIME, MazeSlime.registerAttributes().m_22265_());
        event.put((EntityType)TFEntities.REDCAP_SAPPER, RedcapSapper.registerAttributes().m_22265_());
        event.put((EntityType)TFEntities.MIST_WOLF, MistWolf.registerAttributes().m_22265_());
        event.put((EntityType)TFEntities.KING_SPIDER, KingSpider.registerAttributes().m_22265_());
        event.put((EntityType)TFEntities.CARMINITE_GHASTLING, CarminiteGhastling.registerAttributes().m_22265_());
        event.put((EntityType)TFEntities.CARMINITE_GHASTGUARD, CarminiteGhastguard.registerAttributes().m_22265_());
        event.put((EntityType)TFEntities.CARMINITE_GOLEM, CarminiteGolem.registerAttributes().m_22265_());
        event.put((EntityType)TFEntities.TOWERWOOD_BORER, TowerwoodBorer.registerAttributes().m_22265_());
        event.put((EntityType)TFEntities.CARMINITE_BROODLING, TowerBroodling.registerAttributes().m_22265_());
        event.put((EntityType)TFEntities.UR_GHAST, UrGhast.registerAttributes().m_22265_());
        event.put((EntityType)TFEntities.BLOCKCHAIN_GOBLIN, BlockChainGoblin.registerAttributes().m_22265_());
        event.put((EntityType)TFEntities.UPPER_GOBLIN_KNIGHT, UpperGoblinKnight.registerAttributes().m_22265_());
        event.put((EntityType)TFEntities.LOWER_GOBLIN_KNIGHT, LowerGoblinKnight.registerAttributes().m_22265_());
        event.put((EntityType)TFEntities.HELMET_CRAB, HelmetCrab.registerAttributes().m_22265_());
        event.put((EntityType)TFEntities.KNIGHT_PHANTOM, KnightPhantom.registerAttributes().m_22265_());
        event.put((EntityType)TFEntities.YETI, Yeti.registerAttributes().m_22265_());
        event.put((EntityType)TFEntities.ALPHA_YETI, AlphaYeti.registerAttributes().m_22265_());
        event.put((EntityType)TFEntities.WINTER_WOLF, WinterWolf.registerAttributes().m_22265_());
        event.put((EntityType)TFEntities.SNOW_GUARDIAN, SnowGuardian.registerAttributes().m_22265_());
        event.put((EntityType)TFEntities.STABLE_ICE_CORE, StableIceCore.registerAttributes().m_22265_());
        event.put((EntityType)TFEntities.UNSTABLE_ICE_CORE, UnstableIceCore.registerAttributes().m_22265_());
        event.put((EntityType)TFEntities.SNOW_QUEEN, SnowQueen.registerAttributes().m_22265_());
        event.put((EntityType)TFEntities.TROLL, Troll.registerAttributes().m_22265_());
        event.put((EntityType)TFEntities.GIANT_MINER, GiantMiner.registerAttributes().m_22265_());
        event.put((EntityType)TFEntities.ARMORED_GIANT, GiantMiner.registerAttributes().m_22265_());
        event.put((EntityType)TFEntities.ICE_CRYSTAL, IceCrystal.registerAttributes().m_22265_());
        event.put((EntityType)TFEntities.HARBINGER_CUBE, HarbingerCube.registerAttributes().m_22265_());
        event.put((EntityType)TFEntities.ADHERENT, Adherent.registerAttributes().m_22265_());
        event.put((EntityType)TFEntities.ROVING_CUBE, RovingCube.registerAttributes().m_22265_());
        event.put((EntityType)TFEntities.PLATEAU_BOSS, PlateauBoss.registerAttributes().m_22265_());
        event.put((EntityType)TFEntities.RISING_ZOMBIE, Zombie.m_34328_().m_22265_());
    }
    
    @OnlyIn(Dist.CLIENT)
    @SubscribeEvent
    public static void registerEntityRenderer(final EntityRenderersEvent.RegisterRenderers event) {
        final BooleanSupplier legacy = () -> Minecraft.m_91087_().m_91099_().m_10523_().contains("builtin/twilight_forest_legacy_resources");
        event.registerEntityRenderer((EntityType)TFEntities.BOAR, m -> legacy.getAsBoolean() ? new LegacyBoarRenderer(m, new BoarLegacyModel<Boar>(m.m_174023_(TFModelLayers.LEGACY_BOAR))) : new BoarRenderer(m, new BoarModel<Boar>(m.m_174023_(TFModelLayers.BOAR))));
        event.registerEntityRenderer((EntityType)TFEntities.BIGHORN_SHEEP, m -> new BighornRenderer(m, new BighornModel<Sheep>(m.m_174023_(legacy.getAsBoolean() ? TFModelLayers.LEGACY_BIGHORN_SHEEP : TFModelLayers.BIGHORN_SHEEP)), (EntityModel<?>)new BighornFurLayer(m.m_174023_(TFModelLayers.BIGHORN_SHEEP_FUR)), 0.7f));
        event.registerEntityRenderer((EntityType)TFEntities.DEER, m -> new TFGenericMobRenderer(m, (EntityModel)(legacy.getAsBoolean() ? new DeerLegacyModel(m.m_174023_(TFModelLayers.LEGACY_DEER)) : new DeerModel(m.m_174023_(TFModelLayers.DEER))), 0.7f, "wilddeer.png"));
        event.registerEntityRenderer((EntityType)TFEntities.REDCAP, m -> new TFBipedRenderer(m, (HumanoidModel)(legacy.getAsBoolean() ? new RedcapLegacyModel(m.m_174023_(TFModelLayers.LEGACY_REDCAP)) : new RedcapModel(m.m_174023_(TFModelLayers.REDCAP))), new RedcapModel(m.m_174023_(TFModelLayers.REDCAP_ARMOR_INNER)), new RedcapModel(m.m_174023_(TFModelLayers.REDCAP_ARMOR_OUTER)), 0.4f, "redcap.png"));
        event.registerEntityRenderer((EntityType)TFEntities.SKELETON_DRUID, m -> new TFBipedRenderer(m, (HumanoidModel)new SkeletonDruidModel(m.m_174023_(TFModelLayers.SKELETON_DRUID)), (HumanoidModel)new SkeletonDruidModel(m.m_174023_(TFModelLayers.SKELETON_DRUID_INNER_ARMOR)), (HumanoidModel)new SkeletonDruidModel(m.m_174023_(TFModelLayers.SKELETON_DRUID_OUTER_ARMOR)), 0.5f, "skeletondruid.png"));
        event.registerEntityRenderer((EntityType)TFEntities.HOSTILE_WOLF, WolfRenderer::new);
        event.registerEntityRenderer((EntityType)TFEntities.WRAITH, m -> new WraithRenderer(m, new WraithModel(m.m_174023_(TFModelLayers.WRAITH)), 0.5f));
        event.registerEntityRenderer((EntityType)TFEntities.HYDRA, m -> legacy.getAsBoolean() ? new LegacyHydraRenderer(m, new HydraLegacyModel(m.m_174023_(TFModelLayers.LEGACY_HYDRA)), 4.0f) : new HydraRenderer(m, new HydraModel(m.m_174023_(TFModelLayers.HYDRA)), 4.0f));
        event.registerEntityRenderer((EntityType)TFEntities.LICH, m -> new LichRenderer(m, new LichModel(m.m_174023_(TFModelLayers.LICH)), 0.6f));
        event.registerEntityRenderer((EntityType)TFEntities.PENGUIN, m -> new BirdRenderer(m, (EntityModel)new PenguinModel(m.m_174023_(TFModelLayers.PENGUIN)), 0.375f, "penguin.png"));
        event.registerEntityRenderer((EntityType)TFEntities.LICH_MINION, m -> new TFBipedRenderer(m, (HumanoidModel)new LichMinionModel(m.m_174023_(TFModelLayers.LICH_MINION)), (HumanoidModel)new LichMinionModel(m.m_174023_(ModelLayers.f_171226_)), (HumanoidModel)new LichMinionModel(m.m_174023_(ModelLayers.f_171227_)), 0.5f, "textures/entity/zombie/zombie.png"));
        event.registerEntityRenderer((EntityType)TFEntities.LOYAL_ZOMBIE, m -> new TFBipedRenderer(m, new LoyalZombieModel(m.m_174023_(TFModelLayers.LOYAL_ZOMBIE)), new LoyalZombieModel(m.m_174023_(ModelLayers.f_171226_)), new LoyalZombieModel(m.m_174023_(ModelLayers.f_171227_)), 0.5f, "textures/entity/zombie/zombie.png"));
        event.registerEntityRenderer((EntityType)TFEntities.TINY_BIRD, m -> legacy.getAsBoolean() ? new LegacyTinyBirdRenderer(m, new TinyBirdLegacyModel(m.m_174023_(TFModelLayers.LEGACY_TINY_BIRD)), 0.3f) : new TinyBirdRenderer(m, new TinyBirdModel(m.m_174023_(TFModelLayers.TINY_BIRD)), 0.3f));
        event.registerEntityRenderer((EntityType)TFEntities.SQUIRREL, m -> new TFGenericMobRenderer(m, (EntityModel)(legacy.getAsBoolean() ? new SquirrelLegacyModel(m.m_174023_(TFModelLayers.LEGACY_SQUIRREL)) : new SquirrelModel(m.m_174023_(TFModelLayers.SQUIRREL))), 0.3f, "squirrel2.png"));
        event.registerEntityRenderer((EntityType)TFEntities.DWARF_RABBIT, m -> new BunnyRenderer(m, new BunnyModel(m.m_174023_(TFModelLayers.BUNNY)), 0.3f));
        event.registerEntityRenderer((EntityType)TFEntities.RAVEN, m -> new BirdRenderer(m, (EntityModel)(legacy.getAsBoolean() ? new RavenLegacyModel(m.m_174023_(TFModelLayers.LEGACY_RAVEN)) : new RavenModel(m.m_174023_(TFModelLayers.RAVEN))), 0.3f, "raven.png"));
        event.registerEntityRenderer((EntityType)TFEntities.QUEST_RAM, m -> legacy.getAsBoolean() ? new LegacyQuestRamRenderer(m, new QuestRamLegacyModel(m.m_174023_(TFModelLayers.LEGACY_QUEST_RAM))) : new QuestRamRenderer(m, new QuestRamModel(m.m_174023_(TFModelLayers.QUEST_RAM))));
        event.registerEntityRenderer((EntityType)TFEntities.KOBOLD, m -> legacy.getAsBoolean() ? new LegacyKoboldRenderer(m, new KoboldLegacyModel(m.m_174023_(TFModelLayers.LEGACY_KOBOLD)), 0.4f, "kobold.png") : new KoboldRenderer(m, new KoboldModel(m.m_174023_(TFModelLayers.KOBOLD)), 0.4f, "kobold.png"));
        event.registerEntityRenderer((EntityType)TFEntities.MOSQUITO_SWARM, m -> new TFGenericMobRenderer(m, (EntityModel)new MosquitoSwarmModel(m.m_174023_(TFModelLayers.MOSQUITO_SWARM)), 0.0f, "mosquitoswarm.png"));
        event.registerEntityRenderer((EntityType)TFEntities.DEATH_TOME, m -> new TFGenericMobRenderer(m, (EntityModel)new DeathTomeModel(m.m_174023_(TFModelLayers.DEATH_TOME)), 0.3f, "textures/entity/enchanting_table_book.png"));
        event.registerEntityRenderer((EntityType)TFEntities.MINOTAUR, m -> new TFBipedRenderer(m, legacy.getAsBoolean() ? new MinotaurLegacyModel(m.m_174023_(TFModelLayers.LEGACY_MINOTAUR)) : new MinotaurModel(m.m_174023_(TFModelLayers.MINOTAUR)), 0.625f, "minotaur.png"));
        event.registerEntityRenderer((EntityType)TFEntities.MINOSHROOM, m -> legacy.getAsBoolean() ? new LegacyMinoshroomRenderer(m, new MinoshroomLegacyModel(m.m_174023_(TFModelLayers.LEGACY_MINOSHROOM)), 0.625f) : new MinoshroomRenderer(m, new MinoshroomModel(m.m_174023_(TFModelLayers.MINOSHROOM)), 0.625f));
        event.registerEntityRenderer((EntityType)TFEntities.FIRE_BEETLE, m -> new TFGenericMobRenderer(m, (EntityModel)(legacy.getAsBoolean() ? new FireBeetleLegacyModel(m.m_174023_(TFModelLayers.LEGACY_FIRE_BEETLE)) : new FireBeetleModel(m.m_174023_(TFModelLayers.FIRE_BEETLE))), 0.8f, "firebeetle.png"));
        event.registerEntityRenderer((EntityType)TFEntities.SLIME_BEETLE, m -> legacy.getAsBoolean() ? new LegacySlimeBeetleRenderer(m, new SlimeBeetleLegacyModel(m.m_174023_(TFModelLayers.LEGACY_SLIME_BEETLE)), 0.6f) : new SlimeBeetleRenderer(m, new SlimeBeetleModel(m.m_174023_(TFModelLayers.SLIME_BEETLE)), 0.6f));
        event.registerEntityRenderer((EntityType)TFEntities.PINCH_BEETLE, m -> new TFGenericMobRenderer(m, (EntityModel)(legacy.getAsBoolean() ? new PinchBeetleLegacyModel(m.m_174023_(TFModelLayers.LEGACY_PINCH_BEETLE)) : new PinchBeetleModel(m.m_174023_(TFModelLayers.PINCH_BEETLE))), 0.6f, "pinchbeetle.png"));
        event.registerEntityRenderer((EntityType)TFEntities.MIST_WOLF, MistWolfRenderer::new);
        event.registerEntityRenderer((EntityType)TFEntities.CARMINITE_GHASTLING, m -> new TFGhastRenderer(m, new TFGhastModel(m.m_174023_(TFModelLayers.CARMINITE_GHASTLING)), 0.625f));
        event.registerEntityRenderer((EntityType)TFEntities.CARMINITE_GOLEM, m -> new CarminiteGolemRenderer(m, new CarminiteGolemModel(m.m_174023_(TFModelLayers.CARMINITE_GOLEM)), 0.75f));
        event.registerEntityRenderer((EntityType)TFEntities.TOWERWOOD_BORER, m -> new TFGenericMobRenderer(m, (EntityModel)new SilverfishModel(m.m_174023_(ModelLayers.f_171235_)), 0.3f, "towertermite.png"));
        event.registerEntityRenderer((EntityType)TFEntities.CARMINITE_GHASTGUARD, m -> new CarminiteGhastRenderer(m, new TFGhastModel(m.m_174023_(TFModelLayers.CARMINITE_GHASTGUARD)), 3.0f));
        event.registerEntityRenderer((EntityType)TFEntities.UR_GHAST, m -> legacy.getAsBoolean() ? new LegacyUrGhastRenderer(m, new UrGhastLegacyModel(m.m_174023_(TFModelLayers.LEGACY_UR_GHAST)), 8.0f, 24.0f) : new UrGhastRenderer(m, new UrGhastModel(m.m_174023_(TFModelLayers.UR_GHAST)), 8.0f, 24.0f));
        event.registerEntityRenderer((EntityType)TFEntities.BLOCKCHAIN_GOBLIN, m -> legacy.getAsBoolean() ? new LegacyBlockChainGoblinRenderer(m, new BlockChainGoblinLegacyModel(m.m_174023_(TFModelLayers.LEGACY_BLOCKCHAIN_GOBLIN)), 0.4f) : new BlockChainGoblinRenderer(m, new BlockChainGoblinModel(m.m_174023_(TFModelLayers.BLOCKCHAIN_GOBLIN)), 0.4f));
        event.registerEntityRenderer((EntityType)TFEntities.UPPER_GOBLIN_KNIGHT, m -> legacy.getAsBoolean() ? new LegacyUpperGoblinKnightRenderer(m, new UpperGoblinKnightLegacyModel(m.m_174023_(TFModelLayers.LEGACY_UPPER_GOBLIN_KNIGHT)), 0.625f) : new UpperGoblinKnightRenderer(m, new UpperGoblinKnightModel(m.m_174023_(TFModelLayers.UPPER_GOBLIN_KNIGHT)), 0.625f));
        event.registerEntityRenderer((EntityType)TFEntities.LOWER_GOBLIN_KNIGHT, m -> new TFBipedRenderer(m, legacy.getAsBoolean() ? new LowerGoblinKnightLegacyModel(m.m_174023_(TFModelLayers.LEGACY_LOWER_GOBLIN_KNIGHT)) : new LowerGoblinKnightModel(m.m_174023_(TFModelLayers.LOWER_GOBLIN_KNIGHT)), 0.625f, "doublegoblin.png"));
        event.registerEntityRenderer((EntityType)TFEntities.HELMET_CRAB, m -> new TFGenericMobRenderer(m, (EntityModel)(legacy.getAsBoolean() ? new HelmetCrabLegacyModel(m.m_174023_(TFModelLayers.LEGACY_HELMET_CRAB)) : new HelmetCrabModel(m.m_174023_(TFModelLayers.HELMET_CRAB))), 0.625f, "helmetcrab.png"));
        event.registerEntityRenderer((EntityType)TFEntities.KNIGHT_PHANTOM, m -> new KnightPhantomRenderer(m, new KnightPhantomModel(m.m_174023_(TFModelLayers.KNIGHT_PHANTOM)), 0.625f));
        event.registerEntityRenderer((EntityType)TFEntities.NAGA, m -> legacy.getAsBoolean() ? new LegacyNagaRenderer(m, new NagaLegacyModel(m.m_174023_(TFModelLayers.LEGACY_NAGA)), 1.45f) : new NagaRenderer(m, new NagaModel(m.m_174023_(TFModelLayers.NAGA)), 1.45f));
        event.registerEntityRenderer((EntityType)TFEntities.SWARM_SPIDER, SwarmSpiderRenderer::new);
        event.registerEntityRenderer((EntityType)TFEntities.KING_SPIDER, KingSpiderRenderer::new);
        event.registerEntityRenderer((EntityType)TFEntities.CARMINITE_BROODLING, CarminiteBroodlingRenderer::new);
        event.registerEntityRenderer((EntityType)TFEntities.HEDGE_SPIDER, HedgeSpiderRenderer::new);
        event.registerEntityRenderer((EntityType)TFEntities.REDCAP_SAPPER, m -> new TFBipedRenderer(m, (HumanoidModel)(legacy.getAsBoolean() ? new RedcapLegacyModel(m.m_174023_(TFModelLayers.LEGACY_REDCAP)) : new RedcapModel(m.m_174023_(TFModelLayers.REDCAP))), new RedcapModel(m.m_174023_(TFModelLayers.REDCAP_ARMOR_INNER)), new RedcapModel(m.m_174023_(TFModelLayers.REDCAP_ARMOR_OUTER)), 0.4f, "redcapsapper.png"));
        event.registerEntityRenderer((EntityType)TFEntities.MAZE_SLIME, m -> new MazeSlimeRenderer(m, 0.625f));
        event.registerEntityRenderer((EntityType)TFEntities.YETI, m -> new TFBipedRenderer(m, new YetiModel(m.m_174023_(TFModelLayers.YETI)), 0.625f, "yeti2.png"));
        event.registerEntityRenderer((EntityType)TFEntities.PROTECTION_BOX, ProtectionBoxRenderer::new);
        event.registerEntityRenderer((EntityType)TFEntities.ALPHA_YETI, m -> new TFBipedRenderer(m, new AlphaYetiModel(m.m_174023_(TFModelLayers.ALPHA_YETI)), 1.75f, "yetialpha.png"));
        event.registerEntityRenderer((EntityType)TFEntities.WINTER_WOLF, WinterWolfRenderer::new);
        event.registerEntityRenderer((EntityType)TFEntities.SNOW_GUARDIAN, m -> new SnowGuardianRenderer(m, new NoopModel<SnowGuardian>(m.m_174023_(TFModelLayers.NOOP))));
        event.registerEntityRenderer((EntityType)TFEntities.STABLE_ICE_CORE, m -> new StableIceCoreRenderer(m, new StableIceCoreModel(m.m_174023_(TFModelLayers.STABLE_ICE_CORE))));
        event.registerEntityRenderer((EntityType)TFEntities.UNSTABLE_ICE_CORE, m -> new UnstableIceCoreRenderer(m, new UnstableIceCoreModel(m.m_174023_(TFModelLayers.UNSTABLE_ICE_CORE))));
        event.registerEntityRenderer((EntityType)TFEntities.SNOW_QUEEN, m -> legacy.getAsBoolean() ? new LegacySnowQueenRenderer(m, new SnowQueenLegacyModel(m.m_174023_(TFModelLayers.LEGACY_SNOW_QUEEN))) : new SnowQueenRenderer(m, new SnowQueenModel(m.m_174023_(TFModelLayers.SNOW_QUEEN))));
        event.registerEntityRenderer((EntityType)TFEntities.TROLL, m -> new TFBipedRenderer(m, legacy.getAsBoolean() ? new TrollLegacyModel(m.m_174023_(TFModelLayers.LEGACY_TROLL)) : new TrollModel(m.m_174023_(TFModelLayers.TROLL)), 0.625f, "troll.png"));
        event.registerEntityRenderer((EntityType)TFEntities.GIANT_MINER, TFGiantRenderer::new);
        event.registerEntityRenderer((EntityType)TFEntities.ARMORED_GIANT, TFGiantRenderer::new);
        event.registerEntityRenderer((EntityType)TFEntities.ICE_CRYSTAL, IceCrystalRenderer::new);
        event.registerEntityRenderer((EntityType)TFEntities.CHAIN_BLOCK, BlockChainRenderer::new);
        event.registerEntityRenderer((EntityType)TFEntities.CUBE_OF_ANNIHILATION, CubeOfAnnihilationRenderer::new);
        event.registerEntityRenderer((EntityType)TFEntities.HARBINGER_CUBE, HarbingerCubeRenderer::new);
        event.registerEntityRenderer((EntityType)TFEntities.ADHERENT, AdherentRenderer::new);
        event.registerEntityRenderer((EntityType)TFEntities.ROVING_CUBE, RovingCubeRenderer::new);
        event.registerEntityRenderer((EntityType)TFEntities.RISING_ZOMBIE, m -> new TFBipedRenderer(m, (HumanoidModel)new RisingZombieModel(m.m_174023_(TFModelLayers.RISING_ZOMBIE)), (HumanoidModel)new RisingZombieModel(m.m_174023_(ModelLayers.f_171226_)), (HumanoidModel)new RisingZombieModel(m.m_174023_(ModelLayers.f_171227_)), 0.5f, "textures/entity/zombie/zombie.png"));
        event.registerEntityRenderer((EntityType)TFEntities.PLATEAU_BOSS, NoopRenderer::new);
        event.registerEntityRenderer((EntityType)TFEntities.NATURE_BOLT, ThrownItemRenderer::new);
        event.registerEntityRenderer((EntityType)TFEntities.LICH_BOLT, c -> new CustomProjectileTextureRenderer(c, TwilightForestMod.prefix("textures/items/twilight_orb.png")));
        event.registerEntityRenderer((EntityType)TFEntities.WAND_BOLT, c -> new CustomProjectileTextureRenderer(c, TwilightForestMod.prefix("textures/items/twilight_orb.png")));
        event.registerEntityRenderer((EntityType)TFEntities.TOME_BOLT, ThrownItemRenderer::new);
        event.registerEntityRenderer((EntityType)TFEntities.HYDRA_MORTAR, HydraMortarRenderer::new);
        event.registerEntityRenderer((EntityType)TFEntities.SLIME_BLOB, ThrownItemRenderer::new);
        event.registerEntityRenderer((EntityType)TFEntities.CICADA_SHOT, CicadaShotRenderer::new);
        event.registerEntityRenderer((EntityType)TFEntities.MOONWORM_SHOT, MoonwormShotRenderer::new);
        event.registerEntityRenderer((EntityType)TFEntities.CHARM_EFFECT, ThrownItemRenderer::new);
        event.registerEntityRenderer((EntityType)TFEntities.LICH_BOMB, ThrownItemRenderer::new);
        event.registerEntityRenderer((EntityType)TFEntities.THROWN_WEP, ThrownWepRenderer::new);
        event.registerEntityRenderer((EntityType)TFEntities.FALLING_ICE, FallingIceRenderer::new);
        event.registerEntityRenderer((EntityType)TFEntities.THROWN_ICE, ThrownIceRenderer::new);
        event.registerEntityRenderer((EntityType)TFEntities.ICE_SNOWBALL, ThrownItemRenderer::new);
        event.registerEntityRenderer((EntityType)TFEntities.SLIDER, SlideBlockRenderer::new);
        event.registerEntityRenderer((EntityType)TFEntities.SEEKER_ARROW, DefaultArrowRenderer::new);
        event.registerEntityRenderer((EntityType)TFEntities.ICE_ARROW, DefaultArrowRenderer::new);
    }
    
    static {
        ON_ICE = SpawnPlacements.Type.create("TF_ON_ICE", (world, pos, entityType) -> {
            final BlockState state = world.m_8055_(pos.m_7495_());
            final Block block = state.m_60734_();
            final Material material = state.m_60767_();
            final BlockPos up = pos.m_7494_();
            return (material == Material.f_76276_ || material == Material.f_76316_) && block != Blocks.f_50752_ && block != Blocks.f_50375_ && NaturalSpawner.m_47056_((BlockGetter)world, pos, world.m_8055_(pos), world.m_6425_(pos), entityType) && NaturalSpawner.m_47056_((BlockGetter)world, up, world.m_8055_(up), world.m_6425_(up), entityType);
        });
        CLOUDS = SpawnPlacements.Type.create("CLOUD_DWELLERS", (world, pos, entityType) -> {
            final BlockState state = world.m_8055_(pos.m_7495_());
            final Block block = state.m_60734_();
            final BlockPos up = pos.m_7494_();
            return (block == TFBlocks.WISPY_CLOUD.get() || block == TFBlocks.FLUFFY_CLOUD.get()) && block != Blocks.f_50752_ && block != Blocks.f_50375_ && NaturalSpawner.m_47056_((BlockGetter)world, pos, world.m_8055_(pos), world.m_6425_(pos), entityType) && NaturalSpawner.m_47056_((BlockGetter)world, up, world.m_8055_(up), world.m_6425_(up), entityType);
        });
        ALL = new ArrayList<EntityType<?>>();
        BOAR = make(TFEntityNames.BOAR, (EntityType.EntityFactory<Boar>)Boar::new, MobCategory.CREATURE, 0.9f, 0.9f);
        BIGHORN_SHEEP = make(TFEntityNames.BIGHORN_SHEEP, (EntityType.EntityFactory<Bighorn>)Bighorn::new, MobCategory.CREATURE, 0.9f, 1.3f);
        DEER = make(TFEntityNames.DEER, (EntityType.EntityFactory<Deer>)Deer::new, MobCategory.CREATURE, 0.7f, 1.8f);
        REDCAP = make(TFEntityNames.REDCAP, (EntityType.EntityFactory<Redcap>)Redcap::new, MobCategory.MONSTER, 0.9f, 1.4f);
        SWARM_SPIDER = make(TFEntityNames.SWARM_SPIDER, (EntityType.EntityFactory<SwarmSpider>)SwarmSpider::new, MobCategory.MONSTER, 0.8f, 0.4f);
        NAGA = make(TFEntityNames.NAGA, (EntityType.EntityFactory<Naga>)Naga::new, MobCategory.MONSTER, 1.75f, 3.0f, true);
        SKELETON_DRUID = make(TFEntityNames.SKELETON_DRUID, (EntityType.EntityFactory<SkeletonDruid>)SkeletonDruid::new, MobCategory.MONSTER, 0.6f, 1.99f);
        HOSTILE_WOLF = make(TFEntityNames.HOSTILE_WOLF, (EntityType.EntityFactory<HostileWolf>)HostileWolf::new, MobCategory.MONSTER, 0.6f, 0.85f);
        WRAITH = make(TFEntityNames.WRAITH, (EntityType.EntityFactory<Wraith>)Wraith::new, MobCategory.MONSTER, 0.6f, 1.8f, true);
        HEDGE_SPIDER = make(TFEntityNames.HEDGE_SPIDER, (EntityType.EntityFactory<HedgeSpider>)HedgeSpider::new, MobCategory.MONSTER, 1.4f, 0.9f);
        HYDRA = make(TFEntityNames.HYDRA, (EntityType.EntityFactory<Hydra>)Hydra::new, MobCategory.MONSTER, 16.0f, 12.0f, true);
        LICH = make(TFEntityNames.LICH, (EntityType.EntityFactory<Lich>)Lich::new, MobCategory.MONSTER, 1.1f, 2.1f, true);
        PENGUIN = make(TFEntityNames.PENGUIN, (EntityType.EntityFactory<Penguin>)Penguin::new, MobCategory.CREATURE, 0.5f, 0.9f);
        LICH_MINION = make(TFEntityNames.LICH_MINION, (EntityType.EntityFactory<LichMinion>)LichMinion::new, MobCategory.MONSTER, 0.6f, 1.95f);
        LOYAL_ZOMBIE = make(TFEntityNames.LOYAL_ZOMBIE, (EntityType.EntityFactory<LoyalZombie>)LoyalZombie::new, MobCategory.MONSTER, 0.6f, 1.8f);
        TINY_BIRD = make(TFEntityNames.TINY_BIRD, (EntityType.EntityFactory<TinyBird>)TinyBird::new, MobCategory.CREATURE, 0.3f, 0.3f);
        SQUIRREL = make(TFEntityNames.SQUIRREL, (EntityType.EntityFactory<Squirrel>)Squirrel::new, MobCategory.CREATURE, 0.3f, 0.5f);
        DWARF_RABBIT = make(TFEntityNames.DWARF_RABBIT, (EntityType.EntityFactory<DwarfRabbit>)DwarfRabbit::new, MobCategory.CREATURE, 0.4f, 0.4f);
        RAVEN = make(TFEntityNames.RAVEN, (EntityType.EntityFactory<Raven>)Raven::new, MobCategory.CREATURE, 0.3f, 0.5f);
        QUEST_RAM = make(TFEntityNames.QUEST_RAM, (EntityType.EntityFactory<QuestRam>)QuestRam::new, MobCategory.CREATURE, 1.25f, 2.9f);
        KOBOLD = make(TFEntityNames.KOBOLD, (EntityType.EntityFactory<Kobold>)Kobold::new, MobCategory.MONSTER, 0.8f, 1.1f);
        MOSQUITO_SWARM = make(TFEntityNames.MOSQUITO_SWARM, (EntityType.EntityFactory<MosquitoSwarm>)MosquitoSwarm::new, MobCategory.MONSTER, 0.7f, 1.9f);
        DEATH_TOME = make(TFEntityNames.DEATH_TOME, (EntityType.EntityFactory<DeathTome>)DeathTome::new, MobCategory.MONSTER, 0.6f, 1.8f);
        MINOTAUR = make(TFEntityNames.MINOTAUR, (EntityType.EntityFactory<Minotaur>)Minotaur::new, MobCategory.MONSTER, 0.6f, 2.1f);
        MINOSHROOM = make(TFEntityNames.MINOSHROOM, (EntityType.EntityFactory<Minoshroom>)Minoshroom::new, MobCategory.MONSTER, 1.49f, 2.5f);
        FIRE_BEETLE = make(TFEntityNames.FIRE_BEETLE, (EntityType.EntityFactory<FireBeetle>)FireBeetle::new, MobCategory.MONSTER, 1.1f, 0.5f, true);
        SLIME_BEETLE = make(TFEntityNames.SLIME_BEETLE, (EntityType.EntityFactory<SlimeBeetle>)SlimeBeetle::new, MobCategory.MONSTER, 0.9f, 0.5f);
        PINCH_BEETLE = make(TFEntityNames.PINCH_BEETLE, (EntityType.EntityFactory<PinchBeetle>)PinchBeetle::new, MobCategory.MONSTER, 1.2f, 0.5f);
        MAZE_SLIME = make(TFEntityNames.MAZE_SLIME, (EntityType.EntityFactory<MazeSlime>)MazeSlime::new, MobCategory.MONSTER, 2.04f, 2.04f);
        REDCAP_SAPPER = make(TFEntityNames.REDCAP_SAPPER, (EntityType.EntityFactory<RedcapSapper>)RedcapSapper::new, MobCategory.MONSTER, 0.9f, 1.4f);
        MIST_WOLF = make(TFEntityNames.MIST_WOLF, (EntityType.EntityFactory<MistWolf>)MistWolf::new, MobCategory.MONSTER, 1.4f, 1.9f);
        KING_SPIDER = make(TFEntityNames.KING_SPIDER, (EntityType.EntityFactory<KingSpider>)KingSpider::new, MobCategory.MONSTER, 1.6f, 1.6f);
        CARMINITE_GHASTLING = make(TFEntityNames.CARMINITE_GHASTLING, (EntityType.EntityFactory<CarminiteGhastling>)CarminiteGhastling::new, MobCategory.MONSTER, 1.1f, 1.5f);
        CARMINITE_GHASTGUARD = make(TFEntityNames.CARMINITE_GHASTGUARD, (EntityType.EntityFactory<CarminiteGhastguard>)CarminiteGhastguard::new, MobCategory.MONSTER, 4.0f, 6.0f);
        CARMINITE_GOLEM = make(TFEntityNames.CARMINITE_GOLEM, (EntityType.EntityFactory<CarminiteGolem>)CarminiteGolem::new, MobCategory.MONSTER, 1.4f, 2.9f);
        TOWERWOOD_BORER = make(TFEntityNames.TOWERWOOD_BORER, (EntityType.EntityFactory<TowerwoodBorer>)TowerwoodBorer::new, MobCategory.MONSTER, 0.4f, 0.3f);
        CARMINITE_BROODLING = make(TFEntityNames.CARMINITE_BROODLING, (EntityType.EntityFactory<TowerBroodling>)TowerBroodling::new, MobCategory.MONSTER, 0.7f, 0.5f);
        UR_GHAST = make(TFEntityNames.UR_GHAST, (EntityType.EntityFactory<UrGhast>)UrGhast::new, MobCategory.MONSTER, 14.0f, 18.0f, true);
        BLOCKCHAIN_GOBLIN = make(TFEntityNames.BLOCKCHAIN_GOBLIN, (EntityType.EntityFactory<BlockChainGoblin>)BlockChainGoblin::new, MobCategory.MONSTER, 0.9f, 1.4f);
        UPPER_GOBLIN_KNIGHT = make(TFEntityNames.UPPER_GOBLIN_KNIGHT, (EntityType.EntityFactory<UpperGoblinKnight>)UpperGoblinKnight::new, MobCategory.MONSTER, 1.1f, 1.3f);
        LOWER_GOBLIN_KNIGHT = make(TFEntityNames.LOWER_GOBLIN_KNIGHT, (EntityType.EntityFactory<LowerGoblinKnight>)LowerGoblinKnight::new, MobCategory.MONSTER, 0.7f, 1.1f);
        HELMET_CRAB = make(TFEntityNames.HELMET_CRAB, (EntityType.EntityFactory<HelmetCrab>)HelmetCrab::new, MobCategory.MONSTER, 0.8f, 1.1f);
        KNIGHT_PHANTOM = make(TFEntityNames.KNIGHT_PHANTOM, (EntityType.EntityFactory<KnightPhantom>)KnightPhantom::new, MobCategory.MONSTER, 1.5f, 3.0f);
        YETI = make(TFEntityNames.YETI, (EntityType.EntityFactory<Yeti>)Yeti::new, MobCategory.MONSTER, 1.4f, 2.4f);
        ALPHA_YETI = make(TFEntityNames.ALPHA_YETI, (EntityType.EntityFactory<AlphaYeti>)AlphaYeti::new, MobCategory.MONSTER, 3.8f, 5.0f, true);
        WINTER_WOLF = make(TFEntityNames.WINTER_WOLF, (EntityType.EntityFactory<WinterWolf>)WinterWolf::new, MobCategory.MONSTER, 1.4f, 1.9f);
        SNOW_GUARDIAN = make(TFEntityNames.SNOW_GUARDIAN, (EntityType.EntityFactory<SnowGuardian>)SnowGuardian::new, MobCategory.MONSTER, 0.6f, 1.8f);
        STABLE_ICE_CORE = make(TFEntityNames.STABLE_ICE_CORE, (EntityType.EntityFactory<StableIceCore>)StableIceCore::new, MobCategory.MONSTER, 0.8f, 1.8f);
        UNSTABLE_ICE_CORE = make(TFEntityNames.UNSTABLE_ICE_CORE, (EntityType.EntityFactory<UnstableIceCore>)UnstableIceCore::new, MobCategory.MONSTER, 0.8f, 1.8f);
        SNOW_QUEEN = make(TFEntityNames.SNOW_QUEEN, (EntityType.EntityFactory<SnowQueen>)SnowQueen::new, MobCategory.MONSTER, 0.7f, 2.2f, true);
        TROLL = make(TFEntityNames.TROLL, (EntityType.EntityFactory<Troll>)Troll::new, MobCategory.MONSTER, 1.4f, 2.4f);
        GIANT_MINER = make(TFEntityNames.GIANT_MINER, (EntityType.EntityFactory<GiantMiner>)GiantMiner::new, MobCategory.MONSTER, 2.4f, 7.2f);
        ARMORED_GIANT = make(TFEntityNames.ARMORED_GIANT, (EntityType.EntityFactory<ArmoredGiant>)ArmoredGiant::new, MobCategory.MONSTER, 2.4f, 7.2f);
        ICE_CRYSTAL = make(TFEntityNames.ICE_CRYSTAL, (EntityType.EntityFactory<IceCrystal>)IceCrystal::new, MobCategory.MONSTER, 0.6f, 1.8f);
        HARBINGER_CUBE = make(TFEntityNames.HARBINGER_CUBE, (EntityType.EntityFactory<HarbingerCube>)HarbingerCube::new, MobCategory.MONSTER, 1.9f, 2.4f, true);
        ADHERENT = make(TFEntityNames.ADHERENT, (EntityType.EntityFactory<Adherent>)Adherent::new, MobCategory.MONSTER, 0.8f, 2.2f);
        ROVING_CUBE = make(TFEntityNames.ROVING_CUBE, (EntityType.EntityFactory<RovingCube>)RovingCube::new, MobCategory.MONSTER, 1.2f, 2.1f);
        PLATEAU_BOSS = make(TFEntityNames.PLATEAU_BOSS, (EntityType.EntityFactory<PlateauBoss>)PlateauBoss::new, MobCategory.MONSTER, 1.0f, 1.0f, true);
        NATURE_BOLT = build(TFEntityNames.NATURE_BOLT, (EntityType.Builder<NatureBolt>)makeCastedBuilder((Class<E>)NatureBolt.class, (EntityType.EntityFactory<E>)NatureBolt::new, 0.25f, 0.25f, 150, 5));
        LICH_BOLT = build(TFEntityNames.LICH_BOLT, (EntityType.Builder<LichBolt>)makeCastedBuilder((Class<E>)LichBolt.class, (EntityType.EntityFactory<E>)LichBolt::new, 0.25f, 0.25f, 150, 2));
        WAND_BOLT = build(TFEntityNames.WAND_BOLT, (EntityType.Builder<TwilightWandBolt>)makeCastedBuilder((Class<E>)TwilightWandBolt.class, (EntityType.EntityFactory<E>)TwilightWandBolt::new, 0.25f, 0.25f, 150, 5));
        TOME_BOLT = build(TFEntityNames.TOME_BOLT, (EntityType.Builder<TomeBolt>)makeCastedBuilder((Class<E>)TomeBolt.class, (EntityType.EntityFactory<E>)TomeBolt::new, 0.25f, 0.25f, 150, 5));
        HYDRA_MORTAR = build(TFEntityNames.HYDRA_MORTAR, (EntityType.Builder<HydraMortarHead>)makeCastedBuilder((Class<E>)HydraMortarHead.class, (EntityType.EntityFactory<E>)HydraMortarHead::new, 0.75f, 0.75f, 150, 3));
        LICH_BOMB = build(TFEntityNames.LICH_BOMB, (EntityType.Builder<LichBomb>)makeCastedBuilder((Class<E>)LichBomb.class, (EntityType.EntityFactory<E>)LichBomb::new, 0.25f, 0.25f, 150, 3));
        MOONWORM_SHOT = build(TFEntityNames.MOONWORM_SHOT, (EntityType.Builder<MoonwormShot>)makeCastedBuilder((Class<E>)MoonwormShot.class, (EntityType.EntityFactory<E>)MoonwormShot::new, 0.25f, 0.25f, 150, 3));
        CICADA_SHOT = build(TFEntityNames.CICADA_SHOT, (EntityType.Builder<CicadaShot>)makeCastedBuilder((Class<E>)CicadaShot.class, (EntityType.EntityFactory<E>)CicadaShot::new, 0.25f, 0.25f, 150, 3));
        SLIME_BLOB = build(TFEntityNames.SLIME_BLOB, (EntityType.Builder<SlimeProjectile>)makeCastedBuilder((Class<E>)SlimeProjectile.class, (EntityType.EntityFactory<E>)SlimeProjectile::new, 0.25f, 0.25f, 150, 3));
        CHARM_EFFECT = make(TFEntityNames.CHARM_EFFECT, (EntityType.EntityFactory<CharmEffect>)CharmEffect::new, MobCategory.MISC, 0.25f, 0.25f);
        THROWN_WEP = make(TFEntityNames.THROWN_WEP, (EntityType.EntityFactory<ThrownWep>)ThrownWep::new, MobCategory.MISC, 0.5f, 0.5f);
        FALLING_ICE = make(TFEntityNames.FALLING_ICE, (EntityType.EntityFactory<FallingIce>)FallingIce::new, MobCategory.MISC, 2.98f, 2.98f, true);
        THROWN_ICE = build(TFEntityNames.THROWN_ICE, (EntityType.Builder<IceBomb>)makeCastedBuilder((Class<E>)IceBomb.class, (EntityType.EntityFactory<E>)IceBomb::new, 1.0f, 1.0f, 80, 2), true);
        SEEKER_ARROW = build(TFEntityNames.SEEKER_ARROW, (EntityType.Builder<SeekerArrow>)makeCastedBuilder((Class<E>)SeekerArrow.class, (EntityType.EntityFactory<E>)SeekerArrow::new, 0.5f, 0.5f, 150, 1));
        ICE_ARROW = build(TFEntityNames.ICE_ARROW, (EntityType.Builder<IceArrow>)makeCastedBuilder((Class<E>)IceArrow.class, (EntityType.EntityFactory<E>)IceArrow::new, 0.5f, 0.5f, 150, 1));
        ICE_SNOWBALL = build(TFEntityNames.ICE_SNOWBALL, (EntityType.Builder<IceSnowball>)makeCastedBuilder((Class<E>)IceSnowball.class, (EntityType.EntityFactory<E>)IceSnowball::new, 0.25f, 0.25f, 150, 3));
        CHAIN_BLOCK = build(TFEntityNames.CHAIN_BLOCK, (EntityType.Builder<ChainBlock>)makeCastedBuilder((Class<E>)ChainBlock.class, (EntityType.EntityFactory<E>)ChainBlock::new, 0.6f, 0.6f, 80, 1), true);
        CUBE_OF_ANNIHILATION = build(TFEntityNames.CUBE_OF_ANNIHILATION, (EntityType.Builder<CubeOfAnnihilation>)makeCastedBuilder((Class<E>)CubeOfAnnihilation.class, (EntityType.EntityFactory<E>)CubeOfAnnihilation::new, 1.0f, 1.0f, 80, 1), true);
        SLIDER = build(TFEntityNames.SLIDER, (EntityType.Builder<SlideBlock>)makeCastedBuilder((Class<E>)SlideBlock.class, (EntityType.EntityFactory<E>)SlideBlock::new, 0.98f, 0.98f, 80, 1));
        RISING_ZOMBIE = make(TFEntityNames.RISING_ZOMBIE, (EntityType.EntityFactory<RisingZombie>)RisingZombie::new, MobCategory.MONSTER, 0.6f, 1.95f);
        PROTECTION_BOX = build(TFEntityNames.PROTECTION_BOX, (EntityType.Builder<ProtectionBox>)makeCastedBuilder(ProtectionBox.class, (EntityType.EntityFactory<ProtectionBox>)ProtectionBox::new, 0.0f, 0.0f, 80, 3).m_20716_().m_20698_());
    }
    
    @OnlyIn(Dist.CLIENT)
    public static class BakedMultiPartRenderers
    {
        private static final Map<ResourceLocation, EntityRenderer<?>> renderers;
        
        public static void bakeMultiPartRenderers(final EntityRendererProvider.Context context) {
            final BooleanSupplier legacy = () -> Minecraft.m_91087_().m_91099_().m_10523_().contains("builtin/twilight_forest_legacy_resources");
            BakedMultiPartRenderers.renderers.put(TFPart.RENDERER, new NoopRenderer<Object>(context));
            BakedMultiPartRenderers.renderers.put(HydraHead.RENDERER, legacy.getAsBoolean() ? new LegacyHydraHeadRenderer(context) : new HydraHeadRenderer(context));
            BakedMultiPartRenderers.renderers.put(HydraNeck.RENDERER, legacy.getAsBoolean() ? new LegacyHydraNeckRenderer(context) : new HydraNeckRenderer(context));
            BakedMultiPartRenderers.renderers.put(SnowQueenIceShield.RENDERER, new SnowQueenIceShieldLayer<Object>(context));
            BakedMultiPartRenderers.renderers.put(NagaSegment.RENDERER, legacy.getAsBoolean() ? new LegacyNagaSegmentRenderer<Object>(context) : new NagaSegmentRenderer<Object>(context));
        }
        
        public static EntityRenderer<?> lookup(final ResourceLocation location) {
            return BakedMultiPartRenderers.renderers.get(location);
        }
        
        static {
            renderers = new HashMap<ResourceLocation, EntityRenderer<?>>();
        }
    }
}
