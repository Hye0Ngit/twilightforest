// 
// Decompiled by Procyon v0.6-prerelease
// 

package twilightforest.world.registration;

import twilightforest.TFSounds;
import net.minecraft.world.level.levelgen.feature.configurations.SimpleRandomFeatureConfiguration;
import net.minecraft.world.level.levelgen.feature.stateproviders.WeightedStateProvider;
import net.minecraft.util.random.SimpleWeightedRandomList;
import java.util.Set;
import com.google.common.collect.ImmutableSet;
import net.minecraft.world.level.block.Blocks;
import net.minecraft.world.level.levelgen.feature.configurations.OreConfiguration;
import net.minecraft.world.level.levelgen.feature.configurations.NoneFeatureConfiguration;
import twilightforest.world.components.feature.config.HollowLogConfig;
import twilightforest.world.components.feature.config.ThornsConfig;
import twilightforest.world.components.feature.config.SpikeConfig;
import net.minecraft.util.valueproviders.ConstantInt;
import net.minecraft.util.valueproviders.IntProvider;
import net.minecraft.world.level.levelgen.feature.configurations.DiskConfiguration;
import net.minecraft.util.valueproviders.UniformInt;
import twilightforest.world.components.placements.StructureClearingConfig;
import net.minecraft.world.level.levelgen.placement.WaterDepthThresholdConfiguration;
import net.minecraft.world.level.levelgen.placement.FrequencyWithExtraChanceDecoratorConfiguration;
import java.util.List;
import net.minecraft.world.level.levelgen.feature.configurations.RandomFeatureConfiguration;
import net.minecraft.world.level.levelgen.heightproviders.HeightProvider;
import net.minecraft.world.level.levelgen.feature.configurations.RangeDecoratorConfiguration;
import net.minecraft.world.level.levelgen.heightproviders.BiasedToBottomHeight;
import net.minecraft.world.level.levelgen.VerticalAnchor;
import net.minecraft.world.level.levelgen.feature.configurations.DecoratorConfiguration;
import net.minecraft.world.level.levelgen.placement.ChanceDecoratorConfiguration;
import net.minecraft.world.level.levelgen.placement.FeatureDecorator;
import net.minecraft.world.level.levelgen.feature.configurations.BlockStateConfiguration;
import net.minecraft.world.level.levelgen.feature.configurations.RandomBooleanFeatureConfiguration;
import twilightforest.TwilightForestMod;
import net.minecraft.data.worldgen.Features;
import net.minecraft.world.level.levelgen.feature.blockplacers.SimpleBlockPlacer;
import net.minecraft.world.level.levelgen.feature.configurations.FeatureConfiguration;
import net.minecraft.world.level.levelgen.feature.blockplacers.BlockPlacer;
import net.minecraft.world.level.levelgen.feature.stateproviders.BlockStateProvider;
import net.minecraft.world.level.levelgen.feature.blockplacers.DoublePlantPlacer;
import net.minecraft.world.level.levelgen.feature.stateproviders.SimpleStateProvider;
import net.minecraft.sounds.Music;
import java.util.function.Supplier;
import com.google.common.collect.ImmutableList;
import net.minecraft.world.level.levelgen.feature.configurations.RandomPatchConfiguration;
import net.minecraft.world.level.levelgen.placement.ConfiguredDecorator;
import twilightforest.world.components.feature.config.TFTreeFeatureConfig;
import net.minecraft.world.level.levelgen.feature.Feature;
import net.minecraft.world.level.levelgen.feature.configurations.TreeConfiguration;
import net.minecraft.world.level.levelgen.feature.ConfiguredFeature;

public final class ConfiguredFeatures
{
    public static final ConfiguredFeature<TreeConfiguration, ? extends Feature<?>> TWILIGHT_OAK_BASE;
    public static final ConfiguredFeature<TreeConfiguration, ? extends Feature<?>> SWAMPY_OAK_BASE;
    public static final ConfiguredFeature<TreeConfiguration, ? extends Feature<?>> CANOPY_TREE_BASE;
    public static final ConfiguredFeature<TreeConfiguration, ? extends Feature<?>> FIREFLY_CANOPY_TREE_BASE;
    public static final ConfiguredFeature<TreeConfiguration, ? extends Feature<?>> DEAD_CANOPY_TREE_BASE;
    public static final ConfiguredFeature<TreeConfiguration, ? extends Feature<?>> MANGROVE_TREE_BASE;
    public static final ConfiguredFeature<TreeConfiguration, ? extends Feature<?>> DARKWOOD_TREE_BASE;
    public static final ConfiguredFeature<TreeConfiguration, ? extends Feature<?>> HOMEGROWN_DARKWOOD_TREE_BASE;
    public static final ConfiguredFeature<TreeConfiguration, ? extends Feature<?>> DARKWOOD_LANTERN_TREE_BASE;
    public static final ConfiguredFeature<TFTreeFeatureConfig, ? extends Feature<?>> TIME_TREE_BASE;
    public static final ConfiguredFeature<TreeConfiguration, ? extends Feature<?>> TRANSFORM_TREE_BASE;
    public static final ConfiguredFeature<TFTreeFeatureConfig, ? extends Feature<?>> MINING_TREE_BASE;
    public static final ConfiguredFeature<TreeConfiguration, ? extends Feature<?>> SORT_TREE_BASE;
    public static final ConfiguredFeature<TFTreeFeatureConfig, ? extends Feature<?>> HOLLOW_TREE_BASE;
    public static final ConfiguredFeature<TreeConfiguration, ? extends Feature<?>> RAINBOW_OAK_TREE_BASE;
    public static final ConfiguredFeature<TreeConfiguration, ? extends Feature<?>> LARGE_RAINBOW_OAK_BASE;
    public static final ConfiguredFeature<TreeConfiguration, ? extends Feature<?>> BROWN_CANOPY_MUSHROOM_TREE_BASE;
    public static final ConfiguredFeature<TreeConfiguration, ? extends Feature<?>> RED_CANOPY_MUSHROOM_TREE_BASE;
    public static final ConfiguredFeature<TreeConfiguration, ? extends Feature<?>> MEGA_SPRUCE_NO_PODZOL_BASE;
    public static final ConfiguredFeature<TFTreeFeatureConfig, ? extends Feature<?>> LARGE_WINTER_TREE_BASE;
    private static final ConfiguredDecorator<?> DEFAULT_TREE_PLACEMENT;
    private static final ConfiguredDecorator<?> DEFAULT_TREE_PLACEMENT_SQUARED;
    public static final ConfiguredFeature<TreeConfiguration, ?> SNOW_SPRUCE;
    public static final ConfiguredFeature<?, ?> SNOW_SPRUCE_SNOWY;
    public static final ConfiguredFeature<TreeConfiguration, ? extends Feature<?>> OAK_DARK_FOREST;
    public static final ConfiguredFeature<TreeConfiguration, ? extends Feature<?>> BIRCH_DARK_FOREST;
    public static final ConfiguredFeature<?, ?> VANILLA_TF_OAK;
    public static final ConfiguredFeature<?, ?> VANILLA_TF_BIRCH;
    public static final ConfiguredFeature<?, ?> VANILLA_TF_BIG_MUSH;
    public static final ConfiguredFeature<?, ?> LAKE_LAVA;
    public static final ConfiguredFeature<?, ?> LAKE_WATER;
    public static final ConfiguredFeature<?, ?> CANOPY_TREES;
    public static final ConfiguredFeature<?, ?> DENSE_CANOPY_TREES;
    public static final ConfiguredFeature<?, ?> DEAD_CANOPY_TREES;
    public static final ConfiguredFeature<?, ?> MANGROVE_TREES;
    public static final ConfiguredFeature<?, ?> TWILIGHT_OAK_TREES;
    public static final ConfiguredFeature<?, ?> DENSE_TREES;
    public static final ConfiguredFeature<?, ?> SAVANNAH_OAK_TREES;
    public static final ConfiguredFeature<?, ?> SWAMPY_OAK_TREES;
    public static final ConfiguredFeature<?, ?> FIREFLY_FOREST_TREES;
    public static final ConfiguredFeature<?, ?> DARK_FOREST_TREES;
    public static final ConfiguredFeature<?, ?> DARKWOOD_TREES;
    public static final ConfiguredFeature<?, ?> HIGHLANDS_TREES;
    public static final ConfiguredFeature<?, ?> ENCHANTED_FOREST_TREES;
    public static final ConfiguredFeature<?, ?> SNOWY_FOREST_TREES;
    public static final ConfiguredFeature<?, ?> VANILLA_TF_TREES;
    public static final ConfiguredFeature<?, ?> SIMPLE_WELL;
    public static final ConfiguredFeature<?, ?> FANCY_WELL;
    public static final ConfiguredFeature<?, ?> WELL_PLACER;
    public static final ConfiguredFeature<?, ?> DRUID_HUT;
    public static final ConfiguredFeature<?, ?> GRAVEYARD;
    public static final ConfiguredFeature<?, ?> BIG_MUSHGLOOM;
    public static final ConfiguredFeature<?, ?> FALLEN_LEAVES;
    public static final ConfiguredFeature<?, ?> FIDDLEHEAD;
    public static final ConfiguredFeature<?, ?> FIRE_JET;
    public static final ConfiguredFeature<?, ?> FOUNDATION;
    public static final ConfiguredFeature<?, ?> GROVE_RUINS;
    public static final ConfiguredFeature<?, ?> HOLLOW_LOG;
    public static final ConfiguredFeature<?, ?> HOLLOW_STUMP;
    public static final ConfiguredFeature<?, ?> HUGE_LILY_PAD;
    public static final ConfiguredFeature<?, ?> HUGE_WATER_LILY;
    public static final ConfiguredFeature<?, ?> CICADA_LAMPPOST;
    public static final ConfiguredFeature<?, ?> FIREFLY_LAMPPOST;
    public static final ConfiguredFeature<?, ?> LAMPPOST_PLACER;
    public static final ConfiguredFeature<?, ?> MONOLITH;
    public static final ConfiguredFeature<?, ?> MUSHGLOOM_CLUSTER;
    public static final ConfiguredFeature<?, ?> MYCELIUM_BLOB;
    public static final ConfiguredFeature<?, ?> OUTSIDE_STALAGMITE;
    public static final ConfiguredFeature<?, ?> PLANT_ROOTS;
    public static final ConfiguredFeature<?, ?> PUMPKIN_LAMPPOST;
    public static final ConfiguredFeature<?, ?> SMOKER;
    public static final ConfiguredFeature<?, ?> STONE_CIRCLE;
    public static final ConfiguredFeature<?, ?> THORNS;
    public static final ConfiguredFeature<?, ?> TORCH_BERRIES;
    public static final ConfiguredFeature<?, ?> TROLL_ROOTS;
    public static final ConfiguredFeature<?, ?> VANILLA_ROOTS;
    public static final ConfiguredFeature<?, ?> WEBS;
    public static final ConfiguredFeature<?, ?> WOOD_ROOTS_SPREAD;
    public static final ConfiguredFeature<?, ?> SNOW_UNDER_TREES;
    public static final ConfiguredFeature<?, ?> TF_OAK_FALLEN_LOG;
    public static final ConfiguredFeature<?, ?> CANOPY_FALLEN_LOG;
    public static final ConfiguredFeature<?, ?> MANGROVE_FALLEN_LOG;
    public static final ConfiguredFeature<?, ?> OAK_FALLEN_LOG;
    public static final ConfiguredFeature<?, ?> SPRUCE_FALLEN_LOG;
    public static final ConfiguredFeature<?, ?> BIRCH_FALLEN_LOG;
    public static final ConfiguredFeature<?, ?> DEFAULT_FALLEN_LOGS;
    public static final ConfiguredFeature<?, ?> SMALL_LOG;
    public static final ConfiguredFeature<?, ?> SMALL_GRANITE;
    public static final ConfiguredFeature<?, ?> SMALL_DIORITE;
    public static final ConfiguredFeature<?, ?> SMALL_ANDESITE;
    public static final ConfiguredFeature<?, ?> DARK_MUSHGLOOMS;
    public static final ConfiguredFeature<?, ?> DARK_PUMPKINS;
    public static final ConfiguredFeature<?, ?> DARK_GRASS;
    public static final ConfiguredFeature<?, ?> DARK_FERNS;
    public static final ConfiguredFeature<?, ?> DARK_MUSHROOMS;
    public static final ConfiguredFeature<?, ?> DARK_DEAD_BUSHES;
    public static final ConfiguredFeature<?, ?> CANOPY_MUSHROOMS_SPARSE;
    public static final ConfiguredFeature<?, ?> CANOPY_MUSHROOMS_DENSE;
    public static final ConfiguredFeature<?, ?> HOLLOW_TREE_PLACER;
    public static final RandomPatchConfiguration SMALL_FLOWER_CONFIG;
    public static final ImmutableList<Supplier<ConfiguredFeature<?, ?>>> FOREST_GRASS;
    public static final ImmutableList<Supplier<ConfiguredFeature<?, ?>>> OTHER_GRASS;
    public static final ConfiguredFeature<?, ?> GRASS_PLACER;
    public static final ConfiguredFeature<?, ?> FOREST_GRASS_PLACER;
    public static final ConfiguredFeature<?, ?> FLOWER_PLACER;
    public static final Music TFMUSICTYPE;
    
    static {
        TWILIGHT_OAK_BASE = TwilightFeatures.registerWorldFeature(TwilightForestMod.prefix("tree/base/twilight_oak"), (net.minecraft.world.level.levelgen.feature.ConfiguredFeature<TreeConfiguration, ? extends Feature<?>>)Feature.f_65760_.m_65815_((FeatureConfiguration)TreeConfigurations.TWILIGHT_OAK));
        SWAMPY_OAK_BASE = TwilightFeatures.registerWorldFeature(TwilightForestMod.prefix("tree/base/swampy_oak"), (net.minecraft.world.level.levelgen.feature.ConfiguredFeature<TreeConfiguration, ? extends Feature<?>>)Feature.f_65760_.m_65815_((FeatureConfiguration)TreeConfigurations.SWAMPY_OAK));
        CANOPY_TREE_BASE = TwilightFeatures.registerWorldFeature(TwilightForestMod.prefix("tree/base/canopy_tree"), (net.minecraft.world.level.levelgen.feature.ConfiguredFeature<TreeConfiguration, ? extends Feature<?>>)Feature.f_65760_.m_65815_((FeatureConfiguration)TreeConfigurations.CANOPY_TREE));
        FIREFLY_CANOPY_TREE_BASE = TwilightFeatures.registerWorldFeature(TwilightForestMod.prefix("tree/base/firefly_canopy_tree"), (net.minecraft.world.level.levelgen.feature.ConfiguredFeature<TreeConfiguration, ? extends Feature<?>>)Feature.f_65760_.m_65815_((FeatureConfiguration)TreeConfigurations.CANOPY_TREE_FIREFLY));
        DEAD_CANOPY_TREE_BASE = TwilightFeatures.registerWorldFeature(TwilightForestMod.prefix("tree/base/dead_canopy_tree"), (net.minecraft.world.level.levelgen.feature.ConfiguredFeature<TreeConfiguration, ? extends Feature<?>>)Feature.f_65760_.m_65815_((FeatureConfiguration)TreeConfigurations.CANOPY_TREE_DEAD));
        MANGROVE_TREE_BASE = TwilightFeatures.registerWorldFeature(TwilightForestMod.prefix("tree/base/mangrove_tree"), (net.minecraft.world.level.levelgen.feature.ConfiguredFeature<TreeConfiguration, ? extends Feature<?>>)Feature.f_65760_.m_65815_((FeatureConfiguration)TreeConfigurations.MANGROVE_TREE));
        DARKWOOD_TREE_BASE = TwilightFeatures.registerWorldFeature(TwilightForestMod.prefix("tree/base/darkwood_tree"), (net.minecraft.world.level.levelgen.feature.ConfiguredFeature<TreeConfiguration, ? extends Feature<?>>)((Feature)TFBiomeFeatures.DARK_CANOPY_TREE.get()).m_65815_((FeatureConfiguration)TreeConfigurations.DARKWOOD_TREE));
        HOMEGROWN_DARKWOOD_TREE_BASE = TwilightFeatures.registerWorldFeature(TwilightForestMod.prefix("tree/base/homegrown_darkwood_tree"), (net.minecraft.world.level.levelgen.feature.ConfiguredFeature<TreeConfiguration, ? extends Feature<?>>)((Feature)TFBiomeFeatures.DARK_CANOPY_TREE.get()).m_65815_((FeatureConfiguration)TreeConfigurations.HOMEGROWN_DARKWOOD_TREE));
        DARKWOOD_LANTERN_TREE_BASE = TwilightFeatures.registerWorldFeature(TwilightForestMod.prefix("tree/base/darkwood_lantern_tree"), (net.minecraft.world.level.levelgen.feature.ConfiguredFeature<TreeConfiguration, ? extends Feature<?>>)((Feature)TFBiomeFeatures.DARK_CANOPY_TREE.get()).m_65815_((FeatureConfiguration)TreeConfigurations.DARKWOOD_LANTERN_TREE));
        TIME_TREE_BASE = TwilightFeatures.registerWorldFeature(TwilightForestMod.prefix("tree/base/time_tree"), (net.minecraft.world.level.levelgen.feature.ConfiguredFeature<TFTreeFeatureConfig, ? extends Feature<?>>)((Feature)TFBiomeFeatures.TREE_OF_TIME.get()).m_65815_((FeatureConfiguration)TreeConfigurations.TIME_TREE));
        TRANSFORM_TREE_BASE = TwilightFeatures.registerWorldFeature(TwilightForestMod.prefix("tree/base/transform_tree"), (net.minecraft.world.level.levelgen.feature.ConfiguredFeature<TreeConfiguration, ? extends Feature<?>>)Feature.f_65760_.m_65815_((FeatureConfiguration)TreeConfigurations.TRANSFORM_TREE));
        MINING_TREE_BASE = TwilightFeatures.registerWorldFeature(TwilightForestMod.prefix("tree/base/mining_tree"), (net.minecraft.world.level.levelgen.feature.ConfiguredFeature<TFTreeFeatureConfig, ? extends Feature<?>>)((Feature)TFBiomeFeatures.MINERS_TREE.get()).m_65815_((FeatureConfiguration)TreeConfigurations.MINING_TREE));
        SORT_TREE_BASE = TwilightFeatures.registerWorldFeature(TwilightForestMod.prefix("tree/base/sort_tree"), (net.minecraft.world.level.levelgen.feature.ConfiguredFeature<TreeConfiguration, ? extends Feature<?>>)Feature.f_65760_.m_65815_((FeatureConfiguration)TreeConfigurations.SORT_TREE));
        HOLLOW_TREE_BASE = TwilightFeatures.registerWorldFeature(TwilightForestMod.prefix("tree/base/hollow_tree"), (net.minecraft.world.level.levelgen.feature.ConfiguredFeature<TFTreeFeatureConfig, ? extends Feature<?>>)((Feature)TFBiomeFeatures.HOLLOW_TREE.get()).m_65815_((FeatureConfiguration)TreeConfigurations.HOLLOW_TREE));
        RAINBOW_OAK_TREE_BASE = TwilightFeatures.registerWorldFeature(TwilightForestMod.prefix("tree/base/rainbow_oak"), (net.minecraft.world.level.levelgen.feature.ConfiguredFeature<TreeConfiguration, ? extends Feature<?>>)Feature.f_65760_.m_65815_((FeatureConfiguration)TreeConfigurations.RAINBOAK_TREE));
        LARGE_RAINBOW_OAK_BASE = TwilightFeatures.registerWorldFeature(TwilightForestMod.prefix("tree/base/large_rainbow_oak"), (net.minecraft.world.level.levelgen.feature.ConfiguredFeature<TreeConfiguration, ? extends Feature<?>>)Feature.f_65760_.m_65815_((FeatureConfiguration)TreeConfigurations.LARGE_RAINBOAK_TREE));
        BROWN_CANOPY_MUSHROOM_TREE_BASE = TwilightFeatures.registerWorldFeature(TwilightForestMod.prefix("mushroom/base/brown_canopy_mushroom"), (net.minecraft.world.level.levelgen.feature.ConfiguredFeature<TreeConfiguration, ? extends Feature<?>>)Feature.f_65760_.m_65815_((FeatureConfiguration)TreeConfigurations.MUSHROOM_BROWN));
        RED_CANOPY_MUSHROOM_TREE_BASE = TwilightFeatures.registerWorldFeature(TwilightForestMod.prefix("mushroom/base/red_canopy_mushroom"), (net.minecraft.world.level.levelgen.feature.ConfiguredFeature<TreeConfiguration, ? extends Feature<?>>)Feature.f_65760_.m_65815_((FeatureConfiguration)TreeConfigurations.MUSHROOM_RED));
        MEGA_SPRUCE_NO_PODZOL_BASE = TwilightFeatures.registerWorldFeature(TwilightForestMod.prefix("tree/base/mega_spruce_no_podzol"), (net.minecraft.world.level.levelgen.feature.ConfiguredFeature<TreeConfiguration, ? extends Feature<?>>)((Feature)TFBiomeFeatures.SNOW_TREE.get()).m_65815_((FeatureConfiguration)TreeConfigurations.BIG_SPRUCE));
        LARGE_WINTER_TREE_BASE = TwilightFeatures.registerWorldFeature(TwilightForestMod.prefix("tree/base/large_winter_tree_base"), (net.minecraft.world.level.levelgen.feature.ConfiguredFeature<TFTreeFeatureConfig, ? extends Feature<?>>)((Feature)TFBiomeFeatures.LARGE_WINTER_TREE.get()).m_65815_((FeatureConfiguration)TreeConfigurations.LARGE_WINTER));
        DEFAULT_TREE_PLACEMENT = TwilightFeatures.OCCUPIES_SURFACE_CLEARANCE.m_7679_(Features.Decorators.f_176979_);
        DEFAULT_TREE_PLACEMENT_SQUARED = TwilightFeatures.OCCUPIES_SURFACE_CLEARANCE.m_7679_(Features.Decorators.f_176980_);
        SNOW_SPRUCE = TwilightFeatures.registerWorldFeature(TwilightForestMod.prefix("snow_spruce"), (net.minecraft.world.level.levelgen.feature.ConfiguredFeature<TreeConfiguration, ?>)((Feature)TFBiomeFeatures.SNOW_TREE.get()).m_65815_((FeatureConfiguration)Features.f_126952_.m_65397_()));
        SNOW_SPRUCE_SNOWY = TwilightFeatures.registerWorldFeature(TwilightForestMod.prefix("snow_spruce_snowy"), (net.minecraft.world.level.levelgen.feature.ConfiguredFeature<?, ?>)ConfiguredFeatures.SNOW_SPRUCE.m_7679_((ConfiguredDecorator)ConfiguredFeatures.DEFAULT_TREE_PLACEMENT));
        OAK_DARK_FOREST = TwilightFeatures.registerWorldFeature(TwilightForestMod.prefix("tree/base/oak_dark_forest"), (net.minecraft.world.level.levelgen.feature.ConfiguredFeature<TreeConfiguration, ? extends Feature<?>>)((Feature)TFBiomeFeatures.DARK_CANOPY_TREE.get()).m_65815_((FeatureConfiguration)Features.f_126948_.m_65397_()));
        BIRCH_DARK_FOREST = TwilightFeatures.registerWorldFeature(TwilightForestMod.prefix("tree/base/birch_dark_forest"), (net.minecraft.world.level.levelgen.feature.ConfiguredFeature<TreeConfiguration, ? extends Feature<?>>)((Feature)TFBiomeFeatures.DARK_CANOPY_TREE.get()).m_65815_((FeatureConfiguration)Features.f_126950_.m_65397_()));
        VANILLA_TF_OAK = TwilightFeatures.registerWorldFeature(TwilightForestMod.prefix("tree/vanilla/vanilla_tf_oak"), (net.minecraft.world.level.levelgen.feature.ConfiguredFeature<?, ?>)Feature.f_65760_.m_65815_((FeatureConfiguration)Features.f_126948_.m_65397_()));
        VANILLA_TF_BIRCH = TwilightFeatures.registerWorldFeature(TwilightForestMod.prefix("tree/vanilla/vanilla_tf_birch"), (net.minecraft.world.level.levelgen.feature.ConfiguredFeature<?, ?>)Feature.f_65760_.m_65815_((FeatureConfiguration)Features.f_126950_.m_65397_()));
        VANILLA_TF_BIG_MUSH = TwilightFeatures.registerWorldFeature(TwilightForestMod.prefix("tree/vanilla/vanilla_tf_big_mush"), (net.minecraft.world.level.levelgen.feature.ConfiguredFeature<?, ?>)Feature.f_65756_.m_65815_((FeatureConfiguration)new RandomBooleanFeatureConfiguration(() -> Features.f_126947_, () -> Features.f_126946_)).m_7679_((ConfiguredDecorator)TwilightFeatures.OCCUPIES_SURFACE_CLEARANCE).m_7679_(Features.Decorators.f_127091_));
        LAKE_LAVA = TwilightFeatures.registerWorldFeature(TwilightForestMod.prefix("lava_lake"), (net.minecraft.world.level.levelgen.feature.ConfiguredFeature<?, ?>)((ConfiguredFeature)((ConfiguredFeature)Feature.f_65783_.m_65815_((FeatureConfiguration)new BlockStateConfiguration(BlockConstants.LAVA)).m_7679_((ConfiguredDecorator)TwilightFeatures.OCCUPIES_STRUCTURE_CLEARANCE).m_7679_(FeatureDecorator.f_70701_.m_70720_((DecoratorConfiguration)new ChanceDecoratorConfiguration(80))).m_158248_(new RangeDecoratorConfiguration((HeightProvider)BiasedToBottomHeight.m_161931_(VerticalAnchor.m_158921_(), VerticalAnchor.m_158929_(), 8)))).m_64152_()).m_158241_(8));
        LAKE_WATER = TwilightFeatures.registerWorldFeature(TwilightForestMod.prefix("water_lake"), (net.minecraft.world.level.levelgen.feature.ConfiguredFeature<?, ?>)((ConfiguredFeature)((ConfiguredFeature)Feature.f_65783_.m_65815_((FeatureConfiguration)new BlockStateConfiguration(BlockConstants.WATER)).m_7679_((ConfiguredDecorator)TwilightFeatures.OCCUPIES_STRUCTURE_CLEARANCE).m_158248_(Features.Decorators.f_176974_)).m_64152_()).m_158241_(4));
        CANOPY_TREES = TwilightFeatures.registerWorldFeature(TwilightForestMod.prefix("tree/canopy_trees"), (net.minecraft.world.level.levelgen.feature.ConfiguredFeature<?, ?>)Feature.f_65754_.m_65815_((FeatureConfiguration)new RandomFeatureConfiguration((List)ImmutableList.of((Object)ConfiguredFeatures.CANOPY_TREE_BASE.m_65383_(0.6f)), (ConfiguredFeature)ConfiguredFeatures.TWILIGHT_OAK_BASE)).m_7679_((ConfiguredDecorator)ConfiguredFeatures.DEFAULT_TREE_PLACEMENT_SQUARED.m_7679_(FeatureDecorator.f_70686_.m_70720_((DecoratorConfiguration)new FrequencyWithExtraChanceDecoratorConfiguration(2, 0.1f, 1))).m_64158_(4)));
        DENSE_CANOPY_TREES = TwilightFeatures.registerWorldFeature(TwilightForestMod.prefix("tree/dense_canopy_trees"), (net.minecraft.world.level.levelgen.feature.ConfiguredFeature<?, ?>)Feature.f_65754_.m_65815_((FeatureConfiguration)new RandomFeatureConfiguration((List)ImmutableList.of((Object)ConfiguredFeatures.CANOPY_TREE_BASE.m_65383_(0.7f)), (ConfiguredFeature)ConfiguredFeatures.TWILIGHT_OAK_BASE)).m_7679_(ConfiguredFeatures.DEFAULT_TREE_PLACEMENT_SQUARED.m_7679_(FeatureDecorator.f_70686_.m_70720_((DecoratorConfiguration)new FrequencyWithExtraChanceDecoratorConfiguration(5, 0.1f, 1)))));
        DEAD_CANOPY_TREES = TwilightFeatures.registerWorldFeature(TwilightForestMod.prefix("tree/dead_canopy_trees"), (net.minecraft.world.level.levelgen.feature.ConfiguredFeature<?, ?>)ConfiguredFeatures.DEAD_CANOPY_TREE_BASE.m_7679_(ConfiguredFeatures.DEFAULT_TREE_PLACEMENT_SQUARED.m_7679_(FeatureDecorator.f_70686_.m_70720_((DecoratorConfiguration)new FrequencyWithExtraChanceDecoratorConfiguration(2, 0.1f, 1)))));
        MANGROVE_TREES = TwilightFeatures.registerWorldFeature(TwilightForestMod.prefix("tree/mangrove_trees"), (net.minecraft.world.level.levelgen.feature.ConfiguredFeature<?, ?>)ConfiguredFeatures.MANGROVE_TREE_BASE.m_7679_((ConfiguredDecorator)Features.Decorators.f_176973_.m_7679_(FeatureDecorator.f_162179_.m_70720_((DecoratorConfiguration)new WaterDepthThresholdConfiguration(6))).m_7679_(FeatureDecorator.f_70686_.m_70720_((DecoratorConfiguration)new FrequencyWithExtraChanceDecoratorConfiguration(3, 0.1f, 1))).m_64152_()));
        TWILIGHT_OAK_TREES = TwilightFeatures.registerWorldFeature(TwilightForestMod.prefix("tree/twilight_oak_trees"), (net.minecraft.world.level.levelgen.feature.ConfiguredFeature<?, ?>)ConfiguredFeatures.TWILIGHT_OAK_BASE.m_7679_(ConfiguredFeatures.DEFAULT_TREE_PLACEMENT_SQUARED.m_7679_(FeatureDecorator.f_70686_.m_70720_((DecoratorConfiguration)new FrequencyWithExtraChanceDecoratorConfiguration(2, 0.1f, 1)))));
        DENSE_TREES = TwilightFeatures.registerWorldFeature(TwilightForestMod.prefix("tree/dense_trees"), (net.minecraft.world.level.levelgen.feature.ConfiguredFeature<?, ?>)ConfiguredFeatures.TWILIGHT_OAK_BASE.m_7679_(ConfiguredFeatures.DEFAULT_TREE_PLACEMENT_SQUARED.m_7679_(FeatureDecorator.f_70686_.m_70720_((DecoratorConfiguration)new FrequencyWithExtraChanceDecoratorConfiguration(7, 0.1f, 1)))));
        SAVANNAH_OAK_TREES = TwilightFeatures.registerWorldFeature(TwilightForestMod.prefix("tree/savannah_oak_trees"), (net.minecraft.world.level.levelgen.feature.ConfiguredFeature<?, ?>)ConfiguredFeatures.TWILIGHT_OAK_BASE.m_7679_(ConfiguredFeatures.DEFAULT_TREE_PLACEMENT_SQUARED.m_7679_(FeatureDecorator.f_70686_.m_70720_((DecoratorConfiguration)new FrequencyWithExtraChanceDecoratorConfiguration(0, 0.6f, 1)))));
        SWAMPY_OAK_TREES = TwilightFeatures.registerWorldFeature(TwilightForestMod.prefix("tree/swampy_oak_trees"), (net.minecraft.world.level.levelgen.feature.ConfiguredFeature<?, ?>)ConfiguredFeatures.SWAMPY_OAK_BASE.m_7679_(ConfiguredFeatures.DEFAULT_TREE_PLACEMENT_SQUARED.m_7679_(FeatureDecorator.f_70686_.m_70720_((DecoratorConfiguration)new FrequencyWithExtraChanceDecoratorConfiguration(4, 0.1f, 1)))));
        FIREFLY_FOREST_TREES = TwilightFeatures.registerWorldFeature(TwilightForestMod.prefix("tree/firefly_forest_trees"), (net.minecraft.world.level.levelgen.feature.ConfiguredFeature<?, ?>)Feature.f_65754_.m_65815_((FeatureConfiguration)new RandomFeatureConfiguration((List)ImmutableList.of((Object)ConfiguredFeatures.CANOPY_TREE_BASE.m_65383_(0.33f), (Object)ConfiguredFeatures.FIREFLY_CANOPY_TREE_BASE.m_65383_(0.45f)), (ConfiguredFeature)ConfiguredFeatures.TWILIGHT_OAK_BASE)).m_7679_(ConfiguredFeatures.DEFAULT_TREE_PLACEMENT_SQUARED.m_7679_(FeatureDecorator.f_70686_.m_70720_((DecoratorConfiguration)new FrequencyWithExtraChanceDecoratorConfiguration(5, 0.1f, 1)))));
        DARK_FOREST_TREES = TwilightFeatures.registerWorldFeature(TwilightForestMod.prefix("tree/dark_forest_trees"), (net.minecraft.world.level.levelgen.feature.ConfiguredFeature<?, ?>)Feature.f_65754_.m_65815_((FeatureConfiguration)new RandomFeatureConfiguration((List)ImmutableList.of((Object)ConfiguredFeatures.BIRCH_DARK_FOREST.m_65383_(0.35f), (Object)ConfiguredFeatures.OAK_DARK_FOREST.m_65383_(0.35f)), (ConfiguredFeature)ConfiguredFeatures.DARKWOOD_TREE_BASE)).m_7679_(ConfiguredFeatures.DEFAULT_TREE_PLACEMENT_SQUARED.m_7679_(FeatureDecorator.f_70686_.m_70720_((DecoratorConfiguration)new FrequencyWithExtraChanceDecoratorConfiguration(5, 0.1f, 1)))));
        DARKWOOD_TREES = TwilightFeatures.registerWorldFeature(TwilightForestMod.prefix("tree/darkwood_trees"), (net.minecraft.world.level.levelgen.feature.ConfiguredFeature<?, ?>)ConfiguredFeatures.DARKWOOD_TREE_BASE.m_7679_(TwilightFeatures.PLACEMENT_NO_STRUCTURE.m_70720_((DecoratorConfiguration)new StructureClearingConfig(true, false, 16)).m_7679_(Features.Decorators.f_176980_).m_7679_(FeatureDecorator.f_70686_.m_70720_((DecoratorConfiguration)new FrequencyWithExtraChanceDecoratorConfiguration(5, 0.1f, 1)))));
        HIGHLANDS_TREES = TwilightFeatures.registerWorldFeature(TwilightForestMod.prefix("tree/highlands_trees"), (net.minecraft.world.level.levelgen.feature.ConfiguredFeature<?, ?>)Feature.f_65754_.m_65815_((FeatureConfiguration)new RandomFeatureConfiguration((List)ImmutableList.of((Object)Features.f_126952_.m_65383_(0.25f), (Object)Features.f_126953_.m_65383_(0.1f)), (ConfiguredFeature)ConfiguredFeatures.MEGA_SPRUCE_NO_PODZOL_BASE)).m_7679_(ConfiguredFeatures.DEFAULT_TREE_PLACEMENT_SQUARED.m_7679_(FeatureDecorator.f_70686_.m_70720_((DecoratorConfiguration)new FrequencyWithExtraChanceDecoratorConfiguration(5, 0.1f, 1)))));
        ENCHANTED_FOREST_TREES = TwilightFeatures.registerWorldFeature(TwilightForestMod.prefix("tree/enchanted_forest_trees"), (net.minecraft.world.level.levelgen.feature.ConfiguredFeature<?, ?>)Feature.f_65754_.m_65815_((FeatureConfiguration)new RandomFeatureConfiguration((List)ImmutableList.of((Object)ConfiguredFeatures.VANILLA_TF_OAK.m_65383_(0.15f), (Object)ConfiguredFeatures.VANILLA_TF_BIRCH.m_65383_(0.15f), (Object)ConfiguredFeatures.LARGE_RAINBOW_OAK_BASE.m_65383_(0.1f)), (ConfiguredFeature)ConfiguredFeatures.RAINBOW_OAK_TREE_BASE)).m_7679_(ConfiguredFeatures.DEFAULT_TREE_PLACEMENT_SQUARED.m_7679_(FeatureDecorator.f_70686_.m_70720_((DecoratorConfiguration)new FrequencyWithExtraChanceDecoratorConfiguration(10, 0.1f, 1)))));
        SNOWY_FOREST_TREES = TwilightFeatures.registerWorldFeature(TwilightForestMod.prefix("tree/snowy_forest_trees"), (net.minecraft.world.level.levelgen.feature.ConfiguredFeature<?, ?>)Feature.f_65754_.m_65815_((FeatureConfiguration)new RandomFeatureConfiguration((List)ImmutableList.of((Object)ConfiguredFeatures.MEGA_SPRUCE_NO_PODZOL_BASE.m_65383_(0.1f), (Object)ConfiguredFeatures.LARGE_WINTER_TREE_BASE.m_65383_(0.01f)), (ConfiguredFeature)ConfiguredFeatures.SNOW_SPRUCE_SNOWY)).m_7679_(ConfiguredFeatures.DEFAULT_TREE_PLACEMENT_SQUARED.m_7679_(FeatureDecorator.f_70686_.m_70720_((DecoratorConfiguration)new FrequencyWithExtraChanceDecoratorConfiguration(10, 0.1f, 1)))));
        VANILLA_TF_TREES = TwilightFeatures.registerWorldFeature(TwilightForestMod.prefix("tree/vanilla_tf_trees"), (net.minecraft.world.level.levelgen.feature.ConfiguredFeature<?, ?>)Feature.f_65754_.m_65815_((FeatureConfiguration)new RandomFeatureConfiguration((List)ImmutableList.of((Object)ConfiguredFeatures.VANILLA_TF_BIRCH.m_65383_(0.25f), (Object)ConfiguredFeatures.VANILLA_TF_OAK.m_65383_(0.25f)), (ConfiguredFeature)ConfiguredFeatures.TWILIGHT_OAK_BASE)).m_7679_(ConfiguredFeatures.DEFAULT_TREE_PLACEMENT_SQUARED.m_7679_(FeatureDecorator.f_70686_.m_70720_((DecoratorConfiguration)new FrequencyWithExtraChanceDecoratorConfiguration(10, 0.1f, 1)))));
        SIMPLE_WELL = TwilightFeatures.registerWorldFeature(TwilightForestMod.prefix("simple_well"), (net.minecraft.world.level.levelgen.feature.ConfiguredFeature<?, ?>)((Feature)TFBiomeFeatures.SIMPLE_WELL.get()).m_65815_((FeatureConfiguration)FeatureConfiguration.f_67737_));
        FANCY_WELL = TwilightFeatures.registerWorldFeature(TwilightForestMod.prefix("fancy_well"), (net.minecraft.world.level.levelgen.feature.ConfiguredFeature<?, ?>)((Feature)TFBiomeFeatures.FANCY_WELL.get()).m_65815_((FeatureConfiguration)FeatureConfiguration.f_67737_));
        WELL_PLACER = TwilightFeatures.registerWorldFeature(TwilightForestMod.prefix("well_placer"), (net.minecraft.world.level.levelgen.feature.ConfiguredFeature<?, ?>)Feature.f_65754_.m_65815_((FeatureConfiguration)new RandomFeatureConfiguration((List)ImmutableList.of((Object)ConfiguredFeatures.FANCY_WELL.m_65383_(0.07f)), (ConfiguredFeature)ConfiguredFeatures.SIMPLE_WELL)).m_7679_((ConfiguredDecorator)TwilightFeatures.OCCUPIES_STRUCTURE_CLEARANCE).m_7679_(Features.Decorators.f_127086_).m_158241_(80));
        DRUID_HUT = TwilightFeatures.registerWorldFeature(TwilightForestMod.prefix("druid_hut"), (net.minecraft.world.level.levelgen.feature.ConfiguredFeature<?, ?>)((Feature)TFBiomeFeatures.DRUID_HUT.get()).m_65815_((FeatureConfiguration)FeatureConfiguration.f_67737_).m_7679_((ConfiguredDecorator)TwilightFeatures.OCCUPIES_STRUCTURE_CLEARANCE).m_7679_(Features.Decorators.f_127086_).m_158241_(105));
        GRAVEYARD = TwilightFeatures.registerWorldFeature(TwilightForestMod.prefix("graveyard"), (net.minecraft.world.level.levelgen.feature.ConfiguredFeature<?, ?>)((Feature)TFBiomeFeatures.GRAVEYARD.get()).m_65815_((FeatureConfiguration)FeatureConfiguration.f_67737_).m_7679_((ConfiguredDecorator)TwilightFeatures.OCCUPIES_SURFACE_CLEARANCE).m_158241_(75));
        BIG_MUSHGLOOM = TwilightFeatures.registerWorldFeature(TwilightForestMod.prefix("big_mushgloom"), (net.minecraft.world.level.levelgen.feature.ConfiguredFeature<?, ?>)((Feature)TFBiomeFeatures.BIG_MUSHGLOOM.get()).m_65815_((FeatureConfiguration)FeatureConfiguration.f_67737_).m_7679_((ConfiguredDecorator)TwilightFeatures.OCCUPIES_SURFACE_CLEARANCE).m_7679_(Features.Decorators.f_127086_).m_64152_());
        FALLEN_LEAVES = TwilightFeatures.registerWorldFeature(TwilightForestMod.prefix("fallen_leaves"), (net.minecraft.world.level.levelgen.feature.ConfiguredFeature<?, ?>)((Feature)TFBiomeFeatures.FALLEN_LEAVES.get()).m_65815_((FeatureConfiguration)FeatureConfiguration.f_67737_).m_7679_((ConfiguredDecorator)TwilightFeatures.OCCUPIES_SURFACE_CLEARANCE).m_7679_(Features.Decorators.f_127086_).m_64152_());
        FIDDLEHEAD = TwilightFeatures.registerWorldFeature(TwilightForestMod.prefix("fiddlehead"), (net.minecraft.world.level.levelgen.feature.ConfiguredFeature<?, ?>)Feature.f_65763_.m_65815_((FeatureConfiguration)new RandomPatchConfiguration.GrassConfigurationBuilder((BlockStateProvider)new SimpleStateProvider(BlockConstants.FIDDLEHEAD), (BlockPlacer)SimpleBlockPlacer.f_67529_).m_67991_(16).m_68003_()));
        FIRE_JET = TwilightFeatures.registerWorldFeature(TwilightForestMod.prefix("fire_jet"), (net.minecraft.world.level.levelgen.feature.ConfiguredFeature<?, ?>)((Feature)TFBiomeFeatures.FIRE_JET.get()).m_65815_((FeatureConfiguration)new BlockStateConfiguration(BlockConstants.FIRE_JET)).m_7679_(Features.Decorators.f_127091_));
        FOUNDATION = TwilightFeatures.registerWorldFeature(TwilightForestMod.prefix("foundation"), (net.minecraft.world.level.levelgen.feature.ConfiguredFeature<?, ?>)((ConfiguredFeature)((Feature)TFBiomeFeatures.FOUNDATION.get()).m_65815_((FeatureConfiguration)FeatureConfiguration.f_67737_).m_7679_((ConfiguredDecorator)TwilightFeatures.OCCUPIES_SURFACE_CLEARANCE).m_7679_(Features.Decorators.f_127086_).m_158241_(100)).m_64152_());
        GROVE_RUINS = TwilightFeatures.registerWorldFeature(TwilightForestMod.prefix("grove_ruins"), (net.minecraft.world.level.levelgen.feature.ConfiguredFeature<?, ?>)((ConfiguredFeature)((Feature)TFBiomeFeatures.GROVE_RUINS.get()).m_65815_((FeatureConfiguration)FeatureConfiguration.f_67737_).m_7679_((ConfiguredDecorator)TwilightFeatures.OCCUPIES_SURFACE_CLEARANCE).m_7679_(Features.Decorators.f_127086_).m_158241_(105)).m_64152_());
        HOLLOW_LOG = TwilightFeatures.registerWorldFeature(TwilightForestMod.prefix("hollow_log"), (net.minecraft.world.level.levelgen.feature.ConfiguredFeature<?, ?>)((ConfiguredFeature)((Feature)TFBiomeFeatures.FALLEN_HOLLOW_LOG.get()).m_65815_((FeatureConfiguration)FeatureConfiguration.f_67737_).m_7679_((ConfiguredDecorator)TwilightFeatures.OCCUPIES_SURFACE_CLEARANCE).m_7679_(Features.Decorators.f_127086_).m_158241_(100)).m_64152_());
        HOLLOW_STUMP = TwilightFeatures.registerWorldFeature(TwilightForestMod.prefix("hollow_stump"), (net.minecraft.world.level.levelgen.feature.ConfiguredFeature<?, ?>)((ConfiguredFeature)((Feature)TFBiomeFeatures.HOLLOW_STUMP.get()).m_65815_((FeatureConfiguration)TreeConfigurations.HOLLOW_TREE).m_7679_((ConfiguredDecorator)TwilightFeatures.OCCUPIES_SURFACE_CLEARANCE).m_7679_(Features.Decorators.f_127086_).m_158241_(100)).m_64152_());
        HUGE_LILY_PAD = TwilightFeatures.registerWorldFeature(TwilightForestMod.prefix("huge_lily_pad"), (net.minecraft.world.level.levelgen.feature.ConfiguredFeature<?, ?>)((ConfiguredFeature)((ConfiguredFeature)((Feature)TFBiomeFeatures.HUGE_LILY_PAD.get()).m_65815_((FeatureConfiguration)FeatureConfiguration.f_67737_).m_7679_(Features.Decorators.f_127086_).m_158241_(20)).m_64152_()).m_64158_(10));
        HUGE_WATER_LILY = TwilightFeatures.registerWorldFeature(TwilightForestMod.prefix("huge_water_lily"), (net.minecraft.world.level.levelgen.feature.ConfiguredFeature<?, ?>)((ConfiguredFeature)((ConfiguredFeature)((Feature)TFBiomeFeatures.HUGE_WATER_LILY.get()).m_65815_((FeatureConfiguration)FeatureConfiguration.f_67737_).m_7679_(Features.Decorators.f_127086_).m_158241_(50)).m_64152_()).m_64158_(5));
        CICADA_LAMPPOST = TwilightFeatures.registerWorldFeature(TwilightForestMod.prefix("cicada_lamppost"), (net.minecraft.world.level.levelgen.feature.ConfiguredFeature<?, ?>)((Feature)TFBiomeFeatures.LAMPPOSTS.get()).m_65815_((FeatureConfiguration)new BlockStateConfiguration(BlockConstants.CICADA_JAR)));
        FIREFLY_LAMPPOST = TwilightFeatures.registerWorldFeature(TwilightForestMod.prefix("firefly_lamppost"), (net.minecraft.world.level.levelgen.feature.ConfiguredFeature<?, ?>)((Feature)TFBiomeFeatures.LAMPPOSTS.get()).m_65815_((FeatureConfiguration)new BlockStateConfiguration(BlockConstants.FIREFLY_JAR)));
        LAMPPOST_PLACER = TwilightFeatures.registerWorldFeature(TwilightForestMod.prefix("lamppost_placer"), (net.minecraft.world.level.levelgen.feature.ConfiguredFeature<?, ?>)((ConfiguredFeature)Feature.f_65754_.m_65815_((FeatureConfiguration)new RandomFeatureConfiguration((List)ImmutableList.of((Object)ConfiguredFeatures.CICADA_LAMPPOST.m_65383_(0.1f)), (ConfiguredFeature)ConfiguredFeatures.FIREFLY_LAMPPOST)).m_7679_((ConfiguredDecorator)TwilightFeatures.OCCUPIES_SURFACE_CLEARANCE).m_7679_(Features.Decorators.f_127086_).m_158241_(2)).m_64152_());
        MONOLITH = TwilightFeatures.registerWorldFeature(TwilightForestMod.prefix("monolith"), (net.minecraft.world.level.levelgen.feature.ConfiguredFeature<?, ?>)((ConfiguredFeature)((Feature)TFBiomeFeatures.MONOLITH.get()).m_65815_((FeatureConfiguration)FeatureConfiguration.f_67737_).m_7679_((ConfiguredDecorator)TwilightFeatures.OCCUPIES_SURFACE_CLEARANCE).m_7679_(Features.Decorators.f_127086_).m_64152_()).m_158241_(90));
        MUSHGLOOM_CLUSTER = TwilightFeatures.registerWorldFeature(TwilightForestMod.prefix("mushgloom_cluster"), (net.minecraft.world.level.levelgen.feature.ConfiguredFeature<?, ?>)Feature.f_65763_.m_65815_((FeatureConfiguration)new RandomPatchConfiguration.GrassConfigurationBuilder((BlockStateProvider)new SimpleStateProvider(BlockConstants.MUSHGLOOM), (BlockPlacer)SimpleBlockPlacer.f_67529_).m_67991_(8).m_68003_()));
        MYCELIUM_BLOB = TwilightFeatures.registerWorldFeature(TwilightForestMod.prefix("mycelium_blob"), (net.minecraft.world.level.levelgen.feature.ConfiguredFeature<?, ?>)((Feature)TFBiomeFeatures.MYCELIUM_BLOB.get()).m_65815_((FeatureConfiguration)new DiskConfiguration(BlockConstants.MYCELIUM, (IntProvider)UniformInt.m_146622_(4, 6), 3, (List)ImmutableList.of((Object)BlockConstants.GRASS_BLOCK))).m_7679_(Features.Decorators.f_127086_).m_64152_());
        OUTSIDE_STALAGMITE = TwilightFeatures.registerWorldFeature(TwilightForestMod.prefix("outside_stalagmite"), (net.minecraft.world.level.levelgen.feature.ConfiguredFeature<?, ?>)((ConfiguredFeature)((Feature)TFBiomeFeatures.CAVE_STALACTITE.get()).m_65815_((FeatureConfiguration)new SpikeConfig((BlockStateProvider)new SimpleStateProvider(BlockConstants.STONE), (IntProvider)UniformInt.m_146622_(5, 10), (IntProvider)ConstantInt.m_146483_(0), false)).m_7679_((ConfiguredDecorator)TwilightFeatures.OCCUPIES_SURFACE_CLEARANCE).m_7679_(Features.Decorators.f_176973_).m_158241_(88)).m_64152_());
        PLANT_ROOTS = TwilightFeatures.registerWorldFeature(TwilightForestMod.prefix("plant_roots"), (net.minecraft.world.level.levelgen.feature.ConfiguredFeature<?, ?>)((ConfiguredFeature)((Feature)TFBiomeFeatures.UNDERGROUND_PLANTS.get()).m_65815_((FeatureConfiguration)new BlockStateConfiguration(BlockConstants.ROOT_STRAND)).m_7679_((ConfiguredDecorator)TwilightFeatures.OCCUPIES_SURFACE_CLEARANCE).m_7679_(Features.Decorators.f_127093_).m_158248_(Features.Decorators.f_176978_)).m_64158_(4));
        PUMPKIN_LAMPPOST = TwilightFeatures.registerWorldFeature(TwilightForestMod.prefix("pumpkin_lamppost"), (net.minecraft.world.level.levelgen.feature.ConfiguredFeature<?, ?>)((Feature)TFBiomeFeatures.LAMPPOSTS.get()).m_65815_((FeatureConfiguration)new BlockStateConfiguration(BlockConstants.JACK_O_LANTERN)).m_7679_((ConfiguredDecorator)TwilightFeatures.OCCUPIES_SURFACE_CLEARANCE).m_7679_(Features.Decorators.f_127086_).m_64152_());
        SMOKER = TwilightFeatures.registerWorldFeature(TwilightForestMod.prefix("smoker"), (net.minecraft.world.level.levelgen.feature.ConfiguredFeature<?, ?>)((Feature)TFBiomeFeatures.FIRE_JET.get()).m_65815_((FeatureConfiguration)new BlockStateConfiguration(BlockConstants.SMOKER)).m_7679_(Features.Decorators.f_127086_));
        STONE_CIRCLE = TwilightFeatures.registerWorldFeature(TwilightForestMod.prefix("stone_circle"), (net.minecraft.world.level.levelgen.feature.ConfiguredFeature<?, ?>)((ConfiguredFeature)((Feature)TFBiomeFeatures.STONE_CIRCLE.get()).m_65815_((FeatureConfiguration)FeatureConfiguration.f_67737_).m_7679_((ConfiguredDecorator)TwilightFeatures.OCCUPIES_SURFACE_CLEARANCE).m_7679_(Features.Decorators.f_127086_).m_158241_(105)).m_64152_());
        THORNS = TwilightFeatures.registerWorldFeature(TwilightForestMod.prefix("thorns"), (net.minecraft.world.level.levelgen.feature.ConfiguredFeature<?, ?>)((Feature)TFBiomeFeatures.THORNS.get()).m_65815_((FeatureConfiguration)new ThornsConfig(7, 3, 3, 50)).m_7679_((ConfiguredDecorator)TwilightFeatures.CONFIGURED_THORNLANDS_BLANKETING));
        TORCH_BERRIES = TwilightFeatures.registerWorldFeature(TwilightForestMod.prefix("torch_berries"), (net.minecraft.world.level.levelgen.feature.ConfiguredFeature<?, ?>)((ConfiguredFeature)((ConfiguredFeature)((Feature)TFBiomeFeatures.UNDERGROUND_PLANTS.get()).m_65815_((FeatureConfiguration)new BlockStateConfiguration(BlockConstants.TORCHBERRIES)).m_7679_(Features.Decorators.f_127093_).m_158248_(Features.Decorators.f_176978_)).m_64158_(4)).m_7679_((ConfiguredDecorator)TwilightFeatures.OCCUPIES_UNDERGROUND_CLEARANCE));
        TROLL_ROOTS = TwilightFeatures.registerWorldFeature(TwilightForestMod.prefix("troll_roots"), (net.minecraft.world.level.levelgen.feature.ConfiguredFeature<?, ?>)((ConfiguredFeature)((ConfiguredFeature)((Feature)TFBiomeFeatures.TROLL_VINES.get()).m_65815_((FeatureConfiguration)new BlockStateConfiguration(BlockConstants.TROLLVIDR)).m_7679_(Features.Decorators.f_127093_).m_158248_(Features.Decorators.f_176978_)).m_64158_(4)).m_64160_(8));
        VANILLA_ROOTS = TwilightFeatures.registerWorldFeature(TwilightForestMod.prefix("vanilla_roots"), (net.minecraft.world.level.levelgen.feature.ConfiguredFeature<?, ?>)((ConfiguredFeature)((ConfiguredFeature)((Feature)TFBiomeFeatures.UNDERGROUND_PLANTS.get()).m_65815_((FeatureConfiguration)new BlockStateConfiguration(BlockConstants.HANGING_ROOTS)).m_7679_(Features.Decorators.f_127093_).m_158248_(Features.Decorators.f_176978_)).m_64158_(16)).m_7679_((ConfiguredDecorator)TwilightFeatures.OCCUPIES_UNDERGROUND_CLEARANCE));
        WEBS = TwilightFeatures.registerWorldFeature(TwilightForestMod.prefix("webs"), (net.minecraft.world.level.levelgen.feature.ConfiguredFeature<?, ?>)((ConfiguredFeature)((Feature)TFBiomeFeatures.WEBS.get()).m_65815_((FeatureConfiguration)FeatureConfiguration.f_67737_).m_7679_(Features.Decorators.f_127086_).m_64152_()).m_64158_(60));
        WOOD_ROOTS_SPREAD = TwilightFeatures.registerWorldFeature(TwilightForestMod.prefix("ore/wood_roots_spread"), (net.minecraft.world.level.levelgen.feature.ConfiguredFeature<?, ?>)((ConfiguredFeature)((ConfiguredFeature)((ConfiguredFeature)((Feature)TFBiomeFeatures.WOOD_ROOTS.get()).m_65815_((FeatureConfiguration)FeatureConfiguration.f_67737_).m_7679_((ConfiguredDecorator)TwilightFeatures.OCCUPIES_SURFACE_CLEARANCE).m_158248_(Features.Decorators.f_176978_)).m_158241_(30)).m_64152_()).m_64158_(20));
        SNOW_UNDER_TREES = TwilightFeatures.registerWorldFeature(TwilightForestMod.prefix("snow_under_trees"), (net.minecraft.world.level.levelgen.feature.ConfiguredFeature<?, ?>)((Feature)TFBiomeFeatures.SNOW_UNDER_TREES.get()).m_65815_((FeatureConfiguration)FeatureConfiguration.f_67737_));
        TF_OAK_FALLEN_LOG = TwilightFeatures.registerWorldFeature(TwilightForestMod.prefix("tf_oak_fallen_log"), (net.minecraft.world.level.levelgen.feature.ConfiguredFeature<?, ?>)((ConfiguredFeature)((Feature)TFBiomeFeatures.FALLEN_SMALL_LOG.get()).m_65815_((FeatureConfiguration)new HollowLogConfig(BlockConstants.TF_OAK_LOG, BlockConstants.HOLLOW_TF_OAK_LOG)).m_7679_((ConfiguredDecorator)TwilightFeatures.OCCUPIES_SURFACE_CLEARANCE).m_7679_(Features.Decorators.f_176973_).m_158241_(40)).m_64152_());
        CANOPY_FALLEN_LOG = TwilightFeatures.registerWorldFeature(TwilightForestMod.prefix("canopy_fallen_log"), (net.minecraft.world.level.levelgen.feature.ConfiguredFeature<?, ?>)((ConfiguredFeature)((Feature)TFBiomeFeatures.FALLEN_SMALL_LOG.get()).m_65815_((FeatureConfiguration)new HollowLogConfig(BlockConstants.CANOPY_LOG, BlockConstants.HOLLOW_CANOPY_LOG)).m_7679_((ConfiguredDecorator)TwilightFeatures.OCCUPIES_SURFACE_CLEARANCE).m_7679_(Features.Decorators.f_176973_).m_158241_(40)).m_64152_());
        MANGROVE_FALLEN_LOG = TwilightFeatures.registerWorldFeature(TwilightForestMod.prefix("mangrove_fallen_log"), (net.minecraft.world.level.levelgen.feature.ConfiguredFeature<?, ?>)((ConfiguredFeature)((Feature)TFBiomeFeatures.FALLEN_SMALL_LOG.get()).m_65815_((FeatureConfiguration)new HollowLogConfig(BlockConstants.MANGROVE_LOG, BlockConstants.HOLLOW_MANGROVE_LOG)).m_7679_((ConfiguredDecorator)TwilightFeatures.OCCUPIES_SURFACE_CLEARANCE).m_7679_(Features.Decorators.f_176973_).m_158241_(40)).m_64152_());
        OAK_FALLEN_LOG = TwilightFeatures.registerWorldFeature(TwilightForestMod.prefix("oak_fallen_log"), (net.minecraft.world.level.levelgen.feature.ConfiguredFeature<?, ?>)((ConfiguredFeature)((Feature)TFBiomeFeatures.FALLEN_SMALL_LOG.get()).m_65815_((FeatureConfiguration)new HollowLogConfig(BlockConstants.OAK_LOG, BlockConstants.HOLLOW_OAK_LOG)).m_7679_((ConfiguredDecorator)TwilightFeatures.OCCUPIES_SURFACE_CLEARANCE).m_7679_(Features.Decorators.f_176973_).m_158241_(40)).m_64152_());
        SPRUCE_FALLEN_LOG = TwilightFeatures.registerWorldFeature(TwilightForestMod.prefix("spruce_fallen_log"), (net.minecraft.world.level.levelgen.feature.ConfiguredFeature<?, ?>)((ConfiguredFeature)((Feature)TFBiomeFeatures.FALLEN_SMALL_LOG.get()).m_65815_((FeatureConfiguration)new HollowLogConfig(BlockConstants.SPRUCE_LOG, BlockConstants.HOLLOW_SPRUCE_LOG)).m_7679_((ConfiguredDecorator)TwilightFeatures.OCCUPIES_SURFACE_CLEARANCE).m_7679_(Features.Decorators.f_176973_).m_158241_(40)).m_64152_());
        BIRCH_FALLEN_LOG = TwilightFeatures.registerWorldFeature(TwilightForestMod.prefix("birch_fallen_log"), (net.minecraft.world.level.levelgen.feature.ConfiguredFeature<?, ?>)((ConfiguredFeature)((Feature)TFBiomeFeatures.FALLEN_SMALL_LOG.get()).m_65815_((FeatureConfiguration)new HollowLogConfig(BlockConstants.BIRCH_LOG, BlockConstants.HOLLOW_BIRCH_LOG)).m_7679_((ConfiguredDecorator)TwilightFeatures.OCCUPIES_SURFACE_CLEARANCE).m_7679_(Features.Decorators.f_176973_).m_158241_(40)).m_64152_());
        DEFAULT_FALLEN_LOGS = TwilightFeatures.registerWorldFeature(TwilightForestMod.prefix("default_fallen_logs"), (net.minecraft.world.level.levelgen.feature.ConfiguredFeature<?, ?>)Feature.f_65754_.m_65815_((FeatureConfiguration)new RandomFeatureConfiguration((List)ImmutableList.of((Object)ConfiguredFeatures.BIRCH_FALLEN_LOG.m_65383_(0.1f), (Object)ConfiguredFeatures.OAK_FALLEN_LOG.m_65383_(0.2f), (Object)ConfiguredFeatures.CANOPY_FALLEN_LOG.m_65383_(0.4f)), (ConfiguredFeature)ConfiguredFeatures.TF_OAK_FALLEN_LOG)));
        SMALL_LOG = TwilightFeatures.registerWorldFeature(TwilightForestMod.prefix("small_log"), (net.minecraft.world.level.levelgen.feature.ConfiguredFeature<?, ?>)Feature.f_65759_.m_65815_((FeatureConfiguration)NoneFeatureConfiguration.f_67816_));
        SMALL_GRANITE = TwilightFeatures.registerWorldFeature(TwilightForestMod.prefix("small_granite"), (net.minecraft.world.level.levelgen.feature.ConfiguredFeature<?, ?>)((ConfiguredFeature)((ConfiguredFeature)Feature.f_65731_.m_65815_((FeatureConfiguration)new OreConfiguration(OreConfiguration.Predicates.f_67854_, Blocks.f_50122_.m_49966_(), 16)).m_158241_(60)).m_64152_()).m_64158_(5));
        SMALL_DIORITE = TwilightFeatures.registerWorldFeature(TwilightForestMod.prefix("small_diorite"), (net.minecraft.world.level.levelgen.feature.ConfiguredFeature<?, ?>)((ConfiguredFeature)((ConfiguredFeature)Feature.f_65731_.m_65815_((FeatureConfiguration)new OreConfiguration(OreConfiguration.Predicates.f_67854_, Blocks.f_50228_.m_49966_(), 16)).m_158241_(60)).m_64152_()).m_64158_(5));
        SMALL_ANDESITE = TwilightFeatures.registerWorldFeature(TwilightForestMod.prefix("small_andesite"), (net.minecraft.world.level.levelgen.feature.ConfiguredFeature<?, ?>)((ConfiguredFeature)((ConfiguredFeature)Feature.f_65731_.m_65815_((FeatureConfiguration)new OreConfiguration(OreConfiguration.Predicates.f_67854_, Blocks.f_50334_.m_49966_(), 16)).m_158241_(60)).m_64152_()).m_64158_(5));
        DARK_MUSHGLOOMS = TwilightFeatures.registerWorldFeature(TwilightForestMod.prefix("dark_mushglooms"), (net.minecraft.world.level.levelgen.feature.ConfiguredFeature<?, ?>)((Feature)TFBiomeFeatures.DARK_FOREST_PLACER.get()).m_65815_((FeatureConfiguration)new RandomPatchConfiguration.GrassConfigurationBuilder((BlockStateProvider)new SimpleStateProvider(BlockConstants.MUSHGLOOM), (BlockPlacer)SimpleBlockPlacer.f_67529_).m_67993_((Set)ImmutableSet.of((Object)BlockConstants.GRASS_BLOCK.m_60734_())).m_67991_(64).m_67995_().m_68003_()).m_7679_(Features.Decorators.f_127086_).m_158241_(10));
        DARK_PUMPKINS = TwilightFeatures.registerWorldFeature(TwilightForestMod.prefix("dark_pumpkins"), (net.minecraft.world.level.levelgen.feature.ConfiguredFeature<?, ?>)((Feature)TFBiomeFeatures.DARK_FOREST_PLACER.get()).m_65815_((FeatureConfiguration)new RandomPatchConfiguration.GrassConfigurationBuilder((BlockStateProvider)new SimpleStateProvider(BlockConstants.PUMPKIN), (BlockPlacer)SimpleBlockPlacer.f_67529_).m_67993_((Set)ImmutableSet.of((Object)BlockConstants.GRASS_BLOCK.m_60734_())).m_67991_(16).m_67995_().m_68003_()).m_7679_(Features.Decorators.f_127086_).m_158241_(30));
        DARK_GRASS = TwilightFeatures.registerWorldFeature(TwilightForestMod.prefix("dark_grass"), (net.minecraft.world.level.levelgen.feature.ConfiguredFeature<?, ?>)((Feature)TFBiomeFeatures.DARK_FOREST_PLACER.get()).m_65815_((FeatureConfiguration)new RandomPatchConfiguration.GrassConfigurationBuilder((BlockStateProvider)new SimpleStateProvider(BlockConstants.GRASS), (BlockPlacer)SimpleBlockPlacer.f_67529_).m_67993_((Set)ImmutableSet.of((Object)BlockConstants.GRASS_BLOCK.m_60734_())).m_67991_(512).m_67995_().m_68003_()).m_7679_(Features.Decorators.f_127086_).m_64158_(4));
        DARK_FERNS = TwilightFeatures.registerWorldFeature(TwilightForestMod.prefix("dark_ferns"), (net.minecraft.world.level.levelgen.feature.ConfiguredFeature<?, ?>)((Feature)TFBiomeFeatures.DARK_FOREST_PLACER.get()).m_65815_((FeatureConfiguration)new RandomPatchConfiguration.GrassConfigurationBuilder((BlockStateProvider)new SimpleStateProvider(BlockConstants.FERN), (BlockPlacer)SimpleBlockPlacer.f_67529_).m_67993_((Set)ImmutableSet.of((Object)BlockConstants.GRASS_BLOCK.m_60734_())).m_67991_(256).m_67995_().m_68003_()).m_7679_(Features.Decorators.f_127086_).m_64158_(4));
        DARK_MUSHROOMS = TwilightFeatures.registerWorldFeature(TwilightForestMod.prefix("dark_mushrooms"), (net.minecraft.world.level.levelgen.feature.ConfiguredFeature<?, ?>)((Feature)TFBiomeFeatures.DARK_FOREST_PLACER.get()).m_65815_((FeatureConfiguration)new RandomPatchConfiguration.GrassConfigurationBuilder((BlockStateProvider)new SimpleStateProvider(BlockConstants.BROWN_MUSHROOM), (BlockPlacer)SimpleBlockPlacer.f_67529_).m_67993_((Set)ImmutableSet.of((Object)BlockConstants.GRASS_BLOCK.m_60734_())).m_67991_(64).m_67995_().m_68003_()).m_7679_(Features.Decorators.f_127086_));
        DARK_DEAD_BUSHES = TwilightFeatures.registerWorldFeature(TwilightForestMod.prefix("dark_dead_bushes"), (net.minecraft.world.level.levelgen.feature.ConfiguredFeature<?, ?>)((Feature)TFBiomeFeatures.DARK_FOREST_PLACER.get()).m_65815_((FeatureConfiguration)new RandomPatchConfiguration.GrassConfigurationBuilder((BlockStateProvider)new SimpleStateProvider(BlockConstants.DEAD_BUSH), (BlockPlacer)SimpleBlockPlacer.f_67529_).m_67993_((Set)ImmutableSet.of((Object)BlockConstants.GRASS_BLOCK.m_60734_())).m_67991_(32).m_67995_().m_68003_()).m_7679_(Features.Decorators.f_127086_).m_158241_(15));
        CANOPY_MUSHROOMS_SPARSE = TwilightFeatures.registerWorldFeature(TwilightForestMod.prefix("mushroom/canopy_mushrooms_sparse"), (net.minecraft.world.level.levelgen.feature.ConfiguredFeature<?, ?>)Feature.f_65754_.m_65815_((FeatureConfiguration)new RandomFeatureConfiguration((List)ImmutableList.of((Object)ConfiguredFeatures.BROWN_CANOPY_MUSHROOM_TREE_BASE.m_65383_(0.15f), (Object)ConfiguredFeatures.RED_CANOPY_MUSHROOM_TREE_BASE.m_65383_(0.05f)), Feature.f_65759_.m_65815_((FeatureConfiguration)NoneFeatureConfiguration.f_67816_))).m_7679_((ConfiguredDecorator)ConfiguredFeatures.DEFAULT_TREE_PLACEMENT_SQUARED).m_64158_(8));
        CANOPY_MUSHROOMS_DENSE = TwilightFeatures.registerWorldFeature(TwilightForestMod.prefix("mushroom/canopy_mushrooms_dense"), (net.minecraft.world.level.levelgen.feature.ConfiguredFeature<?, ?>)Feature.f_65754_.m_65815_((FeatureConfiguration)new RandomFeatureConfiguration((List)ImmutableList.of((Object)ConfiguredFeatures.BROWN_CANOPY_MUSHROOM_TREE_BASE.m_65383_(0.675f), (Object)ConfiguredFeatures.RED_CANOPY_MUSHROOM_TREE_BASE.m_65383_(0.225f)), Feature.f_65759_.m_65815_((FeatureConfiguration)NoneFeatureConfiguration.f_67816_))).m_7679_((ConfiguredDecorator)ConfiguredFeatures.DEFAULT_TREE_PLACEMENT_SQUARED).m_64158_(8));
        HOLLOW_TREE_PLACER = TwilightFeatures.registerWorldFeature(TwilightForestMod.prefix("tree/hollow_placer"), (net.minecraft.world.level.levelgen.feature.ConfiguredFeature<?, ?>)Feature.f_65754_.m_65815_((FeatureConfiguration)new RandomFeatureConfiguration((List)ImmutableList.of((Object)ConfiguredFeatures.HOLLOW_TREE_BASE.m_65383_(0.04f)), Feature.f_65759_.m_65815_((FeatureConfiguration)NoneFeatureConfiguration.f_67816_))).m_7679_(Features.Decorators.f_176979_).m_7679_(TwilightFeatures.PLACEMENT_NO_STRUCTURE.m_70720_((DecoratorConfiguration)new StructureClearingConfig(true, false, 16))).m_7679_((ConfiguredDecorator)TwilightFeatures.CONFIGURED_CHUNK_CENTERER).m_64158_(1));
        SMALL_FLOWER_CONFIG = new RandomPatchConfiguration.GrassConfigurationBuilder((BlockStateProvider)new WeightedStateProvider(SimpleWeightedRandomList.m_146263_().m_146271_((Object)BlockConstants.POPPY, 1).m_146271_((Object)BlockConstants.DANDELION, 1).m_146271_((Object)BlockConstants.RED_TULIP, 1).m_146271_((Object)BlockConstants.ORANGE_TULIP, 1).m_146271_((Object)BlockConstants.PINK_TULIP, 1).m_146271_((Object)BlockConstants.WHITE_TULIP, 1).m_146271_((Object)BlockConstants.CORNFLOWER, 1).m_146271_((Object)BlockConstants.LILY, 1).m_146271_((Object)BlockConstants.ORCHID, 1).m_146271_((Object)BlockConstants.ALLIUM, 1).m_146271_((Object)BlockConstants.AZURE, 1).m_146271_((Object)BlockConstants.OXEYE, 1).m_146270_()), (BlockPlacer)SimpleBlockPlacer.f_67529_).m_67991_(128).m_68003_();
        FOREST_GRASS = ImmutableList.of(() -> {
            final Feature f_65763_ = Feature.f_65763_;
            new RandomPatchConfiguration.GrassConfigurationBuilder((BlockStateProvider)new SimpleStateProvider(BlockConstants.MAYAPPLE), (BlockPlacer)SimpleBlockPlacer.f_67529_);
            final RandomPatchConfiguration.GrassConfigurationBuilder grassConfigurationBuilder;
            return f_65763_.m_65815_((FeatureConfiguration)grassConfigurationBuilder.m_67991_(4).m_68003_());
        }, () -> {
            final Feature f_65763_2 = Feature.f_65763_;
            new RandomPatchConfiguration.GrassConfigurationBuilder((BlockStateProvider)new SimpleStateProvider(BlockConstants.GRASS), (BlockPlacer)SimpleBlockPlacer.f_67529_);
            final RandomPatchConfiguration.GrassConfigurationBuilder grassConfigurationBuilder2;
            return f_65763_2.m_65815_((FeatureConfiguration)grassConfigurationBuilder2.m_67991_(64).m_68003_());
        }, () -> {
            final Feature f_65763_3 = Feature.f_65763_;
            new RandomPatchConfiguration.GrassConfigurationBuilder((BlockStateProvider)new SimpleStateProvider(BlockConstants.TALL_GRASS), (BlockPlacer)DoublePlantPlacer.f_67518_);
            final RandomPatchConfiguration.GrassConfigurationBuilder grassConfigurationBuilder3;
            return f_65763_3.m_65815_((FeatureConfiguration)grassConfigurationBuilder3.m_67991_(32).m_67995_().m_68003_());
        }, () -> {
            final Feature f_65763_4 = Feature.f_65763_;
            new RandomPatchConfiguration.GrassConfigurationBuilder((BlockStateProvider)new SimpleStateProvider(BlockConstants.FERN), (BlockPlacer)SimpleBlockPlacer.f_67529_);
            final RandomPatchConfiguration.GrassConfigurationBuilder grassConfigurationBuilder4;
            return f_65763_4.m_65815_((FeatureConfiguration)grassConfigurationBuilder4.m_67991_(32).m_68003_());
        }, () -> {
            final Feature f_65763_5 = Feature.f_65763_;
            new RandomPatchConfiguration.GrassConfigurationBuilder((BlockStateProvider)new SimpleStateProvider(BlockConstants.TALL_FERN), (BlockPlacer)DoublePlantPlacer.f_67518_);
            final RandomPatchConfiguration.GrassConfigurationBuilder grassConfigurationBuilder5;
            return f_65763_5.m_65815_((FeatureConfiguration)grassConfigurationBuilder5.m_67991_(16).m_67995_().m_68003_());
        });
        OTHER_GRASS = ImmutableList.of(() -> {
            final Feature f_65763_6 = Feature.f_65763_;
            new RandomPatchConfiguration.GrassConfigurationBuilder((BlockStateProvider)new SimpleStateProvider(BlockConstants.GRASS), (BlockPlacer)SimpleBlockPlacer.f_67529_);
            final RandomPatchConfiguration.GrassConfigurationBuilder grassConfigurationBuilder6;
            return f_65763_6.m_65815_((FeatureConfiguration)grassConfigurationBuilder6.m_67991_(64).m_68003_());
        }, () -> {
            final Feature f_65763_7 = Feature.f_65763_;
            new RandomPatchConfiguration.GrassConfigurationBuilder((BlockStateProvider)new SimpleStateProvider(BlockConstants.TALL_GRASS), (BlockPlacer)DoublePlantPlacer.f_67518_);
            final RandomPatchConfiguration.GrassConfigurationBuilder grassConfigurationBuilder7;
            return f_65763_7.m_65815_((FeatureConfiguration)grassConfigurationBuilder7.m_67991_(32).m_67995_().m_68003_());
        }, () -> {
            final Feature f_65763_8 = Feature.f_65763_;
            new RandomPatchConfiguration.GrassConfigurationBuilder((BlockStateProvider)new SimpleStateProvider(BlockConstants.FERN), (BlockPlacer)SimpleBlockPlacer.f_67529_);
            final RandomPatchConfiguration.GrassConfigurationBuilder grassConfigurationBuilder8;
            return f_65763_8.m_65815_((FeatureConfiguration)grassConfigurationBuilder8.m_67991_(32).m_68003_());
        }, () -> {
            final Feature f_65763_9 = Feature.f_65763_;
            new RandomPatchConfiguration.GrassConfigurationBuilder((BlockStateProvider)new SimpleStateProvider(BlockConstants.TALL_FERN), (BlockPlacer)DoublePlantPlacer.f_67518_);
            final RandomPatchConfiguration.GrassConfigurationBuilder grassConfigurationBuilder9;
            return f_65763_9.m_65815_((FeatureConfiguration)grassConfigurationBuilder9.m_67991_(16).m_67995_().m_68003_());
        });
        GRASS_PLACER = TwilightFeatures.registerWorldFeature(TwilightForestMod.prefix("grass_placer"), (net.minecraft.world.level.levelgen.feature.ConfiguredFeature<?, ?>)((ConfiguredFeature)((ConfiguredFeature)((ConfiguredFeature)Feature.f_65755_.m_65815_((FeatureConfiguration)new SimpleRandomFeatureConfiguration((List)ConfiguredFeatures.OTHER_GRASS)).m_158243_((IntProvider)UniformInt.m_146622_(1, 4))).m_7679_(Features.Decorators.f_127090_).m_7679_(Features.Decorators.f_127086_).m_64152_()).m_64158_(30)).m_158241_(3));
        FOREST_GRASS_PLACER = TwilightFeatures.registerWorldFeature(TwilightForestMod.prefix("forest_grass_placer"), (net.minecraft.world.level.levelgen.feature.ConfiguredFeature<?, ?>)((ConfiguredFeature)((ConfiguredFeature)((ConfiguredFeature)Feature.f_65755_.m_65815_((FeatureConfiguration)new SimpleRandomFeatureConfiguration((List)ConfiguredFeatures.FOREST_GRASS)).m_158243_((IntProvider)UniformInt.m_146622_(1, 4))).m_7679_(Features.Decorators.f_127090_).m_7679_(Features.Decorators.f_127086_).m_64152_()).m_64158_(30)).m_158241_(3));
        FLOWER_PLACER = TwilightFeatures.registerWorldFeature(TwilightForestMod.prefix("flower_placer"), (net.minecraft.world.level.levelgen.feature.ConfiguredFeature<?, ?>)((ConfiguredFeature)((ConfiguredFeature)Feature.f_65761_.m_65815_((FeatureConfiguration)ConfiguredFeatures.SMALL_FLOWER_CONFIG).m_7679_(Features.Decorators.f_127090_).m_7679_(Features.Decorators.f_127086_).m_64152_()).m_64158_(25)).m_158241_(15));
        TFMUSICTYPE = new Music(TFSounds.MUSIC, 1200, 12000, true);
    }
}
